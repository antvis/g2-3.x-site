{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-46-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/gallery/line","result":{"data":{"site":{"siteMetadata":{"title":"G2","githubUrl":"https://github.com/antvis/g2","examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"line","icon":"line","title":{"zh":"折线图","en":"Line Chart"}},{"slug":"column","icon":"column","title":{"zh":"柱状图","en":"Column Chart"}},{"slug":"bar","icon":"bar","title":{"zh":"条形图","en":"Bar Chart"}},{"slug":"pie","icon":"pie","title":{"zh":"饼图","en":"Pie Chart"}},{"slug":"point","icon":"point","title":{"zh":"点图","en":"Point Chart"}},{"slug":"area","icon":"area","title":{"zh":"面积图","en":"Area Chart"}},{"slug":"box","icon":"box","title":{"zh":"箱型图","en":"Box Chart"}},{"slug":"candlestick","icon":"candlestick","title":{"zh":"烛形图","en":"K Chart"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"Heatmap"}},{"slug":"gauge","icon":"gauge","title":{"zh":"仪表盘","en":"Gauges"}},{"slug":"funnel","icon":"funnel","title":{"zh":"漏斗图","en":"Funnel Chart"}},{"slug":"map","icon":"map","title":{"zh":"地图","en":"Maps"}},{"slug":"radar","icon":"radar","title":{"zh":"雷达图","en":"Radar Chart"}},{"slug":"facet","icon":"facet","title":{"zh":"分面","en":"Facets"}},{"slug":"relation","icon":"relation","title":{"zh":"关系图","en":"Relation Chart"}},{"slug":"other","icon":"other","title":{"zh":"其他图表","en":"Other Chart"}},{"slug":"component","icon":"component","title":{"zh":"组件使用","en":"Chart Components"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":"<!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"UTF-8\">\n            <title>{{title}}</title>\n          </head>\n          <body>\n            <div id=\"container\" />\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.g2-3.5.11/dist/g2.min.js\"></script>\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.10.2/dist/data-set.min.js\"></script>\n            <script>\n        {{code}}\n            </script>\n          </body>\n        </html>"}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"html":"","fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/relation/relation"},"frontmatter":{"title":"Graph","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/radar/radar"},"frontmatter":{"title":"Radar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/relation/relation"},"frontmatter":{"title":"关系图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.zh.md"}}},{"node":{"html":"<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>雷达图是以相同点开始的轴上表示的三个或更多个定量变量的二维图形的形式显示多变量数据的图形方法。轴的相对位置和角度通常是不知情的。</p>","fields":{"slug":"/zh/examples/radar/radar"},"frontmatter":{"title":"雷达图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"html":"<p>Scatter Chart，也叫 X-Y 图，它将所有的数据以点的形式展现在笛卡尔坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。数据的相关关系主要分为：正相关（两个变量值同时增长）、负相关（一个变量值增加另一个变量值下降）、不相关、线性相关、指数相关等，表现在散点图上的大致分布如下图所示。那些离点集群较远的点我们称为离群点或者异常点。</p>","fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/other/other"},"frontmatter":{"title":"Others","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/other/other"},"frontmatter":{"title":"其他图表","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/basic"},"frontmatter":{"title":"Basic Pie Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.en.md"}}},{"node":{"html":"<p>饼图广泛得应用在各个领域，用于表示不同分类的占比情况，通过弧度大小来对比各种分类。饼图通过将一个圆饼按照分类的占比划分成多个区块，整个圆饼代表数据的总量，每个区块（圆弧）表示该分类占总体的比例大小，所有区块（圆弧）的加和等于 100%。可以很好地帮助用户快速了解数据的占比分配。</p>","fields":{"slug":"/zh/examples/pie/basic"},"frontmatter":{"title":"基础饼图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/map/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/map/map"},"frontmatter":{"title":"Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.en.md"}}},{"node":{"html":"<p>Basic Line Chart，基础折线图。折线图用于显示数据在一个连续的时间间隔或者时间跨度上的变化，它的特点是反映事物随时间或有序类别而变化的趋势。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>在折线图中，数据是递增还是递减、增减的速率、增减的规律（周期性、螺旋性等）、峰值等特征都可以清晰地反映出来。所以，折线图常用来分析数据随时间的变化趋势，也可用来分析多组数据随时间变化的相互作用和相互影响。例如可用来分析某类商品或是某几类相关的商品随时间变化的销售情况，从而进一步预测未来的销售情况。在折线图中，一般水平轴（X轴）用来表示时间的推移，并且间隔相同；而垂直轴（Y轴）代表不同时刻的数据的大小。</p>","fields":{"slug":"/zh/examples/line/basic"},"frontmatter":{"title":"基础折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/basic"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"Heatmap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gauge/gauge"},"frontmatter":{"title":"Gauge","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.en.md"}}},{"node":{"html":"<p>热力图，由小色块有序且紧凑的组成的图表。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>特别适合用于直接对数据量较大的、相对原始的数据进行分析。比如：生物基因科学领域，色块图常被用于微阵列数据分析。</p>","fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"热力图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"html":"<h2 id=\"如何使用\" style=\"position:relative;\"><a href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\" aria-label=\"如何使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何使用</h2>\n<p>仪表盘(Gauge)是一种拟物化的图表，刻度表示度量，指针表示维度，指针角度表示数值。仪表盘图表就像汽车的速度表一样，有一个圆形的表盘及相应的刻度，有一个指针指向当前数值。目前很多的管理报表或报告上都是用这种图表，以直观的表现出某个指标的进度或实际情况。仪表盘的好处在于它能跟人们的常识结合，使大家马上能理解看什么、怎么看。拟物化的方式使图标变得更友好更人性化，正确使用可以提升用户体验。</p>","fields":{"slug":"/zh/examples/gauge/gauge"},"frontmatter":{"title":"仪表盘","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/facet/facet"},"frontmatter":{"title":"分面","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/facet/facet"},"frontmatter":{"title":"Facet","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/line"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/line"},"frontmatter":{"title":"折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/funnel/funnel"},"frontmatter":{"title":"Funnel Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.en.md"}}},{"node":{"html":"<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>漏斗图适用于业务流程比较规范、周期长、环节多的单流程单向分析，通过漏斗各环节业务数据的比较能够直观地发现和说明问题所在的环节，进而做出决策。漏斗图用梯形面积表示某个环节业务量与上一个环节之间的差异。漏斗图从上到下，有逻辑上的顺序关系，表现了随着业务流程的推进业务目标完成的情况。</p>","fields":{"slug":"/zh/examples/funnel/funnel"},"frontmatter":{"title":"漏斗图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/component/component"},"frontmatter":{"title":"Chart Components","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/component/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/component/component"},"frontmatter":{"title":"图表组件","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/component/index.zh.md"}}},{"node":{"html":"<p>烛形图，原名 K 线图，蜡烛图，又称阴阳图、棒线、红黑线或蜡烛线，常用于展示股票交易数据。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>烛形图主要用于金融领域里展示股票，期货等交易数据，按照时间维度分为日 K 线、周 K 线、月 K 线。展示的数据需要满足 K 线构成的四要素：即开盘价、收盘价、最高价、最低价。</p>","fields":{"slug":"/zh/examples/candlestick/candlestick"},"frontmatter":{"title":"烛形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/basic"},"frontmatter":{"title":"Basic Column Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/candlestick/candlestick"},"frontmatter":{"title":"K Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.en.md"}}},{"node":{"html":"<p>基础柱状图，使用垂直的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>柱状图有别于直方图，柱状图无法显示数据在一个区间内的连续变化趋势。柱状图描述的是分类数据，回答的是每一个分类中“有多少？”这个问题。 需要注意的是，当柱状图显示的分类很多时会导致分类名层叠等显示问题。</p>","fields":{"slug":"/zh/examples/column/basic"},"frontmatter":{"title":"基础柱状图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/box/box"},"frontmatter":{"title":"Box Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.en.md"}}},{"node":{"html":"<p>箱型图，又称盒须图、盒式图或箱线图，是一种用作显示一组数据分布情况的统计图。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>如果一个数据集中包含了一个分类变量和一个或者多个连续变量，那么你可能会想知道连续变量会如何随着分类变量水平的变化而变化，而箱形图就可以提供这种方法，它只用了5个数字对分布进行概括，即一组数据的最大值、最小值、中位数、下四分位数及上四分位数。对于数据集中的异常值，通常会以单独的点的形式绘制。箱形图可以水平或者垂直绘制。箱形图多用于数值统计，虽然相比于直方图和密度曲线较原始简单，但是它不需要占据过多的画布空间，空间利用率高，非常适用于比较多组数据的分布情况。</p>","fields":{"slug":"/zh/examples/box/box"},"frontmatter":{"title":"箱型图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/basic"},"frontmatter":{"title":"Basic Bar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.en.md"}}},{"node":{"html":"<p>使用水平的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>对比分类数据的数值大小，当分类情况过多时，柱状图的文本为了排布合理，需要进行旋转，不利于阅读，相比于纵向柱状图，横向柱状图更适用于此类分类较多的场景。</p>","fields":{"slug":"/zh/examples/bar/basic"},"frontmatter":{"title":"基础条形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/basic"},"frontmatter":{"title":"Area Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.en.md"}}},{"node":{"html":"<p>面积图又叫区域图。 它是在折线图的基础之上形成的, 它将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充，这样一个填充区域我们叫做面积，颜色的填充可以更好的突出趋势信息。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>面积图用于强调数量随时间而变化的程度，也可用于引起人们对总值趋势的注意。他们最常用于表现趋势和关系,而不是传达特定的值。</p>","fields":{"slug":"/zh/examples/area/basic"},"frontmatter":{"title":"面积图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/donut"},"frontmatter":{"title":"Donut Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.en.md"}}},{"node":{"html":"<p>环图，其本质是饼图将中间区域挖空。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>饼图的整体性太强，我们会将注意力集中在比较饼图内各个扇形之间占整体比重的关系。但如果我们将两个饼图放在一起，饼图很难同时对比两个图。环图在解决上述问题时，采用了让我们更关注长度而不是面积的做法。这样我们就能相对简单的对比不同的环图。同时环图相对于饼图空间的利用率更高，比如我们可以使用它的空心区域显示文本信息，比如标题等。</p>","fields":{"slug":"/zh/examples/pie/donut"},"frontmatter":{"title":"环图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.zh.md"}}},{"node":{"html":"<p>双折线图。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>用于比对两组数据的趋势。</p>","fields":{"slug":"/zh/examples/line/double"},"frontmatter":{"title":"双折线图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/double/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/double"},"frontmatter":{"title":"Double Line Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/double/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/column"},"frontmatter":{"title":"柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/column"},"frontmatter":{"title":"Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/dodge"},"frontmatter":{"title":"Grouped Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/column/dodge"},"frontmatter":{"title":"分组柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/dodge"},"frontmatter":{"title":"Grouped Bar Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/bar/dodge"},"frontmatter":{"title":"分组条形图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/stacked"},"frontmatter":{"title":"Stacked Area Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.en.md"}}},{"node":{"html":"<p>和基本面积图一样，唯一的区别就是图上每一个数据集的起点不同，起点是基于前一个数据集的，用于显示每个数值所占大小随时间或类别变化的趋势线，展示的是部分与整体的关系。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>层叠面积图上的最大的面积代表了所有的数据量的总和，是一个整体。各个叠起来的面积表示各个数据量的大小，这些堆叠起来的面积图在表现大数据的总量分量的变化情况时格外有用，所以层叠面积图不适用于表示带有负值的数据集。非常适用于对比多变量随时间变化的情况。</p>","fields":{"slug":"/zh/examples/area/stacked"},"frontmatter":{"title":"堆叠面积图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.zh.md"}}},{"node":{"html":"<p>南丁格尔玫瑰图，又名鸡冠花图、极坐标区域图，是南丁格尔在克里米亚战争期间提交的一份关于士兵死伤的报告时发明的一种图表,是在极坐标下绘制的柱状图，使用圆弧的半径长短表示数据的大小（数量的多少）。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>由于半径和面积的关系是平方的关系，南丁格尔玫瑰图会将数据的比例大小夸大，尤其适合对比大小相近的数值；由于圆形有周期的特性，所以玫瑰图也适用于表示一个周期内的时间概念，比如星期、月份。</p>","fields":{"slug":"/zh/examples/pie/rose"},"frontmatter":{"title":"南丁格尔玫瑰图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/rose"},"frontmatter":{"title":"Nightingale Rose Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/multiple"},"frontmatter":{"title":"multiple line chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/line/multiple"},"frontmatter":{"title":"多折线图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/bar"},"frontmatter":{"title":"Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/bar"},"frontmatter":{"title":"条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/stack"},"frontmatter":{"title":"Stacked Column Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/column/stack"},"frontmatter":{"title":"堆叠柱状图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/bar/stack"},"frontmatter":{"title":"堆叠条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/stack"},"frontmatter":{"title":"Stacked Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/range"},"frontmatter":{"title":"Range Area Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/area/range"},"frontmatter":{"title":"区间面积图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/pie/nested"},"frontmatter":{"title":"嵌套饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/nested"},"frontmatter":{"title":"Nested Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/step"},"frontmatter":{"title":"Step Line Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.en.md"}}},{"node":{"html":"<p>阶梯线图（也称为步骤图）是与线图相似的​​图表，但是线在数据点之间形成一系列步骤。当您要显示以不规则间隔发生的更改时，分阶线图可能很有用。例如，奶制品价格上涨，汽油，税率，利率等。</p>","fields":{"slug":"/zh/examples/line/step"},"frontmatter":{"title":"阶梯折线图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/pie"},"frontmatter":{"title":"Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/pie"},"frontmatter":{"title":"饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/histogram"},"frontmatter":{"title":"Histogram","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.en.md"}}},{"node":{"html":"<p>直方图牵涉统计学的概念，首先要对数据进行分组，然后统计每个分组内数据元的数量。 在平面直角坐标系中，横轴标出每个组的端点，纵轴表示频数，每个矩形的高代表对应的频数，称这样的统计图为频数分布直方图。频数分布直方图需要经过频数乘以组距的计算过程才能得出每个分组的数量，同一个直方图的组距是一个固定不变的值，所以如果直接用纵轴表示数量，每个矩形的高代表对应的数据元数量，既能保持分布状态不变，又能直观的看出每个分组的数量。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>直方图主要用于显示各组频数或数量分布的情况以及各组之间频数或数量的差别，通过直方图还可以观察和估计哪些数据比较集中，异常或者孤立的数据分布在何处。</p>","fields":{"slug":"/zh/examples/column/histogram"},"frontmatter":{"title":"直方图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/area"},"frontmatter":{"title":"Area Chart","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/area"},"frontmatter":{"title":"面积图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/gauge"},"frontmatter":{"title":"Gauge","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/gauge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/gauge"},"frontmatter":{"title":"仪表盘","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/gauge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/facet"},"frontmatter":{"title":"分面","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/facet"},"frontmatter":{"title":"Facet","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.en.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"gallery/line/demo/line1.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line1.js","order":0,"filename":"line1.js","title":{"zh":"全球恐怖袭击致死人数趋势分析","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*lfyJS4MckAoAAAAAAAAAAABkARQnAQ","source":"fetch('../data/terrorism.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet();\n    const dv1 = ds.createView().source(data);\n    dv1.transform({\n      type: 'map',\n      callback: function callback(row) {\n        if (typeof (row.Deaths) === 'string') {\n          row.Deaths = row.Deaths.replace(',', '');\n        }\n        row.Deaths = parseInt(row.Deaths);\n        row.death = row.Deaths;\n        row.year = row.Year;\n        return row;\n      }\n    });\n    const dv2 = ds.createView().source(dv1.rows);\n    dv2.transform({\n      type: 'regression',\n      method: 'polynomial',\n      fields: [ 'year', 'death' ],\n      bandwidth: 0.1,\n      as: [ 'year', 'death' ]\n    });\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 20, 50, 50 ]\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    const view1 = chart.view();\n    view1.source(dv1);\n    view1.axis('Year', {\n      subTickCount: 3,\n      subTickLine: {\n        length: 3,\n        stroke: '#bfbfbf',\n        lineWidth: 1\n      },\n      tickLine: {\n        length: 6,\n        lineWidth: 1,\n        stroke: '#bfbfbf'\n      },\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    view1.axis('Deaths', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        },\n        formatter: text => {\n          return text.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n        }\n      }\n    });\n    view1.line().position('Year*Deaths');\n    const view2 = chart.view();\n    view2.axis(false);\n    view2.source(dv2);\n    view2.line().position('year*death').style({\n      stroke: '#969696',\n      lineDash: [ 3, 3 ]\n    })\n    .tooltip(false);\n    // add guide\n    view1.guide().text({\n      content: '趋势线',\n      position: [ '1970', 2500 ],\n      style: {\n        fill: '#8c8c8c',\n        fontSize: 14,\n        fontWeight: 300\n      },\n      offsetY: -70\n    });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line1 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/terrorism.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new DataSet();\n    var dv1 = ds.createView().source(data);\n    dv1.transform({\n      type: 'map',\n      callback: function callback(row) {\n        if (typeof row.Deaths === 'string') {\n          row.Deaths = row.Deaths.replace(',', '');\n        }\n\n        row.Deaths = parseInt(row.Deaths);\n        row.death = row.Deaths;\n        row.year = row.Year;\n        return row;\n      }\n    });\n    var dv2 = ds.createView().source(dv1.rows);\n    dv2.transform({\n      type: 'regression',\n      method: 'polynomial',\n      fields: ['year', 'death'],\n      bandwidth: 0.1,\n      as: ['year', 'death']\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 20, 50, 50]\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    var view1 = chart.view();\n    view1.source(dv1);\n    view1.axis('Year', {\n      subTickCount: 3,\n      subTickLine: {\n        length: 3,\n        stroke: '#bfbfbf',\n        lineWidth: 1\n      },\n      tickLine: {\n        length: 6,\n        lineWidth: 1,\n        stroke: '#bfbfbf'\n      },\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    view1.axis('Deaths', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        },\n        formatter: function formatter(text) {\n          return text.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n        }\n      }\n    });\n    view1.line().position('Year*Deaths');\n    var view2 = chart.view();\n    view2.axis(false);\n    view2.source(dv2);\n    view2.line().position('year*death').style({\n      stroke: '#969696',\n      lineDash: [3, 3]\n    }).tooltip(false); // add guide\n\n    view1.guide().text({\n      content: '趋势线',\n      position: ['1970', 2500],\n      style: {\n        fill: '#8c8c8c',\n        fontSize: 14,\n        fontWeight: 300\n      },\n      offsetY: -70\n    });\n    chart.render();\n  });\n});"},{"relativePath":"gallery/line/demo/line2.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line2.js","order":1,"filename":"line2.js","title":{"zh":"某产品国内销售趋势","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*ILc3Q76vLhUAAAAAAAAAAABkARQnAQ","source":"fetch('../data/salesTrend.json')\n  .then(res => res.json())\n  .then(data => {\n    const TICKS = [ '2012-09', '2013-05', '2014-01', '2014-09', '2015-05', '2016-01', '2016-09', '2017-05', '2018-02' ];\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 50, 20, 50, 20 ]\n    });\n    chart.source(data, {\n      date: {\n        ticks: TICKS\n      }\n    });\n    chart.legend(false);\n    chart.axis('buyin', false);\n    chart.axis('date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.line().position('date*buyin');\n    chart.point().position('date*buyin')\n      .size('date', val => {\n        if (TICKS.indexOf(val) >= 0) {\n          return 3;\n        }\n        return 0;\n      })\n      .label('date*buyin', (date, buyin) => {\n        if (TICKS.indexOf(date) >= 0) {\n          return buyin + '万';\n        }\n        return '';\n      }, {\n        textStyle: {\n          fill: '#7a7a7a',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2,\n          fontWeight: 300\n        }\n      })\n      .style({ lineWidth: 2 });\n\n    chart.guide().line({\n      top: true,\n      start: [ '2012-09', 5396 ],\n      end: [ '2018-02', 5396 ],\n      lineStyle: {\n        stroke: '#595959',\n        lineWidth: 1,\n        lineDash: [ 3, 3 ]\n      },\n      text: {\n        position: 'start',\n        style: {\n          fill: '#8c8c8c',\n          fontSize: 12,\n          fontWeight: 300\n        },\n        content: '均值线 5,396万',\n        offsetY: -5\n      }\n    });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line2 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/salesTrend.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var TICKS = ['2012-09', '2013-05', '2014-01', '2014-09', '2015-05', '2016-01', '2016-09', '2017-05', '2018-02'];\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [50, 20, 50, 20]\n    });\n    chart.source(data, {\n      date: {\n        ticks: TICKS\n      }\n    });\n    chart.legend(false);\n    chart.axis('buyin', false);\n    chart.axis('date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.line().position('date*buyin');\n    chart.point().position('date*buyin').size('date', function (val) {\n      if (TICKS.indexOf(val) >= 0) {\n        return 3;\n      }\n\n      return 0;\n    }).label('date*buyin', function (date, buyin) {\n      if (TICKS.indexOf(date) >= 0) {\n        return buyin + '万';\n      }\n\n      return '';\n    }, {\n      textStyle: {\n        fill: '#7a7a7a',\n        fontSize: 12,\n        stroke: 'white',\n        lineWidth: 2,\n        fontWeight: 300\n      }\n    }).style({\n      lineWidth: 2\n    });\n    chart.guide().line({\n      top: true,\n      start: ['2012-09', 5396],\n      end: ['2018-02', 5396],\n      lineStyle: {\n        stroke: '#595959',\n        lineWidth: 1,\n        lineDash: [3, 3]\n      },\n      text: {\n        position: 'start',\n        style: {\n          fill: '#8c8c8c',\n          fontSize: 12,\n          fontWeight: 300\n        },\n        content: '均值线 5,396万',\n        offsetY: -5\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"gallery/line/demo/line3.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line3.js","order":2,"filename":"line3.js","title":{"zh":"余额宝七日年化收益率","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*2EIxT5j0BlQAAAAAAAAAAABkARQnAQ","source":"fetch('../data/income.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 20, 70, 20 ]\n    });\n    chart.source(data);\n    chart.scale('time', {\n      range: [ 0, 1 ]\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('rate', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.line().position('time*rate');\n    chart.guide().dataMarker({\n      position: [ '2014-01-03', 6.763 ],\n      content: '受稳健货币政策影响，协定存款利\\n率居高不下,收益率达6.763%',\n      style: {\n        text: {\n          textAlign: 'left',\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      position: [ '2013-05-31', 2.093 ],\n      content: '余额宝刚成立时，并未达到目标资产\\n配置，故收益率较低',\n      style: {\n        text: {\n          textAlign: 'left',\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      position: [ '2016-09-04', 2.321 ],\n      content: '受积极货币政策的影响，收益率降\\n到历史最低2.321%',\n      lineLength: 30,\n      autoAdjust: false,\n      style: {\n        text: {\n          textAlign: 'right',\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataRegion({\n      start: [ '2016-12-02', 2.517 ],\n      end: [ '2017-03-24', 3.83 ],\n      content: '',\n      lineLength: 50\n    }).dataMarker({\n      position: [ '2016-12-02', 2.517 ],\n      content: '宏观经济过热，受稳健货币政策影\\n响，余额宝收益率随之上升',\n      lineLength: 130,\n      autoAdjust: false,\n      style: {\n        text: {\n          textAlign: 'left'\n        }\n      }\n    })\n    .dataMarker({\n      position: [ '2017-03-24', 3.83 ],\n      content: '',\n      lineLength: 50\n    });\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line3 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/income.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 20, 70, 20]\n    });\n    chart.source(data);\n    chart.scale('time', {\n      range: [0, 1]\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('rate', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.line().position('time*rate');\n    chart.guide().dataMarker({\n      position: ['2014-01-03', 6.763],\n      content: '受稳健货币政策影响，协定存款利\\n率居高不下,收益率达6.763%',\n      style: {\n        text: {\n          textAlign: 'left',\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      position: ['2013-05-31', 2.093],\n      content: '余额宝刚成立时，并未达到目标资产\\n配置，故收益率较低',\n      style: {\n        text: {\n          textAlign: 'left',\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      position: ['2016-09-04', 2.321],\n      content: '受积极货币政策的影响，收益率降\\n到历史最低2.321%',\n      lineLength: 30,\n      autoAdjust: false,\n      style: {\n        text: {\n          textAlign: 'right',\n          stroke: '#fff',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataRegion({\n      start: ['2016-12-02', 2.517],\n      end: ['2017-03-24', 3.83],\n      content: '',\n      lineLength: 50\n    }).dataMarker({\n      position: ['2016-12-02', 2.517],\n      content: '宏观经济过热，受稳健货币政策影\\n响，余额宝收益率随之上升',\n      lineLength: 130,\n      autoAdjust: false,\n      style: {\n        text: {\n          textAlign: 'left'\n        }\n      }\n    }).dataMarker({\n      position: ['2017-03-24', 3.83],\n      content: '',\n      lineLength: 50\n    });\n    chart.render();\n  });\n});"},{"relativePath":"gallery/line/demo/line4.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line4.js","order":3,"filename":"line4.js","title":{"zh":"某网站访问趋势","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*WTsLS5NJop4AAAAAAAAAAABkARQnAQ","source":"fetch('../data/basement.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 50, 50, 50 ]\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('UV', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.source(data, {\n      time: {\n        tickCount: 5\n      },\n      UV: {\n        tickCount: 5\n      }\n    });\n    chart.line().position('time*UV');\n    // guide\n    const max_min = findMaxMin();\n    const max = max_min.max;\n    const min = max_min.min;\n    chart.guide().dataMarker({\n      top: true,\n      content: '峰值：' + max.UV,\n      position: [ max.time, max.UV ],\n      style: {\n        text: {\n          fontSize: 13,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      },\n      lineLength: 30\n    });\n    chart.guide().dataMarker({\n      top: true,\n      content: '谷值：' + min.UV,\n      position: [ min.time, min.UV ],\n      style: {\n        text: {\n          fontSize: 13,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      },\n      lineLength: 50\n    });\n    chart.guide().region({\n      start: [ '2018-09-01', 'min' ],\n      end: [ '2018-09-02', 'max' ]\n    });\n    chart.guide().region({\n      start: [ '2018-09-08', 'min' ],\n      end: [ '2018-09-09', 'max' ]\n    });\n    chart.guide().region({\n      start: [ '2018-09-15', 'min' ],\n      end: [ '2018-09-16', 'max' ]\n    });\n    chart.guide().region({\n      start: [ '2018-09-22', 'min' ],\n      end: [ '2018-09-24', 'max' ]\n    });\n    chart.render();\n\n    function findMaxMin() {\n      let maxValue = 0;\n      let minValue = 50000;\n      let maxObj = null;\n      let minObj = null;\n      for (let i = 0; i < data.length; i++) {\n        const d = data[i];\n        if (d.UV > maxValue) {\n          maxValue = d.UV;\n          maxObj = d;\n        }\n        if (d.UV < minValue) {\n          minValue = d.UV;\n          minObj = d;\n        }\n      }\n      return { max: maxObj, min: minObj };\n    }\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line4 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/basement.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 50, 50, 50]\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('UV', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.source(data, {\n      time: {\n        tickCount: 5\n      },\n      UV: {\n        tickCount: 5\n      }\n    });\n    chart.line().position('time*UV'); // guide\n\n    var max_min = findMaxMin();\n    var max = max_min.max;\n    var min = max_min.min;\n    chart.guide().dataMarker({\n      top: true,\n      content: '峰值：' + max.UV,\n      position: [max.time, max.UV],\n      style: {\n        text: {\n          fontSize: 13,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      },\n      lineLength: 30\n    });\n    chart.guide().dataMarker({\n      top: true,\n      content: '谷值：' + min.UV,\n      position: [min.time, min.UV],\n      style: {\n        text: {\n          fontSize: 13,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      },\n      lineLength: 50\n    });\n    chart.guide().region({\n      start: ['2018-09-01', 'min'],\n      end: ['2018-09-02', 'max']\n    });\n    chart.guide().region({\n      start: ['2018-09-08', 'min'],\n      end: ['2018-09-09', 'max']\n    });\n    chart.guide().region({\n      start: ['2018-09-15', 'min'],\n      end: ['2018-09-16', 'max']\n    });\n    chart.guide().region({\n      start: ['2018-09-22', 'min'],\n      end: ['2018-09-24', 'max']\n    });\n    chart.render();\n\n    function findMaxMin() {\n      var maxValue = 0;\n      var minValue = 50000;\n      var maxObj = null;\n      var minObj = null;\n\n      for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n\n        if (d.UV > maxValue) {\n          maxValue = d.UV;\n          maxObj = d;\n        }\n\n        if (d.UV < minValue) {\n          minValue = d.UV;\n          minObj = d;\n        }\n      }\n\n      return {\n        max: maxObj,\n        min: minObj\n      };\n    }\n  });\n});"},{"relativePath":"gallery/line/demo/line5.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line5.js","order":4,"filename":"line5.js","title":{"zh":"某网站24小时UV趋势","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*5r3LRpp3ZQgAAAAAAAAAAABkARQnAQ","source":"fetch('../data/siteUV.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 90, 50, 50 ]\n    });\n    const ds = new DataSet();\n    const dv = ds.createView().source(data);\n    dv.transform({\n      type: 'map',\n      callback: function callback(row) {\n        const times = row.Time.split(' ');\n        row.date = times[0];\n        row.time = times[1];\n        return row;\n      }\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('Count', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        },\n        formatter: text => {\n          return text.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.legend({\n      attachLast: true\n    });\n    chart.source(dv, {\n      time: {\n        tickCount: 12\n      },\n      date: {\n        type: 'cat'\n      }\n    });\n    chart.line().position('time*Count').color('date', [ '#d9d9d9', '#1890ff' ]);\n    chart.guide().dataMarker({\n      position: [ '13:00', 0 ],\n      lineLength: 30,\n      content: '服务器宕机\\n低值：0',\n      style: {\n        text: {\n          textAlign: 'left',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      position: [ '14:00', 4180 ],\n      lineLength: 20,\n      content: '宕机导致服务积压，恢复后达峰值\\n高值：4108',\n      style: {\n        text: {\n          textAlign: 'left',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line5 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/siteUV.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 90, 50, 50]\n    });\n    var ds = new DataSet();\n    var dv = ds.createView().source(data);\n    dv.transform({\n      type: 'map',\n      callback: function callback(row) {\n        var times = row.Time.split(' ');\n        row.date = times[0];\n        row.time = times[1];\n        return row;\n      }\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('Count', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        },\n        formatter: function formatter(text) {\n          return text.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.legend({\n      attachLast: true\n    });\n    chart.source(dv, {\n      time: {\n        tickCount: 12\n      },\n      date: {\n        type: 'cat'\n      }\n    });\n    chart.line().position('time*Count').color('date', ['#d9d9d9', '#1890ff']);\n    chart.guide().dataMarker({\n      position: ['13:00', 0],\n      lineLength: 30,\n      content: '服务器宕机\\n低值：0',\n      style: {\n        text: {\n          textAlign: 'left',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      position: ['14:00', 4180],\n      lineLength: 20,\n      content: '宕机导致服务积压，恢复后达峰值\\n高值：4108',\n      style: {\n        text: {\n          textAlign: 'left',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"gallery/line/demo/line6.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line6.js","order":5,"filename":"line6.js","title":{"zh":"blockchain 和 NLP 全球搜索趋势对比","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*shU0Sq6Eq7sAAAAAAAAAAABkARQnAQ","source":"fetch('../data/blockchain.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 30, 20, 70, 30 ]\n    });\n\n    chart.axis('date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('blockchain', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('nlp', false);\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.legend({\n      position: 'top-center'\n    });\n\n    chart.source(data, {\n      nlp: {\n        min: 0,\n        max: 100\n      },\n      blockchain: {\n        min: 0,\n        max: 100\n      }\n    });\n    chart.line().position('date*blockchain').color('#1890ff');\n    chart.line().position('date*nlp').color('#2fc25b');\n    chart.guide().dataMarker({\n      top: true,\n      position: [ '2016-02-28', 9 ],\n      lineLength: 30,\n      content: 'Blockchain 首超 NLP',\n      style: {\n        text: {\n          textAlign: 'left',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2,\n          fontWeight: 10\n        },\n        point: {\n          stroke: '#2fc25b',\n          r: 4\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      top: true,\n      position: [ '2017-12-17', 100 ],\n      lineLength: 30,\n      content: '2017-12-17, 受比特币影响，\\n blockchain搜索热度达到顶峰\\n峰值：100',\n      style: {\n        text: {\n          textAlign: 'right',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2,\n          fontWeight: 10\n        },\n        point: {\n          r: 4\n        },\n        line: {\n          stroke: '#A3B1BF',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line6 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/blockchain.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [30, 20, 70, 30]\n    });\n    chart.axis('date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('blockchain', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('nlp', false);\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.legend({\n      position: 'top-center'\n    });\n    chart.source(data, {\n      nlp: {\n        min: 0,\n        max: 100\n      },\n      blockchain: {\n        min: 0,\n        max: 100\n      }\n    });\n    chart.line().position('date*blockchain').color('#1890ff');\n    chart.line().position('date*nlp').color('#2fc25b');\n    chart.guide().dataMarker({\n      top: true,\n      position: ['2016-02-28', 9],\n      lineLength: 30,\n      content: 'Blockchain 首超 NLP',\n      style: {\n        text: {\n          textAlign: 'left',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2,\n          fontWeight: 10\n        },\n        point: {\n          stroke: '#2fc25b',\n          r: 4\n        }\n      }\n    });\n    chart.guide().dataMarker({\n      top: true,\n      position: ['2017-12-17', 100],\n      lineLength: 30,\n      content: '2017-12-17, 受比特币影响，\\n blockchain搜索热度达到顶峰\\n峰值：100',\n      style: {\n        text: {\n          textAlign: 'right',\n          fontSize: 12,\n          stroke: 'white',\n          lineWidth: 2,\n          fontWeight: 10\n        },\n        point: {\n          r: 4\n        },\n        line: {\n          stroke: '#A3B1BF',\n          lineWidth: 2\n        }\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"gallery/line/demo/line7.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line7.js","order":6,"filename":"line7.js","title":{"zh":"任天堂游戏销售趋势","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*ZLpZTbrMg5gAAAAAAAAAAABkARQnAQ","source":"fetch('../data/nintendo.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 30, 20, 50, 30 ]\n    });\n    chart.axis('Date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        },\n        formatter: text => {\n          const dataStrings = text.split('.');\n          return dataStrings[2] + '-' + dataStrings[1] + '-' + dataStrings[0];\n        }\n      }\n    });\n    chart.axis('Close', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.source(data, {\n      Date: {\n        tickCount: 10\n      }\n    });\n    chart.line().position('Date*Close');\n    // guide\n    const max_min = findMaxMin();\n    const max = max_min.max;\n    const min = max_min.min;\n    chart.guide().dataMarker({\n      top: true,\n      content: '全部峰值：' + max.Close,\n      position: [ max.Date, max.Close ],\n      style: {\n        text: {\n          fontSize: 12\n        }\n      },\n      lineLength: 30\n    });\n    chart.guide().dataMarker({\n      top: true,\n      content: '全部谷值：' + min.Close,\n      position: [ min.Date, min.Close ],\n      style: {\n        text: {\n          fontSize: 12\n        }\n      },\n      lineLength: 50\n    });\n    chart.render();\n\n    function findMaxMin() {\n      let maxValue = 0;\n      let minValue = 50000;\n      let maxObj = null;\n      let minObj = null;\n      for (let i = 0; i < data.length; i++) {\n        const d = data[i];\n        if (d.Close > maxValue) {\n          maxValue = d.Close;\n          maxObj = d;\n        }\n        if (d.Close < minValue) {\n          minValue = d.Close;\n          minObj = d;\n        }\n      }\n      return { max: maxObj, min: minObj };\n    }\n\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line7 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/nintendo.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [30, 20, 50, 30]\n    });\n    chart.axis('Date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        },\n        formatter: function formatter(text) {\n          var dataStrings = text.split('.');\n          return dataStrings[2] + '-' + dataStrings[1] + '-' + dataStrings[0];\n        }\n      }\n    });\n    chart.axis('Close', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.source(data, {\n      Date: {\n        tickCount: 10\n      }\n    });\n    chart.line().position('Date*Close'); // guide\n\n    var max_min = findMaxMin();\n    var max = max_min.max;\n    var min = max_min.min;\n    chart.guide().dataMarker({\n      top: true,\n      content: '全部峰值：' + max.Close,\n      position: [max.Date, max.Close],\n      style: {\n        text: {\n          fontSize: 12\n        }\n      },\n      lineLength: 30\n    });\n    chart.guide().dataMarker({\n      top: true,\n      content: '全部谷值：' + min.Close,\n      position: [min.Date, min.Close],\n      style: {\n        text: {\n          fontSize: 12\n        }\n      },\n      lineLength: 50\n    });\n    chart.render();\n\n    function findMaxMin() {\n      var maxValue = 0;\n      var minValue = 50000;\n      var maxObj = null;\n      var minObj = null;\n\n      for (var i = 0; i < data.length; i++) {\n        var d = data[i];\n\n        if (d.Close > maxValue) {\n          maxValue = d.Close;\n          maxObj = d;\n        }\n\n        if (d.Close < minValue) {\n          minValue = d.Close;\n          minObj = d;\n        }\n      }\n\n      return {\n        max: maxObj,\n        min: minObj\n      };\n    }\n  });\n});"},{"relativePath":"gallery/line/demo/line8.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line8.js","order":7,"filename":"line8.js","title":{"zh":"CPU 占用率实时监控","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*2YcTT7guTxUAAAAAAAAAAABkARQnAQ","source":"function splitData(data) {\n  const marker = data.length - Math.floor(data.length * 0.4);\n  const data1 = [];\n  const data2 = [];\n  for (let i = 0; i < data.length; i++) {\n    const d = data[i];\n    if (i <= marker) {\n      data1.push(d);\n    } else {\n      data2.push(d);\n    }\n  }\n  data1.push(data2[0]);\n\n  return [ data1, data2 ];\n}\n\nconst Shape = G2.Shape;\nShape.registerShape('line', 'splitLine', {\n  drawShape(cfg, container) {\n    const type = cfg.origin[0]._origin.date;\n    if (type === 'today') {\n      const pointArrs = splitData(cfg.points);\n      const path1 = [];\n      for (let i = 0; i < pointArrs[0].length; i++) {\n        let pre = 'L';\n        if (i === 0) pre = 'M';\n        path1.push([ pre, pointArrs[0][i].x, pointArrs[0][i].y ]);\n      }\n      const line1 = container.addShape('path', {\n        attrs: {\n          path: path1,\n          stroke: '#1890ff',\n          lineWidth: 2\n        }\n      });\n      const path2 = [];\n      for (let i = 0; i < pointArrs[1].length; i++) {\n        let pre = 'L';\n        if (i === 0) pre = 'M';\n        path2.push([ pre, pointArrs[1][i].x, pointArrs[1][i].y ]);\n      }\n      container.addShape('path', {\n        attrs: {\n          path: path2,\n          stroke: '#1890ff',\n          lineWidth: 2,\n          lineDash: [ 5, 2 ],\n          opacity: 0.7\n        }\n      });\n\n      return line1;\n\n    }\n    const path = [];\n    for (let i = 0; i < cfg.points.length; i++) {\n      let pre = 'L';\n      if (i === 0) pre = 'M';\n      path.push([ pre, cfg.points[i].x, cfg.points[i].y ]);\n    }\n    const line = container.addShape('path', {\n      attrs: {\n        path,\n        stroke: '#ced4d9',\n        lineWidth: 2\n      }\n    });\n    return line;\n\n    // end of if\n  }\n});\n\nShape.registerShape('point', 'breathPoint', {\n  drawShape(cfg, container) {\n    const data = cfg.origin._origin;\n    const point = { x: cfg.x, y: cfg.y };\n    if (data.time === '14.20' && data.date === 'today') {\n      const decorator1 = container.addShape('circle', {\n        attrs: {\n          x: point.x,\n          y: point.y,\n          r: 10,\n          fill: '#1890ff',\n          opacity: 0.5\n        }\n      });\n      const decorator2 = container.addShape('circle', {\n        attrs: {\n          x: point.x,\n          y: point.y,\n          r: 10,\n          fill: '#1890ff',\n          opacity: 0.5\n        }\n      });\n      const decorator3 = container.addShape('circle', {\n        attrs: {\n          x: point.x,\n          y: point.y,\n          r: 10,\n          fill: '#1890ff',\n          opacity: 0.5\n        }\n      });\n      decorator1.animate({\n        r: 20,\n        opacity: 0,\n        repeat: true\n      }, 1800, 'easeLinear');\n      decorator2.animate({\n        r: 20,\n        opacity: 0,\n        repeat: true\n      }, 1800, 'easeLinear', () => { }, 600);\n      decorator3.animate({\n        r: 20,\n        opacity: 0,\n        repeat: true\n      }, 1800, 'easeLinear', () => { }, 1200);\n      container.addShape('circle', {\n        attrs: {\n          x: point.x,\n          y: point.y,\n          r: 6,\n          fill: '#1890ff',\n          opacity: 0.7\n        }\n      });\n      container.addShape('circle', {\n        attrs: {\n          x: point.x,\n          y: point.y,\n          r: 1.5,\n          fill: '#1890ff'\n        }\n      });\n    }\n  }\n});\n\nfetch('../data/cpu-data.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 100, 50, 50 ]\n    });\n\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('cpu', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.legend({\n      attachLast: true\n    });\n\n    chart.source(data, {\n      time: {\n        min: 13.00,\n        max: 15.00\n      },\n      cpu: {\n        max: 100,\n        min: 0\n      }\n    });\n    chart.line().position('time*cpu').shape('splitLine')\n      .color('date', [ '#1890ff', '#ced4d9' ]);\n    chart.point().position('time*cpu').shape('breathPoint');\n    chart.guide().regionFilter({\n      top: true,\n      start: [ 'min', 105 ],\n      end: [ 'max', 85 ],\n      color: '#ff4d4f'\n    });\n    chart.guide().line({\n      start: [ 'min', 85 ],\n      end: [ 'max', 85 ],\n      lineStyle: {\n        stroke: '#595959',\n        lineWidth: 1,\n        lineDash: [ 3, 3 ]\n      },\n      text: {\n        position: 'start',\n        style: {\n          fill: '#8c8c8c',\n          fontSize: 15,\n          fontWeight: 'normal'\n        },\n        content: '预警线 85%',\n        offsetY: -5\n      }\n    });\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line8 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  function splitData(data) {\n    var marker = data.length - Math.floor(data.length * 0.4);\n    var data1 = [];\n    var data2 = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var d = data[i];\n\n      if (i <= marker) {\n        data1.push(d);\n      } else {\n        data2.push(d);\n      }\n    }\n\n    data1.push(data2[0]);\n    return [data1, data2];\n  }\n\n  var Shape = G2.Shape;\n  Shape.registerShape('line', 'splitLine', {\n    drawShape: function drawShape(cfg, container) {\n      var type = cfg.origin[0]._origin.date;\n\n      if (type === 'today') {\n        var pointArrs = splitData(cfg.points);\n        var path1 = [];\n\n        for (var i = 0; i < pointArrs[0].length; i++) {\n          var pre = 'L';\n          if (i === 0) pre = 'M';\n          path1.push([pre, pointArrs[0][i].x, pointArrs[0][i].y]);\n        }\n\n        var line1 = container.addShape('path', {\n          attrs: {\n            path: path1,\n            stroke: '#1890ff',\n            lineWidth: 2\n          }\n        });\n        var path2 = [];\n\n        for (var _i = 0; _i < pointArrs[1].length; _i++) {\n          var _pre = 'L';\n          if (_i === 0) _pre = 'M';\n          path2.push([_pre, pointArrs[1][_i].x, pointArrs[1][_i].y]);\n        }\n\n        container.addShape('path', {\n          attrs: {\n            path: path2,\n            stroke: '#1890ff',\n            lineWidth: 2,\n            lineDash: [5, 2],\n            opacity: 0.7\n          }\n        });\n        return line1;\n      }\n\n      var path = [];\n\n      for (var _i2 = 0; _i2 < cfg.points.length; _i2++) {\n        var _pre2 = 'L';\n        if (_i2 === 0) _pre2 = 'M';\n        path.push([_pre2, cfg.points[_i2].x, cfg.points[_i2].y]);\n      }\n\n      var line = container.addShape('path', {\n        attrs: {\n          path: path,\n          stroke: '#ced4d9',\n          lineWidth: 2\n        }\n      });\n      return line; // end of if\n    }\n  });\n  Shape.registerShape('point', 'breathPoint', {\n    drawShape: function drawShape(cfg, container) {\n      var data = cfg.origin._origin;\n      var point = {\n        x: cfg.x,\n        y: cfg.y\n      };\n\n      if (data.time === '14.20' && data.date === 'today') {\n        var decorator1 = container.addShape('circle', {\n          attrs: {\n            x: point.x,\n            y: point.y,\n            r: 10,\n            fill: '#1890ff',\n            opacity: 0.5\n          }\n        });\n        var decorator2 = container.addShape('circle', {\n          attrs: {\n            x: point.x,\n            y: point.y,\n            r: 10,\n            fill: '#1890ff',\n            opacity: 0.5\n          }\n        });\n        var decorator3 = container.addShape('circle', {\n          attrs: {\n            x: point.x,\n            y: point.y,\n            r: 10,\n            fill: '#1890ff',\n            opacity: 0.5\n          }\n        });\n        decorator1.animate({\n          r: 20,\n          opacity: 0,\n          repeat: true\n        }, 1800, 'easeLinear');\n        decorator2.animate({\n          r: 20,\n          opacity: 0,\n          repeat: true\n        }, 1800, 'easeLinear', function () {}, 600);\n        decorator3.animate({\n          r: 20,\n          opacity: 0,\n          repeat: true\n        }, 1800, 'easeLinear', function () {}, 1200);\n        container.addShape('circle', {\n          attrs: {\n            x: point.x,\n            y: point.y,\n            r: 6,\n            fill: '#1890ff',\n            opacity: 0.7\n          }\n        });\n        container.addShape('circle', {\n          attrs: {\n            x: point.x,\n            y: point.y,\n            r: 1.5,\n            fill: '#1890ff'\n          }\n        });\n      }\n    }\n  });\n  fetch('../data/cpu-data.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 100, 50, 50]\n    });\n    chart.axis('time', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('cpu', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: false\n    });\n    chart.legend({\n      attachLast: true\n    });\n    chart.source(data, {\n      time: {\n        min: 13.00,\n        max: 15.00\n      },\n      cpu: {\n        max: 100,\n        min: 0\n      }\n    });\n    chart.line().position('time*cpu').shape('splitLine').color('date', ['#1890ff', '#ced4d9']);\n    chart.point().position('time*cpu').shape('breathPoint');\n    chart.guide().regionFilter({\n      top: true,\n      start: ['min', 105],\n      end: ['max', 85],\n      color: '#ff4d4f'\n    });\n    chart.guide().line({\n      start: ['min', 85],\n      end: ['max', 85],\n      lineStyle: {\n        stroke: '#595959',\n        lineWidth: 1,\n        lineDash: [3, 3]\n      },\n      text: {\n        position: 'start',\n        style: {\n          fill: '#8c8c8c',\n          fontSize: 15,\n          fontWeight: 'normal'\n        },\n        content: '预警线 85%',\n        offsetY: -5\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"gallery/line/demo/line9.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/gallery/line/demo/line9.js","order":8,"filename":"line9.js","title":{"zh":"中美两国与国际原油价格走势对比","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*1Id8QJtABpAAAAAAAAAAAABkARQnAQ","source":"fetch('../data/oil-price.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 110, 70, 35 ]\n    });\n    chart.source(data);\n    chart.scale('date', {\n      range: [ 0, 1 ],\n      tickCount: 10,\n      type: 'timeCat'\n    });\n    chart.axis('date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('price', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: 'y',\n      share: true\n    });\n    chart.legend({\n      attachLast: true\n    });\n    chart.line().position('date*price').shape('hv')\n      .color('country');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.line9 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/oil-price.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 110, 70, 35]\n    });\n    chart.source(data);\n    chart.scale('date', {\n      range: [0, 1],\n      tickCount: 10,\n      type: 'timeCat'\n    });\n    chart.axis('date', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.axis('price', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.tooltip({\n      crosshairs: 'y',\n      share: true\n    });\n    chart.legend({\n      attachLast: true\n    });\n    chart.line().position('date*price').shape('hv').color('country');\n    chart.render();\n  });\n});"}]}}}}