{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-46-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/other/other","result":{"data":{"site":{"siteMetadata":{"title":"G2","githubUrl":"https://github.com/antvis/g2","examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"line","icon":"line","title":{"zh":"折线图","en":"Line Chart"}},{"slug":"column","icon":"column","title":{"zh":"柱状图","en":"Column Chart"}},{"slug":"bar","icon":"bar","title":{"zh":"条形图","en":"Bar Chart"}},{"slug":"pie","icon":"pie","title":{"zh":"饼图","en":"Pie Chart"}},{"slug":"point","icon":"point","title":{"zh":"点图","en":"Point Chart"}},{"slug":"area","icon":"area","title":{"zh":"面积图","en":"Area Chart"}},{"slug":"box","icon":"box","title":{"zh":"箱型图","en":"Box Chart"}},{"slug":"candlestick","icon":"candlestick","title":{"zh":"烛形图","en":"K Chart"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"Heatmap"}},{"slug":"gauge","icon":"gauge","title":{"zh":"仪表盘","en":"Gauges"}},{"slug":"funnel","icon":"funnel","title":{"zh":"漏斗图","en":"Funnel Chart"}},{"slug":"map","icon":"map","title":{"zh":"地图","en":"Maps"}},{"slug":"radar","icon":"radar","title":{"zh":"雷达图","en":"Radar Chart"}},{"slug":"facet","icon":"facet","title":{"zh":"分面","en":"Facets"}},{"slug":"relation","icon":"relation","title":{"zh":"关系图","en":"Relation Chart"}},{"slug":"other","icon":"other","title":{"zh":"其他图表","en":"Other Chart"}},{"slug":"component","icon":"component","title":{"zh":"组件使用","en":"Chart Components"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":"<!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"UTF-8\">\n            <title>{{title}}</title>\n          </head>\n          <body>\n            <div id=\"container\" />\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.g2-3.5.11/dist/g2.min.js\"></script>\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.10.2/dist/data-set.min.js\"></script>\n            <script>\n        {{code}}\n            </script>\n          </body>\n        </html>"}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"html":"","fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/relation/relation"},"frontmatter":{"title":"Graph","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/radar/radar"},"frontmatter":{"title":"Radar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/relation/relation"},"frontmatter":{"title":"关系图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.zh.md"}}},{"node":{"html":"<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>雷达图是以相同点开始的轴上表示的三个或更多个定量变量的二维图形的形式显示多变量数据的图形方法。轴的相对位置和角度通常是不知情的。</p>","fields":{"slug":"/zh/examples/radar/radar"},"frontmatter":{"title":"雷达图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"html":"<p>Scatter Chart，也叫 X-Y 图，它将所有的数据以点的形式展现在笛卡尔坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。数据的相关关系主要分为：正相关（两个变量值同时增长）、负相关（一个变量值增加另一个变量值下降）、不相关、线性相关、指数相关等，表现在散点图上的大致分布如下图所示。那些离点集群较远的点我们称为离群点或者异常点。</p>","fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/other/other"},"frontmatter":{"title":"Others","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/other/other"},"frontmatter":{"title":"其他图表","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/basic"},"frontmatter":{"title":"Basic Pie Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.en.md"}}},{"node":{"html":"<p>饼图广泛得应用在各个领域，用于表示不同分类的占比情况，通过弧度大小来对比各种分类。饼图通过将一个圆饼按照分类的占比划分成多个区块，整个圆饼代表数据的总量，每个区块（圆弧）表示该分类占总体的比例大小，所有区块（圆弧）的加和等于 100%。可以很好地帮助用户快速了解数据的占比分配。</p>","fields":{"slug":"/zh/examples/pie/basic"},"frontmatter":{"title":"基础饼图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/map/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/map/map"},"frontmatter":{"title":"Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.en.md"}}},{"node":{"html":"<p>Basic Line Chart，基础折线图。折线图用于显示数据在一个连续的时间间隔或者时间跨度上的变化，它的特点是反映事物随时间或有序类别而变化的趋势。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>在折线图中，数据是递增还是递减、增减的速率、增减的规律（周期性、螺旋性等）、峰值等特征都可以清晰地反映出来。所以，折线图常用来分析数据随时间的变化趋势，也可用来分析多组数据随时间变化的相互作用和相互影响。例如可用来分析某类商品或是某几类相关的商品随时间变化的销售情况，从而进一步预测未来的销售情况。在折线图中，一般水平轴（X轴）用来表示时间的推移，并且间隔相同；而垂直轴（Y轴）代表不同时刻的数据的大小。</p>","fields":{"slug":"/zh/examples/line/basic"},"frontmatter":{"title":"基础折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/basic"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"Heatmap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gauge/gauge"},"frontmatter":{"title":"Gauge","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.en.md"}}},{"node":{"html":"<p>热力图，由小色块有序且紧凑的组成的图表。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>特别适合用于直接对数据量较大的、相对原始的数据进行分析。比如：生物基因科学领域，色块图常被用于微阵列数据分析。</p>","fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"热力图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"html":"<h2 id=\"如何使用\" style=\"position:relative;\"><a href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\" aria-label=\"如何使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何使用</h2>\n<p>仪表盘(Gauge)是一种拟物化的图表，刻度表示度量，指针表示维度，指针角度表示数值。仪表盘图表就像汽车的速度表一样，有一个圆形的表盘及相应的刻度，有一个指针指向当前数值。目前很多的管理报表或报告上都是用这种图表，以直观的表现出某个指标的进度或实际情况。仪表盘的好处在于它能跟人们的常识结合，使大家马上能理解看什么、怎么看。拟物化的方式使图标变得更友好更人性化，正确使用可以提升用户体验。</p>","fields":{"slug":"/zh/examples/gauge/gauge"},"frontmatter":{"title":"仪表盘","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/facet/facet"},"frontmatter":{"title":"分面","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/facet/facet"},"frontmatter":{"title":"Facet","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/line"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/line"},"frontmatter":{"title":"折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/funnel/funnel"},"frontmatter":{"title":"Funnel Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.en.md"}}},{"node":{"html":"<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>漏斗图适用于业务流程比较规范、周期长、环节多的单流程单向分析，通过漏斗各环节业务数据的比较能够直观地发现和说明问题所在的环节，进而做出决策。漏斗图用梯形面积表示某个环节业务量与上一个环节之间的差异。漏斗图从上到下，有逻辑上的顺序关系，表现了随着业务流程的推进业务目标完成的情况。</p>","fields":{"slug":"/zh/examples/funnel/funnel"},"frontmatter":{"title":"漏斗图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/component/component"},"frontmatter":{"title":"Chart Components","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/component/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/component/component"},"frontmatter":{"title":"图表组件","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/component/index.zh.md"}}},{"node":{"html":"<p>烛形图，原名 K 线图，蜡烛图，又称阴阳图、棒线、红黑线或蜡烛线，常用于展示股票交易数据。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>烛形图主要用于金融领域里展示股票，期货等交易数据，按照时间维度分为日 K 线、周 K 线、月 K 线。展示的数据需要满足 K 线构成的四要素：即开盘价、收盘价、最高价、最低价。</p>","fields":{"slug":"/zh/examples/candlestick/candlestick"},"frontmatter":{"title":"烛形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/basic"},"frontmatter":{"title":"Basic Column Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/candlestick/candlestick"},"frontmatter":{"title":"K Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.en.md"}}},{"node":{"html":"<p>基础柱状图，使用垂直的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>柱状图有别于直方图，柱状图无法显示数据在一个区间内的连续变化趋势。柱状图描述的是分类数据，回答的是每一个分类中“有多少？”这个问题。 需要注意的是，当柱状图显示的分类很多时会导致分类名层叠等显示问题。</p>","fields":{"slug":"/zh/examples/column/basic"},"frontmatter":{"title":"基础柱状图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/box/box"},"frontmatter":{"title":"Box Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.en.md"}}},{"node":{"html":"<p>箱型图，又称盒须图、盒式图或箱线图，是一种用作显示一组数据分布情况的统计图。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>如果一个数据集中包含了一个分类变量和一个或者多个连续变量，那么你可能会想知道连续变量会如何随着分类变量水平的变化而变化，而箱形图就可以提供这种方法，它只用了5个数字对分布进行概括，即一组数据的最大值、最小值、中位数、下四分位数及上四分位数。对于数据集中的异常值，通常会以单独的点的形式绘制。箱形图可以水平或者垂直绘制。箱形图多用于数值统计，虽然相比于直方图和密度曲线较原始简单，但是它不需要占据过多的画布空间，空间利用率高，非常适用于比较多组数据的分布情况。</p>","fields":{"slug":"/zh/examples/box/box"},"frontmatter":{"title":"箱型图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/basic"},"frontmatter":{"title":"Basic Bar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.en.md"}}},{"node":{"html":"<p>使用水平的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>对比分类数据的数值大小，当分类情况过多时，柱状图的文本为了排布合理，需要进行旋转，不利于阅读，相比于纵向柱状图，横向柱状图更适用于此类分类较多的场景。</p>","fields":{"slug":"/zh/examples/bar/basic"},"frontmatter":{"title":"基础条形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/basic"},"frontmatter":{"title":"Area Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.en.md"}}},{"node":{"html":"<p>面积图又叫区域图。 它是在折线图的基础之上形成的, 它将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充，这样一个填充区域我们叫做面积，颜色的填充可以更好的突出趋势信息。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>面积图用于强调数量随时间而变化的程度，也可用于引起人们对总值趋势的注意。他们最常用于表现趋势和关系,而不是传达特定的值。</p>","fields":{"slug":"/zh/examples/area/basic"},"frontmatter":{"title":"面积图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/donut"},"frontmatter":{"title":"Donut Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.en.md"}}},{"node":{"html":"<p>环图，其本质是饼图将中间区域挖空。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>饼图的整体性太强，我们会将注意力集中在比较饼图内各个扇形之间占整体比重的关系。但如果我们将两个饼图放在一起，饼图很难同时对比两个图。环图在解决上述问题时，采用了让我们更关注长度而不是面积的做法。这样我们就能相对简单的对比不同的环图。同时环图相对于饼图空间的利用率更高，比如我们可以使用它的空心区域显示文本信息，比如标题等。</p>","fields":{"slug":"/zh/examples/pie/donut"},"frontmatter":{"title":"环图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.zh.md"}}},{"node":{"html":"<p>双折线图。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>用于比对两组数据的趋势。</p>","fields":{"slug":"/zh/examples/line/double"},"frontmatter":{"title":"双折线图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/double/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/double"},"frontmatter":{"title":"Double Line Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/double/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/column"},"frontmatter":{"title":"柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/column"},"frontmatter":{"title":"Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/dodge"},"frontmatter":{"title":"Grouped Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/column/dodge"},"frontmatter":{"title":"分组柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/dodge"},"frontmatter":{"title":"Grouped Bar Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/bar/dodge"},"frontmatter":{"title":"分组条形图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/stacked"},"frontmatter":{"title":"Stacked Area Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.en.md"}}},{"node":{"html":"<p>和基本面积图一样，唯一的区别就是图上每一个数据集的起点不同，起点是基于前一个数据集的，用于显示每个数值所占大小随时间或类别变化的趋势线，展示的是部分与整体的关系。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>层叠面积图上的最大的面积代表了所有的数据量的总和，是一个整体。各个叠起来的面积表示各个数据量的大小，这些堆叠起来的面积图在表现大数据的总量分量的变化情况时格外有用，所以层叠面积图不适用于表示带有负值的数据集。非常适用于对比多变量随时间变化的情况。</p>","fields":{"slug":"/zh/examples/area/stacked"},"frontmatter":{"title":"堆叠面积图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.zh.md"}}},{"node":{"html":"<p>南丁格尔玫瑰图，又名鸡冠花图、极坐标区域图，是南丁格尔在克里米亚战争期间提交的一份关于士兵死伤的报告时发明的一种图表,是在极坐标下绘制的柱状图，使用圆弧的半径长短表示数据的大小（数量的多少）。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>由于半径和面积的关系是平方的关系，南丁格尔玫瑰图会将数据的比例大小夸大，尤其适合对比大小相近的数值；由于圆形有周期的特性，所以玫瑰图也适用于表示一个周期内的时间概念，比如星期、月份。</p>","fields":{"slug":"/zh/examples/pie/rose"},"frontmatter":{"title":"南丁格尔玫瑰图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/rose"},"frontmatter":{"title":"Nightingale Rose Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/multiple"},"frontmatter":{"title":"multiple line chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/line/multiple"},"frontmatter":{"title":"多折线图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/bar"},"frontmatter":{"title":"Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/bar"},"frontmatter":{"title":"条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/stack"},"frontmatter":{"title":"Stacked Column Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/column/stack"},"frontmatter":{"title":"堆叠柱状图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/bar/stack"},"frontmatter":{"title":"堆叠条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/stack"},"frontmatter":{"title":"Stacked Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/range"},"frontmatter":{"title":"Range Area Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/area/range"},"frontmatter":{"title":"区间面积图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/pie/nested"},"frontmatter":{"title":"嵌套饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/nested"},"frontmatter":{"title":"Nested Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/step"},"frontmatter":{"title":"Step Line Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.en.md"}}},{"node":{"html":"<p>阶梯线图（也称为步骤图）是与线图相似的​​图表，但是线在数据点之间形成一系列步骤。当您要显示以不规则间隔发生的更改时，分阶线图可能很有用。例如，奶制品价格上涨，汽油，税率，利率等。</p>","fields":{"slug":"/zh/examples/line/step"},"frontmatter":{"title":"阶梯折线图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/pie"},"frontmatter":{"title":"Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/pie"},"frontmatter":{"title":"饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/histogram"},"frontmatter":{"title":"Histogram","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.en.md"}}},{"node":{"html":"<p>直方图牵涉统计学的概念，首先要对数据进行分组，然后统计每个分组内数据元的数量。 在平面直角坐标系中，横轴标出每个组的端点，纵轴表示频数，每个矩形的高代表对应的频数，称这样的统计图为频数分布直方图。频数分布直方图需要经过频数乘以组距的计算过程才能得出每个分组的数量，同一个直方图的组距是一个固定不变的值，所以如果直接用纵轴表示数量，每个矩形的高代表对应的数据元数量，既能保持分布状态不变，又能直观的看出每个分组的数量。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>直方图主要用于显示各组频数或数量分布的情况以及各组之间频数或数量的差别，通过直方图还可以观察和估计哪些数据比较集中，异常或者孤立的数据分布在何处。</p>","fields":{"slug":"/zh/examples/column/histogram"},"frontmatter":{"title":"直方图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/area"},"frontmatter":{"title":"Area Chart","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/area"},"frontmatter":{"title":"面积图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/gauge"},"frontmatter":{"title":"Gauge","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/gauge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/gauge"},"frontmatter":{"title":"仪表盘","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/gauge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/facet"},"frontmatter":{"title":"分面","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/facet"},"frontmatter":{"title":"Facet","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.en.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"other/other/demo/area-rainfall.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/area-rainfall.js","order":0,"filename":"area-rainfall.js","title":{"zh":"雨量流量关系图","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*7dxYRKmTnbwAAAAAAAAAAABkARQnAQ","source":"// 插入 Slider 滑块组件需要的 DOM\nconst sliderDiv = document.createElement('div');\nsliderDiv.id = 'slider';\nconst container = document.getElementById('container');\ncontainer.parentNode.appendChild(sliderDiv);\n\nfetch('../data/rain-flow.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet({\n      state: {\n        start: new Date('2009/7/20 0:00').getTime(),\n        end: new Date('2009/9/9 0:00').getTime()\n      }\n    });\n    const dv = ds.createView('origin').source(data);\n    dv.transform({\n      type: 'filter',\n      callback(obj) {\n        const time = new Date(obj.time).getTime(); // !注意：时间格式，建议转换为时间戳进行比较\n        return time >= ds.state.start && time <= ds.state.end;\n      }\n    });\n\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 40, 40, 40, 80 ],\n      animate: false\n    });\n    const scale = {\n      time: {\n        type: 'time',\n        tickCount: 8,\n        mask: 'm/dd hh:MM'\n      },\n      flow: {\n        alias: '流量(m^3/s)'\n      },\n      rain: {\n        alias: '降雨量(mm)'\n      }\n    };\n\n    chart.axis('rain', {\n      grid: null\n    });\n    chart.axis('flow', {\n      title: true\n    });\n    chart.legend(false);\n\n    const view1 = chart.view();\n    view1.source(dv, scale);\n    view1.area()\n      .position('time*flow')\n      .color('l(100) 0:#a50f15 1:#fee5d9')\n      .opacity(0.85);\n\n    const view2 = chart.view();\n    view2.axis('rain', {\n      position: 'right'\n    });\n    view2.source(dv, scale);\n    view2.coord().reflect();\n    view2.area()\n      .position('time*rain')\n      .color('l(100) 0:#293c55 1:#f7f7f7')\n      .opacity(0.85);\n\n    chart.render();\n\n    // 创建 Slider\n    chart.interact('slider', {\n      container: 'slider',\n      data: dv.rows,\n      start: ds.state.start, // 和状态量对应\n      end: ds.state.end,\n      scales: scale,\n      xAxis: 'time',\n      yAxis: 'flow',\n      backgroundChart: {\n        type: 'line',\n        color: 'grey'\n      },\n      onChange(ev) {\n        const { startValue, endValue } = ev;\n        ds.setState('start', startValue);\n        ds.setState('end', endValue);\n      }\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.areaRainfall = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  // 插入 Slider 滑块组件需要的 DOM\n  var sliderDiv = document.createElement('div');\n  sliderDiv.id = 'slider';\n  var container = document.getElementById('container');\n  container.parentNode.appendChild(sliderDiv);\n  fetch('../data/rain-flow.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new DataSet({\n      state: {\n        start: new Date('2009/7/20 0:00').getTime(),\n        end: new Date('2009/9/9 0:00').getTime()\n      }\n    });\n    var dv = ds.createView('origin').source(data);\n    dv.transform({\n      type: 'filter',\n      callback: function callback(obj) {\n        var time = new Date(obj.time).getTime(); // !注意：时间格式，建议转换为时间戳进行比较\n\n        return time >= ds.state.start && time <= ds.state.end;\n      }\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [40, 40, 40, 80],\n      animate: false\n    });\n    var scale = {\n      time: {\n        type: 'time',\n        tickCount: 8,\n        mask: 'm/dd hh:MM'\n      },\n      flow: {\n        alias: '流量(m^3/s)'\n      },\n      rain: {\n        alias: '降雨量(mm)'\n      }\n    };\n    chart.axis('rain', {\n      grid: null\n    });\n    chart.axis('flow', {\n      title: true\n    });\n    chart.legend(false);\n    var view1 = chart.view();\n    view1.source(dv, scale);\n    view1.area().position('time*flow').color('l(100) 0:#a50f15 1:#fee5d9').opacity(0.85);\n    var view2 = chart.view();\n    view2.axis('rain', {\n      position: 'right'\n    });\n    view2.source(dv, scale);\n    view2.coord().reflect();\n    view2.area().position('time*rain').color('l(100) 0:#293c55 1:#f7f7f7').opacity(0.85);\n    chart.render(); // 创建 Slider\n\n    chart.interact('slider', {\n      container: 'slider',\n      data: dv.rows,\n      start: ds.state.start,\n      // 和状态量对应\n      end: ds.state.end,\n      scales: scale,\n      xAxis: 'time',\n      yAxis: 'flow',\n      backgroundChart: {\n        type: 'line',\n        color: 'grey'\n      },\n      onChange: function onChange(ev) {\n        var startValue = ev.startValue,\n            endValue = ev.endValue;\n        ds.setState('start', startValue);\n        ds.setState('end', endValue);\n      }\n    });\n  });\n});"},{"relativePath":"other/other/demo/brush-ds-state.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/brush-ds-state.js","order":1,"filename":"brush-ds-state.js","title":{"zh":"brush-ds-state","en":"brush interaction"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*4jCzR6gQEEsAAAAAAAAAAABkARQnAQ","source":"// 插入 Slider 滑块组件需要的 DOM\nconst canvasDiv1 = document.createElement('div');\ncanvasDiv1.id = 'canvas1';\nconst canvasDiv2 = document.createElement('div');\ncanvasDiv2.id = 'canvas2';\nconst container = document.getElementById('container');\ncontainer.appendChild(canvasDiv1);\ncontainer.appendChild(canvasDiv2);\n\nfetch('../data/sp500.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet({\n      state: {\n        dates: null\n      }\n    });\n    const totalDv = ds.createView().source(data);\n    const dv = ds.createView();\n    dv.source(data)\n      .transform({\n        type: 'filter',\n        callback: obj => {\n          if (ds.state.dates) {\n            return ds.state.dates.indexOf(obj.date) > -1;\n          }\n          return obj;\n        }\n      });\n    const chart1 = new G2.Chart({\n      container: 'canvas1',\n      forceFit: true,\n      height: 400,\n      animate: false,\n      padding: [ 100, 40, 50, 80 ]\n    });\n    chart1.source(dv, {\n      date: {\n        tickCount: 10,\n        type: 'time',\n        mask: 'MMM D YYYY'\n      },\n      price: {\n        min: totalDv.min('price'),\n        max: totalDv.max('price')\n      }\n    });\n    chart1.area().position('date*price').shape('smooth')\n      .opacity(0.85);\n    chart1.render();\n\n    // second chart\n    const chart2 = new G2.Chart({\n      container: 'canvas2',\n      forceFit: true,\n      height: 100,\n      padding: [ 5, 40, 60, 80 ]\n    });\n    chart2.source(data, {\n      date: {\n        tickCount: 10,\n        type: 'time',\n        mask: 'YYYY'\n      }\n    });\n    chart2.tooltip(false);\n    chart2.axis('price', false);\n    chart2.area().position('date*price').active(false)\n      .shape('smooth')\n      .opacity(0.85);\n    chart2.render();\n\n    chart2.interact('brush', {\n      type: 'X',\n      draggable: true,\n      inPlot: false,\n      onBrushmove(ev) {\n        const { date } = ev;\n        ds.setState('dates', date);\n      },\n      onDragmove(ev) {\n        const { date } = ev;\n        ds.setState('dates', date);\n      }\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.brushDsState = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  // 插入 Slider 滑块组件需要的 DOM\n  var canvasDiv1 = document.createElement('div');\n  canvasDiv1.id = 'canvas1';\n  var canvasDiv2 = document.createElement('div');\n  canvasDiv2.id = 'canvas2';\n  var container = document.getElementById('container');\n  container.appendChild(canvasDiv1);\n  container.appendChild(canvasDiv2);\n  fetch('../data/sp500.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new DataSet({\n      state: {\n        dates: null\n      }\n    });\n    var totalDv = ds.createView().source(data);\n    var dv = ds.createView();\n    dv.source(data).transform({\n      type: 'filter',\n      callback: function callback(obj) {\n        if (ds.state.dates) {\n          return ds.state.dates.indexOf(obj.date) > -1;\n        }\n\n        return obj;\n      }\n    });\n    var chart1 = new G2.Chart({\n      container: 'canvas1',\n      forceFit: true,\n      height: 400,\n      animate: false,\n      padding: [100, 40, 50, 80]\n    });\n    chart1.source(dv, {\n      date: {\n        tickCount: 10,\n        type: 'time',\n        mask: 'MMM D YYYY'\n      },\n      price: {\n        min: totalDv.min('price'),\n        max: totalDv.max('price')\n      }\n    });\n    chart1.area().position('date*price').shape('smooth').opacity(0.85);\n    chart1.render(); // second chart\n\n    var chart2 = new G2.Chart({\n      container: 'canvas2',\n      forceFit: true,\n      height: 100,\n      padding: [5, 40, 60, 80]\n    });\n    chart2.source(data, {\n      date: {\n        tickCount: 10,\n        type: 'time',\n        mask: 'YYYY'\n      }\n    });\n    chart2.tooltip(false);\n    chart2.axis('price', false);\n    chart2.area().position('date*price').active(false).shape('smooth').opacity(0.85);\n    chart2.render();\n    chart2.interact('brush', {\n      type: 'X',\n      draggable: true,\n      inPlot: false,\n      onBrushmove: function onBrushmove(ev) {\n        var date = ev.date;\n        ds.setState('dates', date);\n      },\n      onDragmove: function onDragmove(ev) {\n        var date = ev.date;\n        ds.setState('dates', date);\n      }\n    });\n  });\n});"},{"relativePath":"other/other/demo/brush-filter-shape.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/brush-filter-shape.js","order":2,"filename":"brush-filter-shape.js","title":{"zh":"brush interaction 过滤图形","en":"brush interaction"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*q27PRpGASNIAAAAAAAAAAABkARQnAQ","source":"fetch('../data/cars.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n\n    const view1 = chart.view({\n      end: {\n        x: 0.45,\n        y: 1\n      }\n    });\n    view1.source(data);\n    view1.tooltip(false);\n    view1.point().position('Horsepower*Miles_per_Gallon');\n\n    const view2 = chart.view({\n      start: {\n        x: 0.55,\n        y: 0\n      }\n    });\n\n    view2.source(data);\n    view2.point().position('Acceleration*Displacement');\n\n    chart.render();\n\n    chart.interact('brush', {\n      draggable: true,\n      inPlot: false,\n      onBrushstart(ev) {\n        const { x, y } = ev;\n        const views = chart.getViewsByPoint({ x, y });\n        if (views.length > 1) {\n          this.chart = views[1];\n          const coord = views[1].get('coord');\n          this.plot = {\n            start: coord.start,\n            end: coord.end\n          };\n          this.xScale = views[1].getXScale();\n          this.yScale = views[1].getYScales()[0];\n        }\n      },\n      onBrushmove(ev) {\n        const { data } = ev;\n        view2.filterShape(obj => {\n          return data.indexOf(obj) > -1;\n        });\n      },\n      onDragmove(ev) {\n        const { data } = ev;\n        view2.filterShape(obj => {\n          return data.indexOf(obj) > -1;\n        });\n      }\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.brushFilterShape = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/cars.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    var view1 = chart.view({\n      end: {\n        x: 0.45,\n        y: 1\n      }\n    });\n    view1.source(data);\n    view1.tooltip(false);\n    view1.point().position('Horsepower*Miles_per_Gallon');\n    var view2 = chart.view({\n      start: {\n        x: 0.55,\n        y: 0\n      }\n    });\n    view2.source(data);\n    view2.point().position('Acceleration*Displacement');\n    chart.render();\n    chart.interact('brush', {\n      draggable: true,\n      inPlot: false,\n      onBrushstart: function onBrushstart(ev) {\n        var x = ev.x,\n            y = ev.y;\n        var views = chart.getViewsByPoint({\n          x: x,\n          y: y\n        });\n\n        if (views.length > 1) {\n          this.chart = views[1];\n          var coord = views[1].get('coord');\n          this.plot = {\n            start: coord.start,\n            end: coord.end\n          };\n          this.xScale = views[1].getXScale();\n          this.yScale = views[1].getYScales()[0];\n        }\n      },\n      onBrushmove: function onBrushmove(ev) {\n        var data = ev.data;\n        view2.filterShape(function (obj) {\n          return data.indexOf(obj) > -1;\n        });\n      },\n      onDragmove: function onDragmove(ev) {\n        var data = ev.data;\n        view2.filterShape(function (obj) {\n          return data.indexOf(obj) > -1;\n        });\n      }\n    });\n  });\n});"},{"relativePath":"other/other/demo/brush-highlight.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/brush-highlight.js","order":3,"filename":"brush-highlight.js","title":{"zh":"brush interaction 高亮图形","en":"brush interaction"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*VfwERojKEpkAAAAAAAAAAABkARQnAQ","source":"fetch('../data/iris.json')\n  .then(res => res.json())\n  .then(data => {\n    const Util = G2.Util;\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n\n    chart.source(data, {\n      Species: {\n        sync: true\n      }\n    });\n    chart.legend({\n      hoverable: false\n    });\n    chart.facet('matrix', {\n      fields: [ 'SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth' ],\n      eachView(view, facet) {\n        view.axis(facet.colField, {\n          label: null,\n          line: {\n            lineWidth: 1,\n            stroke: '#000'\n          },\n          tickLine: {\n            lineWidth: 1,\n            stroke: '#000',\n            length: 4\n          }\n        });\n        view.axis(facet.rowField, {\n          label: null,\n          line: {\n            lineWidth: 1,\n            stroke: '#000'\n          },\n          tickLine: {\n            lineWidth: 1,\n            stroke: '#000',\n            length: 4\n          }\n        });\n        if (facet.rowIndex === facet.colIndex) {\n          view.point()\n            .position(facet.colField + '*' + facet.colField)\n            .color('Species', [ '#880000', '#008800', '#000088' ])\n            .opacity(0.5)\n            .shape('circle')\n            .size(3)\n            .active(false);\n        } else {\n          view.point()\n            .position([ facet.colField, facet.rowField ])\n            .color('Species', [ '#880000', '#008800', '#000088' ])\n            .opacity(0.5)\n            .shape('circle')\n            .size(3)\n            .active(false);\n        }\n        if ([ 0, 1, 2, 3 ].indexOf(facet.rowIndex) > -1 && facet.colIndex === 0) {\n          view.guide().text({\n            position: [ 3.7, 'median' ],\n            content: facet.rowValue,\n            style: {\n              rotate: -90,\n              fontSize: 12,\n              fill: '#999',\n              textAlign: 'center'\n            }\n          });\n        }\n        if ([ 0, 1, 2, 3 ].indexOf(facet.colIndex) > -1 && facet.rowIndex === 3) {\n          view.guide().text({\n            position: [ 'median', 'min' ],\n            content: facet.colValue,\n            style: {\n              fontSize: 12,\n              fill: '#999',\n              textAlign: 'center'\n            },\n            offsetY: 20\n          });\n        }\n      }\n    });\n    chart.render();\n\n    chart.interact('brush', {\n      draggable: true,\n      type: 'xy',\n      inPlot: false,\n      onBrushstart(ev) {\n        chart.hideTooltip();\n        const { x, y } = ev;\n        const views = chart.getViewsByPoint({ x, y });\n        if (views.length > 1) {\n          this.chart = views[1];\n          const coord = views[1].get('coord');\n          this.plot = {\n            start: coord.start,\n            end: coord.end\n          };\n          this.xScale = views[1].getXScale();\n          this.yScale = views[1].getYScales()[0];\n        }\n      },\n      onBrushmove(ev) {\n        chart.hideTooltip();\n\n        const { data } = ev;\n        chart.eachShape((record, shape) => {\n          if (!shape.get('_originAttrs')) {\n            shape.set('_originAttrs', Util.cloneDeep(shape._attrs)); // 缓存原来的属性\n          }\n          if (data.indexOf(record) === -1) {\n            shape.attr('fill', '#ccc');\n          } else {\n            const originAttrs = shape.get('_originAttrs');\n            shape._attrs = Util.cloneDeep(originAttrs);\n          }\n        });\n      },\n      onDragmove(ev) {\n        chart.hideTooltip();\n\n        const { data } = ev;\n        chart.eachShape((record, shape) => {\n          if (!shape.get('_originAttrs')) {\n            shape.set('_originAttrs', Util.cloneDeep(shape._attrs)); // 缓存原来的属性\n          }\n          if (data.indexOf(record) === -1) {\n            shape.attr('fill', '#ccc');\n          } else {\n            const originAttrs = shape.get('_originAttrs');\n            shape._attrs = Util.cloneDeep(originAttrs);\n          }\n        });\n      },\n      onReset() {\n        chart.eachShape((record, shape) => {\n          if (shape.get('_originAttrs')) {\n            shape._attrs = Util.cloneDeep(shape.get('_originAttrs'));\n          }\n        });\n        chart.repaint();\n      }\n    });\n\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.brushHighlight = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/iris.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var Util = G2.Util;\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(data, {\n      Species: {\n        sync: true\n      }\n    });\n    chart.legend({\n      hoverable: false\n    });\n    chart.facet('matrix', {\n      fields: ['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth'],\n      eachView: function eachView(view, facet) {\n        view.axis(facet.colField, {\n          label: null,\n          line: {\n            lineWidth: 1,\n            stroke: '#000'\n          },\n          tickLine: {\n            lineWidth: 1,\n            stroke: '#000',\n            length: 4\n          }\n        });\n        view.axis(facet.rowField, {\n          label: null,\n          line: {\n            lineWidth: 1,\n            stroke: '#000'\n          },\n          tickLine: {\n            lineWidth: 1,\n            stroke: '#000',\n            length: 4\n          }\n        });\n\n        if (facet.rowIndex === facet.colIndex) {\n          view.point().position(facet.colField + '*' + facet.colField).color('Species', ['#880000', '#008800', '#000088']).opacity(0.5).shape('circle').size(3).active(false);\n        } else {\n          view.point().position([facet.colField, facet.rowField]).color('Species', ['#880000', '#008800', '#000088']).opacity(0.5).shape('circle').size(3).active(false);\n        }\n\n        if ([0, 1, 2, 3].indexOf(facet.rowIndex) > -1 && facet.colIndex === 0) {\n          view.guide().text({\n            position: [3.7, 'median'],\n            content: facet.rowValue,\n            style: {\n              rotate: -90,\n              fontSize: 12,\n              fill: '#999',\n              textAlign: 'center'\n            }\n          });\n        }\n\n        if ([0, 1, 2, 3].indexOf(facet.colIndex) > -1 && facet.rowIndex === 3) {\n          view.guide().text({\n            position: ['median', 'min'],\n            content: facet.colValue,\n            style: {\n              fontSize: 12,\n              fill: '#999',\n              textAlign: 'center'\n            },\n            offsetY: 20\n          });\n        }\n      }\n    });\n    chart.render();\n    chart.interact('brush', {\n      draggable: true,\n      type: 'xy',\n      inPlot: false,\n      onBrushstart: function onBrushstart(ev) {\n        chart.hideTooltip();\n        var x = ev.x,\n            y = ev.y;\n        var views = chart.getViewsByPoint({\n          x: x,\n          y: y\n        });\n\n        if (views.length > 1) {\n          this.chart = views[1];\n          var coord = views[1].get('coord');\n          this.plot = {\n            start: coord.start,\n            end: coord.end\n          };\n          this.xScale = views[1].getXScale();\n          this.yScale = views[1].getYScales()[0];\n        }\n      },\n      onBrushmove: function onBrushmove(ev) {\n        chart.hideTooltip();\n        var data = ev.data;\n        chart.eachShape(function (record, shape) {\n          if (!shape.get('_originAttrs')) {\n            shape.set('_originAttrs', Util.cloneDeep(shape._attrs)); // 缓存原来的属性\n          }\n\n          if (data.indexOf(record) === -1) {\n            shape.attr('fill', '#ccc');\n          } else {\n            var originAttrs = shape.get('_originAttrs');\n            shape._attrs = Util.cloneDeep(originAttrs);\n          }\n        });\n      },\n      onDragmove: function onDragmove(ev) {\n        chart.hideTooltip();\n        var data = ev.data;\n        chart.eachShape(function (record, shape) {\n          if (!shape.get('_originAttrs')) {\n            shape.set('_originAttrs', Util.cloneDeep(shape._attrs)); // 缓存原来的属性\n          }\n\n          if (data.indexOf(record) === -1) {\n            shape.attr('fill', '#ccc');\n          } else {\n            var originAttrs = shape.get('_originAttrs');\n            shape._attrs = Util.cloneDeep(originAttrs);\n          }\n        });\n      },\n      onReset: function onReset() {\n        chart.eachShape(function (record, shape) {\n          if (shape.get('_originAttrs')) {\n            shape._attrs = Util.cloneDeep(shape.get('_originAttrs'));\n          }\n        });\n        chart.repaint();\n      }\n    });\n  });\n});"},{"relativePath":"other/other/demo/brush-interval.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/brush-interval.js","order":4,"filename":"brush-interval.js","title":{"zh":"brush interaction 柱状图","en":"brush interaction"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*7HuFSKPBqWoAAAAAAAAAAABkARQnAQ","source":"fetch('../data/top2000.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet();\n    const dv = ds.createView('test')\n      .source(data)\n      .transform({\n        as: [ 'count' ],\n        groupBy: [ 'release' ],\n        operations: [ 'count' ],\n        type: 'aggregate'\n      });\n\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(dv);\n    chart.scale({\n      count: {\n        alias: 'top2000 唱片总量'\n      },\n      release: {\n        tickInterval: 5,\n        alias: '唱片发行年份'\n      }\n    });\n    chart.interval()\n      .position('release*count')\n      .color('#e50000');\n\n    chart.render();\n\n    chart.interact('brush', {\n      type: 'X',\n      onBrushstart() {\n        chart.hideTooltip();\n      },\n      onBrushmove() {\n        chart.hideTooltip();\n      }\n    });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.brushInterval = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/top2000.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new DataSet();\n    var dv = ds.createView('test').source(data).transform({\n      as: ['count'],\n      groupBy: ['release'],\n      operations: ['count'],\n      type: 'aggregate'\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(dv);\n    chart.scale({\n      count: {\n        alias: 'top2000 唱片总量'\n      },\n      release: {\n        tickInterval: 5,\n        alias: '唱片发行年份'\n      }\n    });\n    chart.interval().position('release*count').color('#e50000');\n    chart.render();\n    chart.interact('brush', {\n      type: 'X',\n      onBrushstart: function onBrushstart() {\n        chart.hideTooltip();\n      },\n      onBrushmove: function onBrushmove() {\n        chart.hideTooltip();\n      }\n    });\n  });\n});"},{"relativePath":"other/other/demo/brush-line.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/brush-line.js","order":5,"filename":"brush-line.js","title":{"zh":"brush interaction 折线图","en":"brush interaction"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*N6tVTLlF81IAAAAAAAAAAABkARQnAQ","source":"fetch('../data/avg-temp.json')\n  .then(res => res.json())\n  .then(data => {\n    const { DataView } = DataSet;\n    const dv = new DataView();\n    dv.source(data)\n      .transform({\n        type: 'fold',\n        key: 'city',\n        value: 'value',\n        fields: [ 'New York', 'San Francisco', 'Austin' ]\n      });\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 60, 30, 30 ]\n    });\n    chart.source(dv, {\n      date: {\n        type: 'time'\n      },\n      value: {\n        alias: 'Temperature, ºF'\n      }\n    });\n    chart.legend({\n      position: 'top'\n    });\n    chart.axis('date', {\n      line: {\n        stroke: '#000'\n      },\n      tickLine: {\n        stroke: '#000',\n        value: 6 // 刻度线长度\n      },\n      label: {\n        textStyle: {\n          textAlign: 'start'\n        }\n      }\n    });\n    chart.axis('value', {\n      tickLine: {\n        stroke: '#000',\n        value: 6 // 刻度线长度\n      },\n      label: {\n        textStyle: {\n          fill: '#000'\n        }\n      },\n      line: {\n        stroke: '#000'\n      },\n      grid: null\n    });\n    chart.line()\n      .position('date*value')\n      .color('city')\n      .shape('spline')\n      .size(2);\n    chart.render();\n\n    chart.interact('brush');\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.brushLine = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/avg-temp.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var _DataSet = DataSet,\n        DataView = _DataSet.DataView;\n    var dv = new DataView();\n    dv.source(data).transform({\n      type: 'fold',\n      key: 'city',\n      value: 'value',\n      fields: ['New York', 'San Francisco', 'Austin']\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [60, 30, 30]\n    });\n    chart.source(dv, {\n      date: {\n        type: 'time'\n      },\n      value: {\n        alias: 'Temperature, ºF'\n      }\n    });\n    chart.legend({\n      position: 'top'\n    });\n    chart.axis('date', {\n      line: {\n        stroke: '#000'\n      },\n      tickLine: {\n        stroke: '#000',\n        value: 6 // 刻度线长度\n\n      },\n      label: {\n        textStyle: {\n          textAlign: 'start'\n        }\n      }\n    });\n    chart.axis('value', {\n      tickLine: {\n        stroke: '#000',\n        value: 6 // 刻度线长度\n\n      },\n      label: {\n        textStyle: {\n          fill: '#000'\n        }\n      },\n      line: {\n        stroke: '#000'\n      },\n      grid: null\n    });\n    chart.line().position('date*value').color('city').shape('spline').size(2);\n    chart.render();\n    chart.interact('brush');\n  });\n});"},{"relativePath":"other/other/demo/brush-polygon.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/brush-polygon.js","order":6,"filename":"brush-polygon.js","title":{"zh":"brush interaction 多边形","en":"brush interaction"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*izazSIYdpjQAAAAAAAAAAABkARQnAQ","source":"const data = [[ 0, 0, 10 ], [ 0, 1, 19 ], [ 0, 2, 8 ], [ 0, 3, 24 ], [ 0, 4, 67 ], [ 1, 0, 92 ], [ 1, 1, 58 ], [ 1, 2, 78 ], [ 1, 3, 117 ], [ 1, 4, 48 ], [ 2, 0, 35 ], [ 2, 1, 15 ], [ 2, 2, 123 ], [ 2, 3, 64 ], [ 2, 4, 52 ], [ 3, 0, 72 ], [ 3, 1, 132 ], [ 3, 2, 114 ], [ 3, 3, 19 ], [ 3, 4, 16 ], [ 4, 0, 38 ], [ 4, 1, 5 ], [ 4, 2, 8 ], [ 4, 3, 117 ], [ 4, 4, 115 ], [ 5, 0, 88 ], [ 5, 1, 32 ], [ 5, 2, 12 ], [ 5, 3, 6 ], [ 5, 4, 120 ], [ 6, 0, 13 ], [ 6, 1, 44 ], [ 6, 2, 88 ], [ 6, 3, 98 ], [ 6, 4, 96 ], [ 7, 0, 31 ], [ 7, 1, 1 ], [ 7, 2, 82 ], [ 7, 3, 32 ], [ 7, 4, 30 ], [ 8, 0, 85 ], [ 8, 1, 97 ], [ 8, 2, 123 ], [ 8, 3, 64 ], [ 8, 4, 84 ], [ 9, 0, 47 ], [ 9, 1, 114 ], [ 9, 2, 31 ], [ 9, 3, 48 ], [ 9, 4, 91 ]];\nconst source = [];\nfor (let i = 0; i < data.length; i++) {\n  const item = data[i];\n  const obj = {};\n  obj.name = item[0];\n  obj.day = item[1];\n  obj.sales = item[2];\n  source.push(obj);\n}\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: 80\n});\nchart.source(source, {\n  name: {\n    type: 'cat',\n    values: [ 'Alexander', 'Marie', 'Maximilian', 'Sophia', 'Lukas', 'Maria', 'Leon', 'Anna', 'Tim', 'Laura' ]\n  },\n  day: {\n    type: 'cat',\n    values: [ 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday' ]\n  }\n});\nchart.axis('name', {\n  tickLine: null,\n  grid: {\n    align: 'center',\n    lineStyle: {\n      lineWidth: 1,\n      lineDash: null,\n      stroke: '#f0f0f0'\n    }\n  }\n});\nchart.axis('day', {\n  title: null,\n  grid: {\n    align: 'center',\n    lineStyle: {\n      lineWidth: 1,\n      lineDash: null,\n      stroke: '#f0f0f0'\n    },\n    showFirstLine: true\n  }\n});\nchart.legend(false);\nchart.polygon()\n  .position('name*day')\n  .color('sales', '#BAE7FF-#1890FF-#0050B3')\n  .label('sales', {\n    offset: -2,\n    textStyle: {\n      fill: '#fff',\n      shadowBlur: 2,\n      shadowColor: 'rgba(0, 0, 0, .45)'\n    }\n  })\n  .style({\n    lineWidth: 1,\n    stroke: '#fff'\n  });\nchart.render();\nchart.interact('brush', {\n  style: {\n    lineWidth: 1,\n    stroke: '#999',\n    fill: '#999',\n    fillOpacity: 0.3\n  },\n  onBrushmove() {\n    chart.hideTooltip();\n  }\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.brushPolygon = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [[0, 0, 10], [0, 1, 19], [0, 2, 8], [0, 3, 24], [0, 4, 67], [1, 0, 92], [1, 1, 58], [1, 2, 78], [1, 3, 117], [1, 4, 48], [2, 0, 35], [2, 1, 15], [2, 2, 123], [2, 3, 64], [2, 4, 52], [3, 0, 72], [3, 1, 132], [3, 2, 114], [3, 3, 19], [3, 4, 16], [4, 0, 38], [4, 1, 5], [4, 2, 8], [4, 3, 117], [4, 4, 115], [5, 0, 88], [5, 1, 32], [5, 2, 12], [5, 3, 6], [5, 4, 120], [6, 0, 13], [6, 1, 44], [6, 2, 88], [6, 3, 98], [6, 4, 96], [7, 0, 31], [7, 1, 1], [7, 2, 82], [7, 3, 32], [7, 4, 30], [8, 0, 85], [8, 1, 97], [8, 2, 123], [8, 3, 64], [8, 4, 84], [9, 0, 47], [9, 1, 114], [9, 2, 31], [9, 3, 48], [9, 4, 91]];\n  var source = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var item = data[i];\n    var obj = {};\n    obj.name = item[0];\n    obj.day = item[1];\n    obj.sales = item[2];\n    source.push(obj);\n  }\n\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: 80\n  });\n  chart.source(source, {\n    name: {\n      type: 'cat',\n      values: ['Alexander', 'Marie', 'Maximilian', 'Sophia', 'Lukas', 'Maria', 'Leon', 'Anna', 'Tim', 'Laura']\n    },\n    day: {\n      type: 'cat',\n      values: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']\n    }\n  });\n  chart.axis('name', {\n    tickLine: null,\n    grid: {\n      align: 'center',\n      lineStyle: {\n        lineWidth: 1,\n        lineDash: null,\n        stroke: '#f0f0f0'\n      }\n    }\n  });\n  chart.axis('day', {\n    title: null,\n    grid: {\n      align: 'center',\n      lineStyle: {\n        lineWidth: 1,\n        lineDash: null,\n        stroke: '#f0f0f0'\n      },\n      showFirstLine: true\n    }\n  });\n  chart.legend(false);\n  chart.polygon().position('name*day').color('sales', '#BAE7FF-#1890FF-#0050B3').label('sales', {\n    offset: -2,\n    textStyle: {\n      fill: '#fff',\n      shadowBlur: 2,\n      shadowColor: 'rgba(0, 0, 0, .45)'\n    }\n  }).style({\n    lineWidth: 1,\n    stroke: '#fff'\n  });\n  chart.render();\n  chart.interact('brush', {\n    style: {\n      lineWidth: 1,\n      stroke: '#999',\n      fill: '#999',\n      fillOpacity: 0.3\n    },\n    onBrushmove: function onBrushmove() {\n      chart.hideTooltip();\n    }\n  });\n});"},{"relativePath":"other/other/demo/bubble-image.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/bubble-image.js","order":7,"filename":"bubble-image.js","title":{"zh":"气泡图-自定义 shape","en":"bubble chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*jB6VTY-M2gIAAAAAAAAAAABkARQnAQ","source":"const Shape = G2.Shape;\nShape.registerShape('point', 'image', {\n  drawShape(cfg, container) {\n    cfg.points = this.parsePoints(cfg.points);\n    const coord = this._coord;\n    container.addShape('line', {\n      attrs: {\n        x1: cfg.points[0].x,\n        y1: cfg.points[0].y,\n        x2: cfg.points[0].x,\n        y2: coord.start.y,\n        stroke: '#ccc',\n        lineWidth: 1,\n        lineDash: [ 4, 2 ]\n      }\n    });\n    return container.addShape('image', {\n      attrs: {\n        x: cfg.points[0].x - (12 * cfg.size / 2),\n        y: cfg.points[0].y - 12 * cfg.size,\n        width: 12 * cfg.size,\n        height: 12 * cfg.size,\n        img: cfg.shape[1]\n      }\n    });\n  }\n});\nconst data = [\n  { name: 'Internet Explorer', value: 26 },\n  { name: 'Chrome', value: 40 },\n  { name: 'Firefox', value: 30 },\n  { name: 'Safari', value: 24 },\n  { name: 'Opera', value: 15 },\n  { name: 'Undetectable', value: 8 }\n];\nconst imageMap = {\n  'Internet Explorer': 'https://gw.alipayobjects.com/zos/rmsportal/eOYRaLPOmkieVvjyjTzM.png',\n  Chrome: 'https://gw.alipayobjects.com/zos/rmsportal/dWJWRLWfpOEbwCyxmZwu.png',\n  Firefox: 'https://gw.alipayobjects.com/zos/rmsportal/ZEPeDluKmAoTioCABBTc.png',\n  Safari: 'https://gw.alipayobjects.com/zos/rmsportal/eZYhlLzqWLAYwOHQAXmc.png',\n  Opera: 'https://gw.alipayobjects.com/zos/rmsportal/vXiGOWCGZNKuVVpVYQAw.png',\n  Undetectable: 'https://gw.alipayobjects.com/zos/rmsportal/NjApYXminrnhBgOXyuaK.png'\n};\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 20, 20, 90 ]\n});\nchart.source(data, {\n  value: {\n    nice: false,\n    max: 60,\n    min: 0\n  }\n});\nchart.legend(false);\nchart.axis('value', false);\nchart.point().position('name*value')\n  .size('value')\n  .color('name')\n  .shape('name', function(name) {\n    return [ 'image', imageMap[name] ]; // 根据具体的字段指定 shape\n  })\n  .label('value', {\n    offset: -20,\n    textStyle: {\n      fontSize: 16 // 文本大小\n    }\n  });\nchart.render();\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.bubbleImage = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var Shape = G2.Shape;\n  Shape.registerShape('point', 'image', {\n    drawShape: function drawShape(cfg, container) {\n      cfg.points = this.parsePoints(cfg.points);\n      var coord = this._coord;\n      container.addShape('line', {\n        attrs: {\n          x1: cfg.points[0].x,\n          y1: cfg.points[0].y,\n          x2: cfg.points[0].x,\n          y2: coord.start.y,\n          stroke: '#ccc',\n          lineWidth: 1,\n          lineDash: [4, 2]\n        }\n      });\n      return container.addShape('image', {\n        attrs: {\n          x: cfg.points[0].x - 12 * cfg.size / 2,\n          y: cfg.points[0].y - 12 * cfg.size,\n          width: 12 * cfg.size,\n          height: 12 * cfg.size,\n          img: cfg.shape[1]\n        }\n      });\n    }\n  });\n  var data = [{\n    name: 'Internet Explorer',\n    value: 26\n  }, {\n    name: 'Chrome',\n    value: 40\n  }, {\n    name: 'Firefox',\n    value: 30\n  }, {\n    name: 'Safari',\n    value: 24\n  }, {\n    name: 'Opera',\n    value: 15\n  }, {\n    name: 'Undetectable',\n    value: 8\n  }];\n  var imageMap = {\n    'Internet Explorer': 'https://gw.alipayobjects.com/zos/rmsportal/eOYRaLPOmkieVvjyjTzM.png',\n    Chrome: 'https://gw.alipayobjects.com/zos/rmsportal/dWJWRLWfpOEbwCyxmZwu.png',\n    Firefox: 'https://gw.alipayobjects.com/zos/rmsportal/ZEPeDluKmAoTioCABBTc.png',\n    Safari: 'https://gw.alipayobjects.com/zos/rmsportal/eZYhlLzqWLAYwOHQAXmc.png',\n    Opera: 'https://gw.alipayobjects.com/zos/rmsportal/vXiGOWCGZNKuVVpVYQAw.png',\n    Undetectable: 'https://gw.alipayobjects.com/zos/rmsportal/NjApYXminrnhBgOXyuaK.png'\n  };\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [20, 20, 90]\n  });\n  chart.source(data, {\n    value: {\n      nice: false,\n      max: 60,\n      min: 0\n    }\n  });\n  chart.legend(false);\n  chart.axis('value', false);\n  chart.point().position('name*value').size('value').color('name').shape('name', function (name) {\n    return ['image', imageMap[name]]; // 根据具体的字段指定 shape\n  }).label('value', {\n    offset: -20,\n    textStyle: {\n      fontSize: 16 // 文本大小\n\n    }\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/bullet-graph.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/bullet-graph.js","order":8,"filename":"bullet-graph.js","title":{"zh":"子弹图","en":"bullet graph"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*1qjwRIw8CVsAAAAAAAAAAABkARQnAQ","source":"const data = [\n  { title: 'Revenue', subtitle: 'US$, in thousands', ranges: [ 150, 225, 300 ], actual: 270, target: 250 },\n  { title: 'Profit', subtitle: '%', ranges: [ 20, 25, 30 ], actual: 23, target: 26 },\n  { title: 'Order Size', subtitle: 'US$, average', ranges: [ 350, 500, 600 ], actual: 100, target: 550 },\n  { title: 'New Customers', subtitle: 'count', ranges: [ 1400, 2000, 2500 ], actual: 1650, target: 2100 },\n  { title: 'Satisfaction', subtitle: 'out of 5', ranges: [ 3.5, 4.25, 5 ], actual: 3.2, target: 4.4 }\n];\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 100, 150 ]\n});\nchart.legend(false); // 不展示图例\nlet y = 0;\nconst yGap = 0.1;\nfor (let i = 0, l = data.length; i < l; i++) {\n  const ranges = data[i].ranges;\n  const view = chart.view({\n    start: {\n      x: 0,\n      y\n    },\n    end: {\n      x: 1,\n      y: y + yGap\n    }\n  });\n  view.source([ data[i] ], {\n    actual: {\n      min: 0,\n      max: ranges[2],\n      nice: false\n    },\n    target: {\n      min: 0,\n      max: ranges[2],\n      nice: false\n    }\n  });\n  view.coord().transpose();\n  view.axis('target', false);\n  view.axis('actual', {\n    position: 'right'\n  });\n  view.point()\n    .position('title*target')\n    .color('#square')\n    .shape('line')\n    .size(12)\n    .style({\n      lineWidth: 2\n    });\n  view.interval()\n    .position('title*actual')\n    .color('#223273')\n    .size(15);\n  // 差\n  view.guide().region({\n    start: [ -1, 0 ],\n    end: [ 1, ranges[0] ],\n    style: {\n      fill: '#FFA39E',\n      fillOpacity: 0.85\n    }\n  });\n  // 良\n  view.guide().region({\n    start: [ -1, ranges[0] ],\n    end: [ 1, ranges[1] ],\n    style: {\n      fill: '#FFD591',\n      fillOpacity: 0.85\n    }\n  });\n  // 优\n  view.guide().region({\n    start: [ -1, ranges[1] ],\n    end: [ 1, ranges[2] ],\n    style: {\n      fill: '#A7E8B4',\n      fillOpacity: 0.85\n    }\n  });\n  y += yGap + 0.125;\n}\nchart.legend({\n  custom: 'true',\n  clickable: false,\n  items: [\n    {\n      value: '差',\n      marker: { symbol: 'square', fill: '#FFA39E', radius: 5 }\n    },\n    {\n      value: '良',\n      marker: { symbol: 'square', fill: '#FFD591', radius: 5 }\n    },\n    {\n      value: '优',\n      marker: { symbol: 'square', fill: '#A7E8B4', radius: 5 }\n    },\n    {\n      value: '实际值',\n      marker: { symbol: 'square', fill: '#223273', radius: 5 }\n    },\n    {\n      value: '目标值',\n      marker: {\n        symbol: 'line',\n        stroke: '#262626',\n        radius: 5\n      }\n    }\n  ]\n});\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.bulletGraph = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    title: 'Revenue',\n    subtitle: 'US$, in thousands',\n    ranges: [150, 225, 300],\n    actual: 270,\n    target: 250\n  }, {\n    title: 'Profit',\n    subtitle: '%',\n    ranges: [20, 25, 30],\n    actual: 23,\n    target: 26\n  }, {\n    title: 'Order Size',\n    subtitle: 'US$, average',\n    ranges: [350, 500, 600],\n    actual: 100,\n    target: 550\n  }, {\n    title: 'New Customers',\n    subtitle: 'count',\n    ranges: [1400, 2000, 2500],\n    actual: 1650,\n    target: 2100\n  }, {\n    title: 'Satisfaction',\n    subtitle: 'out of 5',\n    ranges: [3.5, 4.25, 5],\n    actual: 3.2,\n    target: 4.4\n  }];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [100, 150]\n  });\n  chart.legend(false); // 不展示图例\n\n  var y = 0;\n  var yGap = 0.1;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var ranges = data[i].ranges;\n    var view = chart.view({\n      start: {\n        x: 0,\n        y: y\n      },\n      end: {\n        x: 1,\n        y: y + yGap\n      }\n    });\n    view.source([data[i]], {\n      actual: {\n        min: 0,\n        max: ranges[2],\n        nice: false\n      },\n      target: {\n        min: 0,\n        max: ranges[2],\n        nice: false\n      }\n    });\n    view.coord().transpose();\n    view.axis('target', false);\n    view.axis('actual', {\n      position: 'right'\n    });\n    view.point().position('title*target').color('#square').shape('line').size(12).style({\n      lineWidth: 2\n    });\n    view.interval().position('title*actual').color('#223273').size(15); // 差\n\n    view.guide().region({\n      start: [-1, 0],\n      end: [1, ranges[0]],\n      style: {\n        fill: '#FFA39E',\n        fillOpacity: 0.85\n      }\n    }); // 良\n\n    view.guide().region({\n      start: [-1, ranges[0]],\n      end: [1, ranges[1]],\n      style: {\n        fill: '#FFD591',\n        fillOpacity: 0.85\n      }\n    }); // 优\n\n    view.guide().region({\n      start: [-1, ranges[1]],\n      end: [1, ranges[2]],\n      style: {\n        fill: '#A7E8B4',\n        fillOpacity: 0.85\n      }\n    });\n    y += yGap + 0.125;\n  }\n\n  chart.legend({\n    custom: 'true',\n    clickable: false,\n    items: [{\n      value: '差',\n      marker: {\n        symbol: 'square',\n        fill: '#FFA39E',\n        radius: 5\n      }\n    }, {\n      value: '良',\n      marker: {\n        symbol: 'square',\n        fill: '#FFD591',\n        radius: 5\n      }\n    }, {\n      value: '优',\n      marker: {\n        symbol: 'square',\n        fill: '#A7E8B4',\n        radius: 5\n      }\n    }, {\n      value: '实际值',\n      marker: {\n        symbol: 'square',\n        fill: '#223273',\n        radius: 5\n      }\n    }, {\n      value: '目标值',\n      marker: {\n        symbol: 'line',\n        stroke: '#262626',\n        radius: 5\n      }\n    }]\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/column-error.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/column-error.js","order":9,"filename":"column-error.js","title":{"zh":"柱状图-ErrorBar","en":"error column chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*egE4Qp8F33QAAAAAAAAAAABkARQnAQ","source":"const data = [\n  { name: '类别一', value: 150, error: 6 },\n  { name: '类别二', value: 120, error: 10 },\n  { name: '类别三', value: 170, error: 5 },\n  { name: '类别四', value: 170, error: 5 }\n];\n\ndata.forEach(function(obj) {\n  obj.range = [ obj.value - obj.error, obj.value + obj.error ];\n});\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500\n});\nchart.legend(false);\nchart.source(data, {\n  value: {\n    min: 0,\n    max: 200\n  },\n  range: {\n    min: 0,\n    max: 200\n  }\n});\n\nchart.interval()\n  .position('name*value')\n  .color('name')\n  .opacity(0.7);\n\nchart.interval()\n  .position('name*range')\n  .color('name')\n  .size(40)\n  .shape('tick');\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.columnError = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    name: '类别一',\n    value: 150,\n    error: 6\n  }, {\n    name: '类别二',\n    value: 120,\n    error: 10\n  }, {\n    name: '类别三',\n    value: 170,\n    error: 5\n  }, {\n    name: '类别四',\n    value: 170,\n    error: 5\n  }];\n  data.forEach(function (obj) {\n    obj.range = [obj.value - obj.error, obj.value + obj.error];\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500\n  });\n  chart.legend(false);\n  chart.source(data, {\n    value: {\n      min: 0,\n      max: 200\n    },\n    range: {\n      min: 0,\n      max: 200\n    }\n  });\n  chart.interval().position('name*value').color('name').opacity(0.7);\n  chart.interval().position('name*range').color('name').size(40).shape('tick');\n  chart.render();\n});"},{"relativePath":"other/other/demo/double-axes.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/double-axes.js","order":10,"filename":"double-axes.js","title":{"zh":"双轴图表","en":"double axes"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*7ElNT4BLU_EAAAAAAAAAAABkARQnAQ","source":"const data = [\n  { time: '10:10', call: 4, waiting: 2, people: 2 },\n  { time: '10:15', call: 2, waiting: 6, people: 3 },\n  { time: '10:20', call: 13, waiting: 2, people: 5 },\n  { time: '10:25', call: 9, waiting: 9, people: 1 },\n  { time: '10:30', call: 5, waiting: 2, people: 3 },\n  { time: '10:35', call: 8, waiting: 2, people: 1 },\n  { time: '10:40', call: 13, waiting: 1, people: 2 }\n];\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500\n});\nchart.source(data, {\n  call: {\n    min: 0\n  },\n  people: {\n    min: 0\n  },\n  waiting: {\n    min: 0\n  }\n});\nchart.legend({\n  custom: true,\n  allowAllCanceled: true,\n  items: [\n    { value: 'waiting', marker: { symbol: 'square', fill: '#3182bd', radius: 5 } },\n    { value: 'people', marker: { symbol: 'hyphen', stroke: '#fdae6b', radius: 5, lineWidth: 3 } }\n  ],\n  onClick: function onClick(ev) {\n    const item = ev.item;\n    const value = item.value;\n    const checked = item.checked;\n    const geoms = chart.getAllGeoms();\n    for (let i = 0; i < geoms.length; i++) {\n      const geom = geoms[i];\n      if (geom.getYScale().field === value) {\n        if (checked) {\n          geom.show();\n        }\n      } else {\n        geom.hide();\n      }\n    }\n  }\n});\nchart.axis('people', {\n  grid: null,\n  label: {\n    textStyle: {\n      fill: '#fdae6b'\n    }\n  }\n});\nchart.interval()\n  .position('time*waiting')\n  .color('#3182bd');\nchart.line()\n  .position('time*people')\n  .color('#fdae6b')\n  .size(3)\n  .shape('smooth');\nchart.point()\n  .position('time*people')\n  .color('#fdae6b')\n  .size(3)\n  .shape('circle');\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.doubleAxes = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    time: '10:10',\n    call: 4,\n    waiting: 2,\n    people: 2\n  }, {\n    time: '10:15',\n    call: 2,\n    waiting: 6,\n    people: 3\n  }, {\n    time: '10:20',\n    call: 13,\n    waiting: 2,\n    people: 5\n  }, {\n    time: '10:25',\n    call: 9,\n    waiting: 9,\n    people: 1\n  }, {\n    time: '10:30',\n    call: 5,\n    waiting: 2,\n    people: 3\n  }, {\n    time: '10:35',\n    call: 8,\n    waiting: 2,\n    people: 1\n  }, {\n    time: '10:40',\n    call: 13,\n    waiting: 1,\n    people: 2\n  }];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500\n  });\n  chart.source(data, {\n    call: {\n      min: 0\n    },\n    people: {\n      min: 0\n    },\n    waiting: {\n      min: 0\n    }\n  });\n  chart.legend({\n    custom: true,\n    allowAllCanceled: true,\n    items: [{\n      value: 'waiting',\n      marker: {\n        symbol: 'square',\n        fill: '#3182bd',\n        radius: 5\n      }\n    }, {\n      value: 'people',\n      marker: {\n        symbol: 'hyphen',\n        stroke: '#fdae6b',\n        radius: 5,\n        lineWidth: 3\n      }\n    }],\n    onClick: function onClick(ev) {\n      var item = ev.item;\n      var value = item.value;\n      var checked = item.checked;\n      var geoms = chart.getAllGeoms();\n\n      for (var i = 0; i < geoms.length; i++) {\n        var geom = geoms[i];\n\n        if (geom.getYScale().field === value) {\n          if (checked) {\n            geom.show();\n          }\n        } else {\n          geom.hide();\n        }\n      }\n    }\n  });\n  chart.axis('people', {\n    grid: null,\n    label: {\n      textStyle: {\n        fill: '#fdae6b'\n      }\n    }\n  });\n  chart.interval().position('time*waiting').color('#3182bd');\n  chart.line().position('time*people').color('#fdae6b').size(3).shape('smooth');\n  chart.point().position('time*people').color('#fdae6b').size(3).shape('circle');\n  chart.render();\n});"},{"relativePath":"other/other/demo/hexbin-size.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/hexbin-size.js","order":12,"filename":"hexbin-size.js","title":{"zh":"hexbin-size","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*tX5lSazu4G8AAAAAAAAAAABkARQnAQ","source":"fetch('../data/gaussion-distribution.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data)\n      .transform({\n        sizeByCount: true, // calculate bin size by binning count\n        type: 'bin.hexagon',\n        fields: [ 'x', 'y' ], // 对应坐标轴上的一个点\n        bins: [ 10, 5 ]\n      });\n\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(dv);\n    chart.tooltip({\n      showTitle: false,\n      crosshairs: false\n    });\n    chart.legend({\n      offset: 40\n    });\n    chart.axis('x', {\n      grid: {\n        lineStyle: {\n          stroke: '#d9d9d9',\n          lineWidth: 1,\n          lineDash: [ 2, 2 ]\n        }\n      }\n    });\n    chart.polygon().position('x*y')\n      .color('count', '#BAE7FF-#1890FF-#0050B3')\n      .style({\n        lineWidth: 1,\n        stroke: '#fff'\n      });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.hexbinSize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/gaussion-distribution.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new DataSet.View().source(data).transform({\n      sizeByCount: true,\n      // calculate bin size by binning count\n      type: 'bin.hexagon',\n      fields: ['x', 'y'],\n      // 对应坐标轴上的一个点\n      bins: [10, 5]\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(dv);\n    chart.tooltip({\n      showTitle: false,\n      crosshairs: false\n    });\n    chart.legend({\n      offset: 40\n    });\n    chart.axis('x', {\n      grid: {\n        lineStyle: {\n          stroke: '#d9d9d9',\n          lineWidth: 1,\n          lineDash: [2, 2]\n        }\n      }\n    });\n    chart.polygon().position('x*y').color('count', '#BAE7FF-#1890FF-#0050B3').style({\n      lineWidth: 1,\n      stroke: '#fff'\n    });\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/kagi-chart.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/kagi-chart.js","order":13,"filename":"kagi-chart.js","title":{"zh":"卡吉图","en":"kagi chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*kJxhRomBRqMAAAAAAAAAAABkARQnAQ","source":"fetch('../data/kagi.json')\n  .then(res => res.json())\n  .then(data => {\n    // 获取卡吉图数据点\n    const kagiData = getKagiData(data, 'date', 'value');\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(kagiData, {\n      date: {\n        type: 'cat',\n        tickCount: 10,\n        range: [ 0, 1 ]\n      }\n    });\n    chart.tooltip({\n      crosshairs: {\n        type: 'line'\n      }\n    });\n    chart.path({\n      generatePoints: true\n    })\n      .position('date*value')\n      .color('type', val => {\n        if (val === 'pos') {\n          return '#f04864';\n        }\n        return '#2fc25b';\n      })\n      .size('type', val => {\n        if (val === 'pos') {\n          return 2;\n        }\n        return 1;\n      });\n    chart.render();\n  });\n/**\n * 获取卡吉图数据点\n * @param  {Array} points 原始数据点\n * @param  {String} x x维度字段名\n * @param  {String} y y维度字段名\n * @return {Array} data 卡吉图数据点\n **/\nfunction getKagiData(points, x, y) {\n  // 初始最小值\n  let min = points[0][y];\n  // 初始最大值\n  let max = points[0][y];\n  // 初始绘制起点\n  let start = points[0];\n  // 阳线和阴线判断标志\n  let isPos = points[1][y] >= points[0][y];\n  // 初始绘制方向，1为向上，－1为向下\n  let direction = isPos ? 1 : -1;\n  // 阈值，默认为最大值的4%\n  const maxValue = getMax(points, y);\n  const threshold = maxValue * 0.04;\n  // 阴线数组\n  const negPath = [];\n  // 阳线数组\n  const posPath = [];\n  const tmp1 = {};\n  tmp1[x] = start[x];\n  tmp1[y] = start[y];\n  pushPoint(tmp1, isPos, posPath, negPath, x, y);\n  if (points.length > 1) {\n    for (let i = 0; i <= points.length - 1; i++) {\n      // 浮动超过阈值时执行算法\n      if (Math.abs(start[y] - points[i][y]) > threshold) {\n        if (direction > 0) {\n          if (points[i][y] >= start[y]) {\n            isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n            start[y] = points[i][y];\n          } else {\n            const tmp2 = {};\n            tmp2[x] = points[i][x];\n            tmp2[y] = start[y];\n            pushPoint(tmp2, isPos, posPath, negPath, x, y);\n            start[x] = points[i][x];\n            direction = -1; // 转向\n            isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n            max = start[y]; // 更新当前最高点\n            start = points[i]; // 更新当前绘制起点\n          }\n        } else {\n          if (points[i][y] < start[y]) {\n            isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n            start[y] = points[i][y];\n          } else {\n            const tmp3 = {};\n            tmp3[x] = points[i][x];\n            tmp3[y] = start[y];\n            pushPoint(tmp3, isPos, posPath, negPath, x, y);\n            start[x] = points[i][x];\n            direction = 1;\n            isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n            min = start[y]; // 更新当前最低点\n            start = points[i];\n          }\n        }\n      }\n    }\n  }\n  return posPath.concat(negPath);\n}\n/**\n * 获取卡吉图垂直线数据点\n * @param  {Array} start 起点坐标\n * @param  {Array} end 终点坐标\n * @param  {Number} changePoint 转折点y坐标\n * @param  {Number} direction 绘制方向\n * @param  {Array} negPath 阴线数组\n * @param  {Array} posPath 阳线数组\n * @param  {Boolean} isPos 是否阳线标志位\n * @param  {String} x x维度字段名\n * @param  {String} y y维度字段名\n * @return  {Boolean} isPos 是否阳线标志位\n **/\nfunction getVerticalPoints(start, end, changePoint, direction, negPath, posPath, isPos, x, y) {\n  // 阳线和阴线相互转换的判断条件\n  const condition = direction > 0 ? (end[y] > changePoint) && (start[y] < changePoint) && !isPos : (end[y] < changePoint) && (start[y] > changePoint) && isPos;\n  const tmp1 = {};\n  tmp1[x] = start[x];\n  tmp1[y] = changePoint;\n  const tmp2 = {};\n  tmp2[x] = start[x];\n  tmp2[y] = end[y];\n  if (condition) {\n    pushPoint(tmp1, isPos, posPath, negPath, x, y, true);\n    isPos = !isPos;\n    pushPoint(tmp2, isPos, posPath, negPath, x, y);\n  } else {\n    pushPoint(tmp2, isPos, posPath, negPath, x, y);\n  }\n  return isPos;\n}\n\nfunction pushPoint(point, isPos, posPath, negPath, x, y, isChangePoint = false) {\n  const tmpPoint = {};\n  tmpPoint[x] = point[x];\n  tmpPoint[y] = isChangePoint ? point[y] : null; // 转折点阳线和阴线都有数据，非转折点阳线或阴线的数据点为空\n  if (isPos) {\n    point.type = 'pos';\n    posPath.push(point);\n    tmpPoint.type = 'neg';\n    negPath.push(tmpPoint);\n  } else {\n    point.type = 'neg';\n    negPath.push(point);\n    tmpPoint.type = 'pos';\n    posPath.push(tmpPoint);\n  }\n}\n\nfunction getMax(points, y) {\n  let max = points[points.length - 1][y];\n  if (points.length > 0) {\n    for (let i = points.length - 1; i >= 0; i--) {\n      max = points[i][y] > max ? points[i][y] : max;\n    }\n  }\n  return max;\n}\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.kagiChart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/kagi.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    // 获取卡吉图数据点\n    var kagiData = getKagiData(data, 'date', 'value');\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(kagiData, {\n      date: {\n        type: 'cat',\n        tickCount: 10,\n        range: [0, 1]\n      }\n    });\n    chart.tooltip({\n      crosshairs: {\n        type: 'line'\n      }\n    });\n    chart.path({\n      generatePoints: true\n    }).position('date*value').color('type', function (val) {\n      if (val === 'pos') {\n        return '#f04864';\n      }\n\n      return '#2fc25b';\n    }).size('type', function (val) {\n      if (val === 'pos') {\n        return 2;\n      }\n\n      return 1;\n    });\n    chart.render();\n  });\n  /**\n   * 获取卡吉图数据点\n   * @param  {Array} points 原始数据点\n   * @param  {String} x x维度字段名\n   * @param  {String} y y维度字段名\n   * @return {Array} data 卡吉图数据点\n   **/\n\n  function getKagiData(points, x, y) {\n    // 初始最小值\n    var min = points[0][y]; // 初始最大值\n\n    var max = points[0][y]; // 初始绘制起点\n\n    var start = points[0]; // 阳线和阴线判断标志\n\n    var isPos = points[1][y] >= points[0][y]; // 初始绘制方向，1为向上，－1为向下\n\n    var direction = isPos ? 1 : -1; // 阈值，默认为最大值的4%\n\n    var maxValue = getMax(points, y);\n    var threshold = maxValue * 0.04; // 阴线数组\n\n    var negPath = []; // 阳线数组\n\n    var posPath = [];\n    var tmp1 = {};\n    tmp1[x] = start[x];\n    tmp1[y] = start[y];\n    pushPoint(tmp1, isPos, posPath, negPath, x, y);\n\n    if (points.length > 1) {\n      for (var i = 0; i <= points.length - 1; i++) {\n        // 浮动超过阈值时执行算法\n        if (Math.abs(start[y] - points[i][y]) > threshold) {\n          if (direction > 0) {\n            if (points[i][y] >= start[y]) {\n              isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n              start[y] = points[i][y];\n            } else {\n              var tmp2 = {};\n              tmp2[x] = points[i][x];\n              tmp2[y] = start[y];\n              pushPoint(tmp2, isPos, posPath, negPath, x, y);\n              start[x] = points[i][x];\n              direction = -1; // 转向\n\n              isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n              max = start[y]; // 更新当前最高点\n\n              start = points[i]; // 更新当前绘制起点\n            }\n          } else {\n            if (points[i][y] < start[y]) {\n              isPos = getVerticalPoints(start, points[i], min, direction, negPath, posPath, isPos, x, y);\n              start[y] = points[i][y];\n            } else {\n              var tmp3 = {};\n              tmp3[x] = points[i][x];\n              tmp3[y] = start[y];\n              pushPoint(tmp3, isPos, posPath, negPath, x, y);\n              start[x] = points[i][x];\n              direction = 1;\n              isPos = getVerticalPoints(start, points[i], max, direction, negPath, posPath, isPos, x, y);\n              min = start[y]; // 更新当前最低点\n\n              start = points[i];\n            }\n          }\n        }\n      }\n    }\n\n    return posPath.concat(negPath);\n  }\n  /**\n   * 获取卡吉图垂直线数据点\n   * @param  {Array} start 起点坐标\n   * @param  {Array} end 终点坐标\n   * @param  {Number} changePoint 转折点y坐标\n   * @param  {Number} direction 绘制方向\n   * @param  {Array} negPath 阴线数组\n   * @param  {Array} posPath 阳线数组\n   * @param  {Boolean} isPos 是否阳线标志位\n   * @param  {String} x x维度字段名\n   * @param  {String} y y维度字段名\n   * @return  {Boolean} isPos 是否阳线标志位\n   **/\n\n\n  function getVerticalPoints(start, end, changePoint, direction, negPath, posPath, isPos, x, y) {\n    // 阳线和阴线相互转换的判断条件\n    var condition = direction > 0 ? end[y] > changePoint && start[y] < changePoint && !isPos : end[y] < changePoint && start[y] > changePoint && isPos;\n    var tmp1 = {};\n    tmp1[x] = start[x];\n    tmp1[y] = changePoint;\n    var tmp2 = {};\n    tmp2[x] = start[x];\n    tmp2[y] = end[y];\n\n    if (condition) {\n      pushPoint(tmp1, isPos, posPath, negPath, x, y, true);\n      isPos = !isPos;\n      pushPoint(tmp2, isPos, posPath, negPath, x, y);\n    } else {\n      pushPoint(tmp2, isPos, posPath, negPath, x, y);\n    }\n\n    return isPos;\n  }\n\n  function pushPoint(point, isPos, posPath, negPath, x, y) {\n    var isChangePoint = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var tmpPoint = {};\n    tmpPoint[x] = point[x];\n    tmpPoint[y] = isChangePoint ? point[y] : null; // 转折点阳线和阴线都有数据，非转折点阳线或阴线的数据点为空\n\n    if (isPos) {\n      point.type = 'pos';\n      posPath.push(point);\n      tmpPoint.type = 'neg';\n      negPath.push(tmpPoint);\n    } else {\n      point.type = 'neg';\n      negPath.push(point);\n      tmpPoint.type = 'pos';\n      posPath.push(tmpPoint);\n    }\n  }\n\n  function getMax(points, y) {\n    var max = points[points.length - 1][y];\n\n    if (points.length > 0) {\n      for (var i = points.length - 1; i >= 0; i--) {\n        max = points[i][y] > max ? points[i][y] : max;\n      }\n    }\n\n    return max;\n  }\n});"},{"relativePath":"other/other/demo/line-realtime.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/line-realtime.js","order":14,"filename":"line-realtime.js","title":{"zh":"实时更新数据的折线图","en":"realtime line chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*FvlCR6GXUk0AAAAAAAAAAABkARQnAQ","source":"const data = [];\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500\n});\nchart.source(data, {\n  time: {\n    alias: '时间',\n    type: 'time',\n    mask: 'HH:mm:ss',\n    tickCount: 10,\n    nice: false\n  },\n  temperature: {\n    alias: '平均温度(°C)',\n    min: 10,\n    max: 35\n  },\n  type: {\n    type: 'cat'\n  }\n});\nchart.line()\n  .position('time*temperature')\n  .color('type', [ '#ff7f0e', '#2ca02c' ])\n  .shape('smooth')\n  .size(2);\nchart.render();\nsetInterval(function() {\n  const now = new Date();\n  const time = now.getTime();\n  const temperature1 = ~~(Math.random() * 5) + 22;\n  const temperature2 = ~~(Math.random() * 7) + 17;\n  if (data.length >= 200) {\n    data.shift();\n    data.shift();\n  }\n  data.push({\n    time,\n    temperature: temperature1,\n    type: '记录1'\n  });\n  data.push({\n    time,\n    temperature: temperature2,\n    type: '记录2'\n  });\n  chart.changeData(data);\n}, 1000);\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.lineRealtime = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500\n  });\n  chart.source(data, {\n    time: {\n      alias: '时间',\n      type: 'time',\n      mask: 'HH:mm:ss',\n      tickCount: 10,\n      nice: false\n    },\n    temperature: {\n      alias: '平均温度(°C)',\n      min: 10,\n      max: 35\n    },\n    type: {\n      type: 'cat'\n    }\n  });\n  chart.line().position('time*temperature').color('type', ['#ff7f0e', '#2ca02c']).shape('smooth').size(2);\n  chart.render();\n  setInterval(function () {\n    var now = new Date();\n    var time = now.getTime();\n    var temperature1 = ~~(Math.random() * 5) + 22;\n    var temperature2 = ~~(Math.random() * 7) + 17;\n\n    if (data.length >= 200) {\n      data.shift();\n      data.shift();\n    }\n\n    data.push({\n      time: time,\n      temperature: temperature1,\n      type: '记录1'\n    });\n    data.push({\n      time: time,\n      temperature: temperature2,\n      type: '记录2'\n    });\n    chart.changeData(data);\n  }, 1000);\n});"},{"relativePath":"other/other/demo/liquid-fill-gauge.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/liquid-fill-gauge.js","order":15,"filename":"liquid-fill-gauge.js","title":{"zh":"水波图","en":"liquid gauge"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*05IbQJFHJlIAAAAAAAAAAABkARQnAQ","source":"const data = [\n  {\n    gender: 'male',\n    path: 'M381.759 0h292l-.64 295.328-100.127-100.096-94.368 94.368C499.808 326.848 512 369.824 512 415.712c0 141.376-114.56 256-256 256-141.376 0-256-114.624-256-256s114.624-256 256-256c48.8 0 94.272 13.92 133.12 37.632l93.376-94.592L381.76 0zM128.032 415.744c0 70.688 57.312 128 128 128s128-57.312 128-128-57.312-128-128-128-128 57.312-128 128z',\n    value: 50\n  },\n  {\n    gender: 'middle',\n    path: 'M381.759 0h292l-.64 295.328-100.127-100.096-94.368 94.368C499.808 326.848 512 369.824 512 415.712c0 141.376-114.56 256-256 256-141.376 0-256-114.624-256-256s114.624-256 256-256c48.8 0 94.272 13.92 133.12 37.632l93.376-94.592L381.76 0zM128.032 415.744c0 70.688 57.312 128 128 128s128-57.312 128-128-57.312-128-128-128-128 57.312-128 128z',\n    value: 25\n  },\n  {\n    gender: 'female',\n    path: 'M320.96 503.232v105.376h127.872V736.48H320.96v127.872H191.136V736.48H63.296V608.608h127.84v-105.76C81.216 474.208 0 374.56 0 255.712 0 114.496 114.496 0 255.712 0c141.248 0 255.68 114.496 255.68 255.712 0 119.328-79.872 219.264-190.432 247.52zm-65.248-375.36c-70.624 0-127.872 57.216-127.872 127.84 0 70.592 57.248 127.84 127.872 127.84s127.872-57.248 127.872-127.84c0-70.624-57.248-127.84-127.872-127.84z',\n    value: 25\n  }\n];\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: 0\n});\nchart.source(data, {\n  value: {\n    min: 0,\n    max: 100\n  }\n});\nchart.legend(false);\nchart.axis(false);\nchart.interval()\n  .position('gender*value')\n  .color('gender')\n  // .shape('path', path => [ 'liquid-fill-path', path ])\n  .shape('liquid-fill-gauge')\n  .style({\n    lineWidth: 10,\n    opacity: 0.75\n  });\n\ndata.forEach(row => {\n  chart.guide().text({\n    top: true,\n    position: {\n      gender: row.gender,\n      value: 50\n    },\n    content: `${row.value}%`,\n    style: {\n      opacity: 0.75,\n      fontSize: 30,\n      textAlign: 'center'\n    }\n  });\n});\n\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.liquidFillGauge = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    gender: 'male',\n    path: 'M381.759 0h292l-.64 295.328-100.127-100.096-94.368 94.368C499.808 326.848 512 369.824 512 415.712c0 141.376-114.56 256-256 256-141.376 0-256-114.624-256-256s114.624-256 256-256c48.8 0 94.272 13.92 133.12 37.632l93.376-94.592L381.76 0zM128.032 415.744c0 70.688 57.312 128 128 128s128-57.312 128-128-57.312-128-128-128-128 57.312-128 128z',\n    value: 50\n  }, {\n    gender: 'middle',\n    path: 'M381.759 0h292l-.64 295.328-100.127-100.096-94.368 94.368C499.808 326.848 512 369.824 512 415.712c0 141.376-114.56 256-256 256-141.376 0-256-114.624-256-256s114.624-256 256-256c48.8 0 94.272 13.92 133.12 37.632l93.376-94.592L381.76 0zM128.032 415.744c0 70.688 57.312 128 128 128s128-57.312 128-128-57.312-128-128-128-128 57.312-128 128z',\n    value: 25\n  }, {\n    gender: 'female',\n    path: 'M320.96 503.232v105.376h127.872V736.48H320.96v127.872H191.136V736.48H63.296V608.608h127.84v-105.76C81.216 474.208 0 374.56 0 255.712 0 114.496 114.496 0 255.712 0c141.248 0 255.68 114.496 255.68 255.712 0 119.328-79.872 219.264-190.432 247.52zm-65.248-375.36c-70.624 0-127.872 57.216-127.872 127.84 0 70.592 57.248 127.84 127.872 127.84s127.872-57.248 127.872-127.84c0-70.624-57.248-127.84-127.872-127.84z',\n    value: 25\n  }];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: 0\n  });\n  chart.source(data, {\n    value: {\n      min: 0,\n      max: 100\n    }\n  });\n  chart.legend(false);\n  chart.axis(false);\n  chart.interval().position('gender*value').color('gender') // .shape('path', path => [ 'liquid-fill-path', path ])\n  .shape('liquid-fill-gauge').style({\n    lineWidth: 10,\n    opacity: 0.75\n  });\n  data.forEach(function (row) {\n    chart.guide().text({\n      top: true,\n      position: {\n        gender: row.gender,\n        value: 50\n      },\n      content: \"\".concat(row.value, \"%\"),\n      style: {\n        opacity: 0.75,\n        fontSize: 30,\n        textAlign: 'center'\n      }\n    });\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/path.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/path.js","order":16,"filename":"path.js","title":{"zh":"路径图","en":"path chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*5hZ3Tb2LNyUAAAAAAAAAAABkARQnAQ","source":"\nconst { Shape, Util, Chart } = G2;\nShape.registerShape('line', 'lineWidthArrow', {\n  draw(cfg, container) {\n    const points = cfg.points;\n    const attrs = Util.mix({}, {\n      stroke: cfg.color,\n      lineWidth: cfg.size\n    }, cfg.style);\n    const pathGroup = container.addGroup();\n    for (let i = 0; i < points.length; i++) {\n      const path = [];\n      path.push(\n        [ 'M', points[i].x, points[i].y ]\n      );\n      if (i !== points.length - 1) {\n        path.push(\n          [ 'L', points[i + 1].x, points[i + 1].y ]\n        );\n      }\n\n      pathGroup.addShape('path', {\n        attrs: Util.mix({\n          path,\n          endArrow: true,\n          arrowLength: 10,\n          arrowAngle: 45\n        }, attrs)\n      });\n    }\n\n    return pathGroup;\n  }\n});\nconst data = [\n  { consumption: 0.65, price: 1, year: 1965 },\n  { consumption: 0.66, price: 1.05, year: 1966 },\n  { consumption: 0.64, price: 1.1, year: 1967 },\n  { consumption: 0.63, price: 1.12, year: 1968 },\n  { consumption: 0.55, price: 1.15, year: 1969 },\n  { consumption: 0.57, price: 1.19, year: 1970 },\n  { consumption: 0.58, price: 1.14, year: 1971 },\n  { consumption: 0.59, price: 1, year: 1972 },\n  { consumption: 0.57, price: 0.96, year: 1973 },\n  { consumption: 0.55, price: 0.92, year: 1974 },\n  { consumption: 0.54, price: 0.88, year: 1975 },\n  { consumption: 0.55, price: 0.87, year: 1976 },\n  { consumption: 0.42, price: 0.89, year: 1977 },\n  { consumption: 0.28, price: 1, year: 1978 },\n  { consumption: 0.15, price: 1.1, year: 1979 }\n];\nconst chart = new Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500\n});\nchart.source(data);\nchart.tooltip({\n  showTitle: false,\n  itemTpl: '<li data-index={index}>'\n    + '<span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>'\n    + '<span>{year}</span></br>'\n    + '<span style=\"padding-left: 16px\">consumption: {consumption}</span></br>'\n    + '<span style=\"padding-left: 16px\">price: {price}</span></br>'\n});\nchart.path()\n  .position('price*consumption')\n  .shape('lineWidthArrow')\n  .color('#1890ff')\n  .label('year', {\n    offset: 16,\n    textStyle: {\n      fill: '#8c8c8c'\n    }\n  }, val => {\n    return val + '年';\n  })\n  .size(2)\n  .tooltip(false);\nchart.point()\n  .position('price*consumption')\n  .shape('circle')\n  .size(10)\n  .active(false)\n  .tooltip('year*consumption*price', (year, consumption, price) => {\n    return {\n      year,\n      consumption,\n      price\n    };\n  })\n  .style({\n    fill: '#fff',\n    fillOpacity: 0\n  });\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.path = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var _G = G2,\n      Shape = _G.Shape,\n      Util = _G.Util,\n      Chart = _G.Chart;\n  Shape.registerShape('line', 'lineWidthArrow', {\n    draw: function draw(cfg, container) {\n      var points = cfg.points;\n      var attrs = Util.mix({}, {\n        stroke: cfg.color,\n        lineWidth: cfg.size\n      }, cfg.style);\n      var pathGroup = container.addGroup();\n\n      for (var i = 0; i < points.length; i++) {\n        var path = [];\n        path.push(['M', points[i].x, points[i].y]);\n\n        if (i !== points.length - 1) {\n          path.push(['L', points[i + 1].x, points[i + 1].y]);\n        }\n\n        pathGroup.addShape('path', {\n          attrs: Util.mix({\n            path: path,\n            endArrow: true,\n            arrowLength: 10,\n            arrowAngle: 45\n          }, attrs)\n        });\n      }\n\n      return pathGroup;\n    }\n  });\n  var data = [{\n    consumption: 0.65,\n    price: 1,\n    year: 1965\n  }, {\n    consumption: 0.66,\n    price: 1.05,\n    year: 1966\n  }, {\n    consumption: 0.64,\n    price: 1.1,\n    year: 1967\n  }, {\n    consumption: 0.63,\n    price: 1.12,\n    year: 1968\n  }, {\n    consumption: 0.55,\n    price: 1.15,\n    year: 1969\n  }, {\n    consumption: 0.57,\n    price: 1.19,\n    year: 1970\n  }, {\n    consumption: 0.58,\n    price: 1.14,\n    year: 1971\n  }, {\n    consumption: 0.59,\n    price: 1,\n    year: 1972\n  }, {\n    consumption: 0.57,\n    price: 0.96,\n    year: 1973\n  }, {\n    consumption: 0.55,\n    price: 0.92,\n    year: 1974\n  }, {\n    consumption: 0.54,\n    price: 0.88,\n    year: 1975\n  }, {\n    consumption: 0.55,\n    price: 0.87,\n    year: 1976\n  }, {\n    consumption: 0.42,\n    price: 0.89,\n    year: 1977\n  }, {\n    consumption: 0.28,\n    price: 1,\n    year: 1978\n  }, {\n    consumption: 0.15,\n    price: 1.1,\n    year: 1979\n  }];\n  var chart = new Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500\n  });\n  chart.source(data);\n  chart.tooltip({\n    showTitle: false,\n    itemTpl: '<li data-index={index}>' + '<span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>' + '<span>{year}</span></br>' + '<span style=\"padding-left: 16px\">consumption: {consumption}</span></br>' + '<span style=\"padding-left: 16px\">price: {price}</span></br>'\n  });\n  chart.path().position('price*consumption').shape('lineWidthArrow').color('#1890ff').label('year', {\n    offset: 16,\n    textStyle: {\n      fill: '#8c8c8c'\n    }\n  }, function (val) {\n    return val + '年';\n  }).size(2).tooltip(false);\n  chart.point().position('price*consumption').shape('circle').size(10).active(false).tooltip('year*consumption*price', function (year, consumption, price) {\n    return {\n      year: year,\n      consumption: consumption,\n      price: price\n    };\n  }).style({\n    fill: '#fff',\n    fillOpacity: 0\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/punch-card.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/punch-card.js","order":17,"filename":"punch-card.js","title":{"zh":"Punch Card","en":"Punch Card"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*E_xoSYVrPB4AAAAAAAAAAABkARQnAQ","source":"const data = [[ 0, 0, 10 ], [ 0, 1, 5 ], [ 0, 2, 17 ], [ 0, 3, 0 ], [ 0, 4, 3 ], [ 0, 5, 0 ], [ 0, 6, 0 ], [ 0, 7, 0 ], [ 0, 8, 5 ], [ 0, 9, 8 ], [ 0, 10, 12 ], [ 0, 11, 14 ], [ 0, 12, 3 ], [ 0, 13, 11 ], [ 0, 14, 36 ], [ 0, 15, 40 ], [ 0, 16, 30 ], [ 0, 17, 34 ], [ 0, 18, 23 ], [ 0, 19, 10 ], [ 0, 20, 10 ], [ 0, 21, 12 ], [ 0, 22, 9 ], [ 0, 23, 7 ], [ 1, 0, 15 ], [ 1, 1, 2 ], [ 1, 2, 0 ], [ 1, 3, 0 ], [ 1, 4, 1 ], [ 1, 5, 6 ], [ 1, 6, 0 ], [ 1, 7, 2 ], [ 1, 8, 4 ], [ 1, 9, 9 ], [ 1, 10, 55 ], [ 1, 11, 113 ], [ 1, 12, 55 ], [ 1, 13, 30 ], [ 1, 14, 90 ], [ 1, 15, 107 ], [ 1, 16, 134 ], [ 1, 17, 103 ], [ 1, 18, 63 ], [ 1, 19, 60 ], [ 1, 20, 43 ], [ 1, 21, 28 ], [ 1, 22, 27 ], [ 1, 23, 9 ], [ 2, 0, 17 ], [ 2, 1, 6 ], [ 2, 2, 0 ], [ 2, 3, 1 ], [ 2, 4, 3 ], [ 2, 5, 1 ], [ 2, 6, 0 ], [ 2, 7, 0 ], [ 2, 8, 1 ], [ 2, 9, 9 ], [ 2, 10, 29 ], [ 2, 11, 77 ], [ 2, 12, 53 ], [ 2, 13, 35 ], [ 2, 14, 102 ], [ 2, 15, 105 ], [ 2, 16, 115 ], [ 2, 17, 115 ], [ 2, 18, 81 ], [ 2, 19, 46 ], [ 2, 20, 56 ], [ 2, 21, 32 ], [ 2, 22, 27 ], [ 2, 23, 25 ], [ 3, 0, 13 ], [ 3, 1, 10 ], [ 3, 2, 1 ], [ 3, 3, 0 ], [ 3, 4, 2 ], [ 3, 5, 6 ], [ 3, 6, 0 ], [ 3, 7, 0 ], [ 3, 8, 1 ], [ 3, 9, 15 ], [ 3, 10, 45 ], [ 3, 11, 105 ], [ 3, 12, 54 ], [ 3, 13, 35 ], [ 3, 14, 98 ], [ 3, 15, 113 ], [ 3, 16, 125 ], [ 3, 17, 145 ], [ 3, 18, 84 ], [ 3, 19, 74 ], [ 3, 20, 78 ], [ 3, 21, 50 ], [ 3, 22, 43 ], [ 3, 23, 21 ], [ 4, 0, 9 ], [ 4, 1, 2 ], [ 4, 2, 3 ], [ 4, 3, 0 ], [ 4, 4, 7 ], [ 4, 5, 1 ], [ 4, 6, 2 ], [ 4, 7, 1 ], [ 4, 8, 8 ], [ 4, 9, 23 ], [ 4, 10, 48 ], [ 4, 11, 97 ], [ 4, 12, 65 ], [ 4, 13, 36 ], [ 4, 14, 75 ], [ 4, 15, 129 ], [ 4, 16, 98 ], [ 4, 17, 116 ], [ 4, 18, 70 ], [ 4, 19, 47 ], [ 4, 20, 48 ], [ 4, 21, 57 ], [ 4, 22, 31 ], [ 4, 23, 26 ], [ 5, 0, 12 ], [ 5, 1, 9 ], [ 5, 2, 0 ], [ 5, 3, 14 ], [ 5, 4, 0 ], [ 5, 5, 0 ], [ 5, 6, 1 ], [ 5, 7, 0 ], [ 5, 8, 1 ], [ 5, 9, 21 ], [ 5, 10, 50 ], [ 5, 11, 82 ], [ 5, 12, 45 ], [ 5, 13, 41 ], [ 5, 14, 101 ], [ 5, 15, 135 ], [ 5, 16, 102 ], [ 5, 17, 99 ], [ 5, 18, 64 ], [ 5, 19, 19 ], [ 5, 20, 24 ], [ 5, 21, 27 ], [ 5, 22, 38 ], [ 5, 23, 27 ], [ 6, 0, 17 ], [ 6, 1, 10 ], [ 6, 2, 14 ], [ 6, 3, 0 ], [ 6, 4, 1 ], [ 6, 5, 1 ], [ 6, 6, 0 ], [ 6, 7, 1 ], [ 6, 8, 4 ], [ 6, 9, 7 ], [ 6, 10, 11 ], [ 6, 11, 10 ], [ 6, 12, 2 ], [ 6, 13, 13 ], [ 6, 14, 28 ], [ 6, 15, 47 ], [ 6, 16, 39 ], [ 6, 17, 36 ], [ 6, 18, 25 ], [ 6, 19, 7 ], [ 6, 20, 14 ], [ 6, 21, 12 ], [ 6, 22, 1 ], [ 6, 23, 3 ]];\nconst source = [];\nfor (let i = 0; i < 7; i++) {\n  for (let j = 0; j < 24; j++) {\n    const item = {};\n    item.weekday = i;\n    item.hour = data[i * 24 + j][1];\n    item.commits = data[i * 24 + j][2];\n    source.push(item);\n  }\n}\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 20, 60, 40, 100 ]\n});\nchart.source(source, {\n  weekday: {\n    type: 'cat',\n    values: [ 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' ]\n  },\n  hour: {\n    type: 'cat',\n    values: [ '12a', '1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a', '10a', '11a', '12p', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p' ]\n  }\n});\nchart.tooltip({\n  showTitle: null\n});\nchart.legend(false);\nchart.axis('weekday', {\n  line: null,\n  tickLine: null,\n  grid: null,\n  label: {\n    textStyle: {\n      fontSize: 14,\n      fill: '#555'\n    }\n  }\n});\nchart.axis('hour', {\n  line: {\n    stroke: '#eee',\n    lineWidth: 1\n  },\n  tickLine: {\n    length: -10\n  }\n});\nchart.point()\n  .position('hour*weekday')\n  .size('commits', [ 2, (window.innerWidth - 120) / 48 ])\n  .shape('circle')\n  .color('#bfbfbf');\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.punchCard = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [[0, 0, 10], [0, 1, 5], [0, 2, 17], [0, 3, 0], [0, 4, 3], [0, 5, 0], [0, 6, 0], [0, 7, 0], [0, 8, 5], [0, 9, 8], [0, 10, 12], [0, 11, 14], [0, 12, 3], [0, 13, 11], [0, 14, 36], [0, 15, 40], [0, 16, 30], [0, 17, 34], [0, 18, 23], [0, 19, 10], [0, 20, 10], [0, 21, 12], [0, 22, 9], [0, 23, 7], [1, 0, 15], [1, 1, 2], [1, 2, 0], [1, 3, 0], [1, 4, 1], [1, 5, 6], [1, 6, 0], [1, 7, 2], [1, 8, 4], [1, 9, 9], [1, 10, 55], [1, 11, 113], [1, 12, 55], [1, 13, 30], [1, 14, 90], [1, 15, 107], [1, 16, 134], [1, 17, 103], [1, 18, 63], [1, 19, 60], [1, 20, 43], [1, 21, 28], [1, 22, 27], [1, 23, 9], [2, 0, 17], [2, 1, 6], [2, 2, 0], [2, 3, 1], [2, 4, 3], [2, 5, 1], [2, 6, 0], [2, 7, 0], [2, 8, 1], [2, 9, 9], [2, 10, 29], [2, 11, 77], [2, 12, 53], [2, 13, 35], [2, 14, 102], [2, 15, 105], [2, 16, 115], [2, 17, 115], [2, 18, 81], [2, 19, 46], [2, 20, 56], [2, 21, 32], [2, 22, 27], [2, 23, 25], [3, 0, 13], [3, 1, 10], [3, 2, 1], [3, 3, 0], [3, 4, 2], [3, 5, 6], [3, 6, 0], [3, 7, 0], [3, 8, 1], [3, 9, 15], [3, 10, 45], [3, 11, 105], [3, 12, 54], [3, 13, 35], [3, 14, 98], [3, 15, 113], [3, 16, 125], [3, 17, 145], [3, 18, 84], [3, 19, 74], [3, 20, 78], [3, 21, 50], [3, 22, 43], [3, 23, 21], [4, 0, 9], [4, 1, 2], [4, 2, 3], [4, 3, 0], [4, 4, 7], [4, 5, 1], [4, 6, 2], [4, 7, 1], [4, 8, 8], [4, 9, 23], [4, 10, 48], [4, 11, 97], [4, 12, 65], [4, 13, 36], [4, 14, 75], [4, 15, 129], [4, 16, 98], [4, 17, 116], [4, 18, 70], [4, 19, 47], [4, 20, 48], [4, 21, 57], [4, 22, 31], [4, 23, 26], [5, 0, 12], [5, 1, 9], [5, 2, 0], [5, 3, 14], [5, 4, 0], [5, 5, 0], [5, 6, 1], [5, 7, 0], [5, 8, 1], [5, 9, 21], [5, 10, 50], [5, 11, 82], [5, 12, 45], [5, 13, 41], [5, 14, 101], [5, 15, 135], [5, 16, 102], [5, 17, 99], [5, 18, 64], [5, 19, 19], [5, 20, 24], [5, 21, 27], [5, 22, 38], [5, 23, 27], [6, 0, 17], [6, 1, 10], [6, 2, 14], [6, 3, 0], [6, 4, 1], [6, 5, 1], [6, 6, 0], [6, 7, 1], [6, 8, 4], [6, 9, 7], [6, 10, 11], [6, 11, 10], [6, 12, 2], [6, 13, 13], [6, 14, 28], [6, 15, 47], [6, 16, 39], [6, 17, 36], [6, 18, 25], [6, 19, 7], [6, 20, 14], [6, 21, 12], [6, 22, 1], [6, 23, 3]];\n  var source = [];\n\n  for (var i = 0; i < 7; i++) {\n    for (var j = 0; j < 24; j++) {\n      var item = {};\n      item.weekday = i;\n      item.hour = data[i * 24 + j][1];\n      item.commits = data[i * 24 + j][2];\n      source.push(item);\n    }\n  }\n\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [20, 60, 40, 100]\n  });\n  chart.source(source, {\n    weekday: {\n      type: 'cat',\n      values: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    },\n    hour: {\n      type: 'cat',\n      values: ['12a', '1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a', '10a', '11a', '12p', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p']\n    }\n  });\n  chart.tooltip({\n    showTitle: null\n  });\n  chart.legend(false);\n  chart.axis('weekday', {\n    line: null,\n    tickLine: null,\n    grid: null,\n    label: {\n      textStyle: {\n        fontSize: 14,\n        fill: '#555'\n      }\n    }\n  });\n  chart.axis('hour', {\n    line: {\n      stroke: '#eee',\n      lineWidth: 1\n    },\n    tickLine: {\n      length: -10\n    }\n  });\n  chart.point().position('hour*weekday').size('commits', [2, (window.innerWidth - 120) / 48]).shape('circle').color('#bfbfbf');\n  chart.render();\n});"},{"relativePath":"other/other/demo/rectbin-size.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/rectbin-size.js","order":18,"filename":"rectbin-size.js","title":{"zh":"矩形大小分箱图","en":""},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*cC7LT6_AVqYAAAAAAAAAAABkARQnAQ","source":"fetch('../data/gaussion-distribution.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data);\n    dv.transform({\n      sizeByCount: true, // calculate bin size by binning count\n      type: 'bin.rectangle',\n      fields: [ 'x', 'y' ], // 对应坐标轴上的一个点\n      bins: [ 20, 10 ]\n    });\n\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(dv);\n    chart.legend({\n      offset: 40\n    });\n    chart.tooltip(false);\n    chart.polygon()\n      .position('x*y')\n      .color('count', '#BAE7FF-#1890FF-#0050B3');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.rectbinSize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/gaussion-distribution.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new DataSet.View().source(data);\n    dv.transform({\n      sizeByCount: true,\n      // calculate bin size by binning count\n      type: 'bin.rectangle',\n      fields: ['x', 'y'],\n      // 对应坐标轴上的一个点\n      bins: [20, 10]\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.source(dv);\n    chart.legend({\n      offset: 40\n    });\n    chart.tooltip(false);\n    chart.polygon().position('x*y').color('count', '#BAE7FF-#1890FF-#0050B3');\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/regression.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/regression.js","order":19,"filename":"regression.js","title":{"zh":"回归曲线","en":"regression line chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*Qr1lR5J3XI8AAAAAAAAAAABkARQnAQ","source":"\nfetch('../data/diamond.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n\n    chart.scale({\n      carat: {\n        sync: true\n      },\n      price: {\n        sync: true\n      }\n    });\n\n    // background\n    const pointsView = chart.view();\n    pointsView.source(data);\n    pointsView.point().position('carat*price');\n\n    const REGRESSION_METHODS = [\n      'linear',\n      'exponential',\n      'logarithmic',\n      'power',\n      'polynomial'\n    ];\n    REGRESSION_METHODS.forEach((method, i) => {\n      const dv = new DataSet.View().source(data)\n        .transform({\n          type: 'regression',\n          method,\n          fields: [ 'carat', 'price' ],\n          bandwidth: 0.1,\n          extent: [ 0, 4 ],\n          as: [ 'carat', 'price' ]\n        });\n      const view = chart.view();\n      view.axis(false);\n      view.source(dv);\n      view.line()\n        .position('carat*price')\n        .size(1)\n        .color(G2.Global.colors_16[i]);\n    });\n\n    chart.render();\n  });\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.regression = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/diamond.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500\n    });\n    chart.scale({\n      carat: {\n        sync: true\n      },\n      price: {\n        sync: true\n      }\n    }); // background\n\n    var pointsView = chart.view();\n    pointsView.source(data);\n    pointsView.point().position('carat*price');\n    var REGRESSION_METHODS = ['linear', 'exponential', 'logarithmic', 'power', 'polynomial'];\n    REGRESSION_METHODS.forEach(function (method, i) {\n      var dv = new DataSet.View().source(data).transform({\n        type: 'regression',\n        method: method,\n        fields: ['carat', 'price'],\n        bandwidth: 0.1,\n        extent: [0, 4],\n        as: ['carat', 'price']\n      });\n      var view = chart.view();\n      view.axis(false);\n      view.source(dv);\n      view.line().position('carat*price').size(1).color(G2.Global.colors_16[i]);\n    });\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/scrollbar.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/scrollbar.js","order":20,"filename":"scrollbar.js","title":{"zh":"超市品类销售数据","en":"scrollbar"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*9lxORIxuVYsAAAAAAAAAAABkARQnAQ","source":"\nfunction formatter(value) {\n  if (value.length < 6) {\n    return value;\n  }\n  return value.substring(0, 6) + '...';\n}\nfetch('../data/company_sales.json')\n  .then(res => res.json())\n  .then(filedata => {\n    const data = filedata['家具产品'].children['书架'].children.map(row => {\n      row.name = row.name + row.date;\n      return row;\n    });\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 20, 20, 80, 100 ],\n      animate: false\n    });\n    chart.source(data, {\n      name: {\n        formatter,\n        values: data.slice(0, 20).map(row => row.name)\n      },\n      value: {\n        tickCount: 5\n      }\n    });\n    chart.axis('name', {\n      tickLine: {\n        alignWithLabel: false,\n        length: 0\n      }\n    });\n    chart.axis('value', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.interval().position('name*value').opacity(1);\n    chart.render();\n    chart\n      .interact('drag', {\n        type: 'X'\n      })\n      .interact('scroll-bar', {\n        type: 'X'\n      });\n\n  });\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.scrollbar = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  function formatter(value) {\n    if (value.length < 6) {\n      return value;\n    }\n\n    return value.substring(0, 6) + '...';\n  }\n\n  fetch('../data/company_sales.json').then(function (res) {\n    return res.json();\n  }).then(function (filedata) {\n    var data = filedata['家具产品'].children['书架'].children.map(function (row) {\n      row.name = row.name + row.date;\n      return row;\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [20, 20, 80, 100],\n      animate: false\n    });\n    chart.source(data, {\n      name: {\n        formatter: formatter,\n        values: data.slice(0, 20).map(function (row) {\n          return row.name;\n        })\n      },\n      value: {\n        tickCount: 5\n      }\n    });\n    chart.axis('name', {\n      tickLine: {\n        alignWithLabel: false,\n        length: 0\n      }\n    });\n    chart.axis('value', {\n      label: {\n        textStyle: {\n          fill: '#aaaaaa'\n        }\n      }\n    });\n    chart.interval().position('name*value').opacity(1);\n    chart.render();\n    chart.interact('drag', {\n      type: 'X'\n    }).interact('scroll-bar', {\n      type: 'X'\n    });\n  });\n});"},{"relativePath":"other/other/demo/stock-index.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/stock-index.js","order":21,"filename":"stock-index.js","title":{"zh":"Stock Index Chart","en":"Stock Index Chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*NGKvSo9PrTQAAAAAAAAAAABkARQnAQ","source":"fetch('../data/stocks.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet({\n      state: {\n        date: 'Jan 1 2005'\n      }\n    });\n    const priceByKey = {};\n    const srcDv = new DataSet.View(ds, {\n      watchingStates: []\n    });\n    srcDv.source(data)\n      .transform({\n        type: 'map',\n        callback(row) {\n          row.key = `${row.symbol}-${row.date}`;\n          row.price = parseInt(row.price, 10);\n          priceByKey[row.key] = row.price;\n          return row;\n        }\n      });\n    const destDv = new DataSet.View(ds, {\n      watchingStates: [ 'date' ]\n    });\n    destDv.source(srcDv)\n      .transform({\n        type: 'map',\n        callback(row) {\n          const key = `${row.symbol}-${ds.state.date}`;\n          const indexedPrice = priceByKey[key];\n          row.rate = (!indexedPrice || indexedPrice === 0) ? 0 : (row.price - indexedPrice) / indexedPrice;\n          return row;\n        }\n      });\n\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: [ 'auto', 'auto', 50, 'auto' ],\n      animate: false\n    });\n    chart.scale({\n      date: {\n        type: 'time'\n      },\n      rate: {\n        formatter: val => `${(val * 100).toFixed(1)}%`\n      }\n    });\n    chart.axis('rate', {\n      grid: {\n        hightLightZero: true\n      }\n    });\n    chart.axis('date', false);\n    chart.legend({\n      attachLast: true\n    });\n    chart.tooltip(false);\n    chart.source(destDv);\n    chart.line()\n      .position('date*rate')\n      .color('symbol');\n\n    let dateLineGuide;\n    chart.on('mousemove', ev => {\n      const records = chart.getSnapRecords(ev);\n      if (G2.Util.isArray(records) && records.length) {\n        const date = records[0]._origin.date;\n        if (date !== ds.state.date) {\n          if (dateLineGuide) {\n            dateLineGuide.clear();\n            dateLineGuide = null;\n          }\n          ds.setState('date', records[0]._origin.date);\n          dateLineGuide = chart.guide().line({\n            start: [ date, 'start' ],\n            end: [ date, 'end' ],\n            lineStyle: {\n              lineDash: null,\n              stroke: 'grey'\n            },\n            text: {\n              autoRotate: false,\n              position: 'start',\n              content: ds.state.date,\n              style: {\n                fill: 'grey',\n                textAlign: 'center'\n              },\n              offsetY: 22\n            }\n          });\n        }\n      }\n    });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.stockIndex = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/stocks.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new DataSet({\n      state: {\n        date: 'Jan 1 2005'\n      }\n    });\n    var priceByKey = {};\n    var srcDv = new DataSet.View(ds, {\n      watchingStates: []\n    });\n    srcDv.source(data).transform({\n      type: 'map',\n      callback: function callback(row) {\n        row.key = \"\".concat(row.symbol, \"-\").concat(row.date);\n        row.price = parseInt(row.price, 10);\n        priceByKey[row.key] = row.price;\n        return row;\n      }\n    });\n    var destDv = new DataSet.View(ds, {\n      watchingStates: ['date']\n    });\n    destDv.source(srcDv).transform({\n      type: 'map',\n      callback: function callback(row) {\n        var key = \"\".concat(row.symbol, \"-\").concat(ds.state.date);\n        var indexedPrice = priceByKey[key];\n        row.rate = !indexedPrice || indexedPrice === 0 ? 0 : (row.price - indexedPrice) / indexedPrice;\n        return row;\n      }\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: ['auto', 'auto', 50, 'auto'],\n      animate: false\n    });\n    chart.scale({\n      date: {\n        type: 'time'\n      },\n      rate: {\n        formatter: function formatter(val) {\n          return \"\".concat((val * 100).toFixed(1), \"%\");\n        }\n      }\n    });\n    chart.axis('rate', {\n      grid: {\n        hightLightZero: true\n      }\n    });\n    chart.axis('date', false);\n    chart.legend({\n      attachLast: true\n    });\n    chart.tooltip(false);\n    chart.source(destDv);\n    chart.line().position('date*rate').color('symbol');\n    var dateLineGuide;\n    chart.on('mousemove', function (ev) {\n      var records = chart.getSnapRecords(ev);\n\n      if (G2.Util.isArray(records) && records.length) {\n        var date = records[0]._origin.date;\n\n        if (date !== ds.state.date) {\n          if (dateLineGuide) {\n            dateLineGuide.clear();\n            dateLineGuide = null;\n          }\n\n          ds.setState('date', records[0]._origin.date);\n          dateLineGuide = chart.guide().line({\n            start: [date, 'start'],\n            end: [date, 'end'],\n            lineStyle: {\n              lineDash: null,\n              stroke: 'grey'\n            },\n            text: {\n              autoRotate: false,\n              position: 'start',\n              content: ds.state.date,\n              style: {\n                fill: 'grey',\n                textAlign: 'center'\n              },\n              offsetY: 22\n            }\n          });\n        }\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/venn-hollow.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/venn-hollow.js","order":22,"filename":"venn-hollow.js","title":{"zh":"空心维恩图","en":"venn chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*IqMJR78j-PIAAAAAAAAAAABkARQnAQ","source":"const sets = [\n  { sets: [ 'A' ], size: 12, label: 'A' },\n  { sets: [ 'B' ], size: 12, label: 'B' },\n  { sets: [ 'C' ], size: 12, label: 'C' },\n  { sets: [ 'A', 'B' ], size: 2, label: 'A&B' },\n  { sets: [ 'A', 'C' ], size: 2, label: 'A&C' },\n  { sets: [ 'B', 'C' ], size: 2, label: 'B&C' },\n  { sets: [ 'A', 'B', 'C' ], size: 1 }\n];\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: 10\n});\nchart.source(sets);\nchart.axis(false);\nchart.legend(false);\nchart.tooltip(false);\nchart.venn()\n  .position('x*y')\n  .sets('sets')\n  .label('label') // 这个字段用来获取集合关系字段\n  .size('size') // 这个字段用来获取集合 size\n  .color('label')\n  .active(false)\n  .shape('hollow')\n  .style({\n    lineWidth: 10,\n    padding: 10,\n    textStyle: {\n      fontSize: 32\n    }\n  });\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.vennHollow = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var sets = [{\n    sets: ['A'],\n    size: 12,\n    label: 'A'\n  }, {\n    sets: ['B'],\n    size: 12,\n    label: 'B'\n  }, {\n    sets: ['C'],\n    size: 12,\n    label: 'C'\n  }, {\n    sets: ['A', 'B'],\n    size: 2,\n    label: 'A&B'\n  }, {\n    sets: ['A', 'C'],\n    size: 2,\n    label: 'A&C'\n  }, {\n    sets: ['B', 'C'],\n    size: 2,\n    label: 'B&C'\n  }, {\n    sets: ['A', 'B', 'C'],\n    size: 1\n  }];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: 10\n  });\n  chart.source(sets);\n  chart.axis(false);\n  chart.legend(false);\n  chart.tooltip(false);\n  chart.venn().position('x*y').sets('sets').label('label') // 这个字段用来获取集合关系字段\n  .size('size') // 这个字段用来获取集合 size\n  .color('label').active(false).shape('hollow').style({\n    lineWidth: 10,\n    padding: 10,\n    textStyle: {\n      fontSize: 32\n    }\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/venn.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/venn.js","order":23,"filename":"venn.js","title":{"zh":"维恩图","en":"venn chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*mBlESrSGziAAAAAAAAAAAABkARQnAQ","source":"const sets = [\n  { sets: [ 'A' ], size: 12, label: 'A' },\n  { sets: [ 'B' ], size: 12, label: 'B' },\n  { sets: [ 'C' ], size: 12, label: 'C' },\n  { sets: [ 'A', 'B' ], size: 2, label: 'A&B' },\n  { sets: [ 'A', 'C' ], size: 2, label: 'A&C' },\n  { sets: [ 'B', 'C' ], size: 2, label: 'B&C' },\n  { sets: [ 'A', 'B', 'C' ], size: 1 }\n];\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: 10\n});\nchart.source(sets);\nchart.axis(false);\nchart.legend(false);\nchart.tooltip(false);\nchart.venn()\n  .position('x*y')\n  .sets('sets')\n  .label('label', {\n    textStyle: {\n      fill: 'white'\n    }\n  }) // 这个字段用来获取集合关系字段\n  .size('size') // 这个字段用来获取集合 size\n  .color('label')\n  .active(false)\n  .style({\n    lineWidth: 10,\n    padding: 10,\n    textStyle: {\n      fill: 'white',\n      textAlign: 'center',\n      fontSize: 32\n    }\n  });\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.venn = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var sets = [{\n    sets: ['A'],\n    size: 12,\n    label: 'A'\n  }, {\n    sets: ['B'],\n    size: 12,\n    label: 'B'\n  }, {\n    sets: ['C'],\n    size: 12,\n    label: 'C'\n  }, {\n    sets: ['A', 'B'],\n    size: 2,\n    label: 'A&B'\n  }, {\n    sets: ['A', 'C'],\n    size: 2,\n    label: 'A&C'\n  }, {\n    sets: ['B', 'C'],\n    size: 2,\n    label: 'B&C'\n  }, {\n    sets: ['A', 'B', 'C'],\n    size: 1\n  }];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: 10\n  });\n  chart.source(sets);\n  chart.axis(false);\n  chart.legend(false);\n  chart.tooltip(false);\n  chart.venn().position('x*y').sets('sets').label('label', {\n    textStyle: {\n      fill: 'white'\n    }\n  }) // 这个字段用来获取集合关系字段\n  .size('size') // 这个字段用来获取集合 size\n  .color('label').active(false).style({\n    lineWidth: 10,\n    padding: 10,\n    textStyle: {\n      fill: 'white',\n      textAlign: 'center',\n      fontSize: 32\n    }\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/violin.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/violin.js","order":24,"filename":"violin.js","title":{"zh":"小提琴图","en":"Violin Plot"},"screenshot":"https://gw.alipayobjects.com/zos/rmsportal/KKyObkmAxInCPdSlCJmG.gif","source":"\nfetch('../data/iris.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet();\n\n    const fields = [ 'PetalWidth', 'PetalLength', 'SepalWidth', 'SepalLength' ];\n    // 小提琴图用 KDE transform 提供数据\n    const dv1 = ds.createView().source(data).transform({\n      type: 'kde',\n      extent: [ 0, 8 ], // 采样范围\n      fields,\n      as: [ 'key', 'y', 'size' ], // 生成的统计字段：字段名、采样点、采样点对应的概率值\n      groupBy: [ 'Species' ],\n      minSize: 0.01 // 小于这个值的概率将被忽略\n    });\n    // 需要根据分组提供分位值等统计数据，所以提前拍平数据\n    const dv2 = ds.createView().source(data);\n    dv2.transform({\n      type: 'fold',\n      fields\n    });\n    // 计算 95% 分位值，用于画 95% 分位线\n    const dv3 = ds.createView().source(dv2).transform({\n      type: 'bin.quantile',\n      field: 'value',\n      as: 'y',\n      groupBy: [ 'key', 'Species' ],\n      p: [ 0.025, 0.975 ]\n    });\n    // 计算 Q1 和 Q3 分位值，用于画分位线\n    const dv4 = ds.createView().source(dv2).transform({\n      type: 'bin.quantile',\n      field: 'value',\n      as: 'y',\n      groupBy: [ 'key', 'Species' ],\n      p: [ 1 / 4, 3 / 4 ]\n    });\n    // 计算中位值\n    const dv5 = ds.createView().source(dv2).transform({\n      type: 'aggregate',\n      fields: [ 'value' ],\n      operations: [ 'median' ],\n      as: [ 'y' ],\n      groupBy: [ 'key', 'Species' ]\n    });\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: 'auto',\n      theme: {\n        widthRatio: {\n          column: 0.7 // 小提琴图最宽处占总宽度的比例\n        }\n      }\n    });\n    chart.scale({\n      key: { sync: true }, // key 字段在其中一个 view 映射到 color 了，在其他所以需要同步，否则\n      y: { sync: true }\n    });\n    // chart.coord('polar');\n    chart.axis('key', {\n      grid: {\n        zIndex: -1,\n        align: 'center',\n        alternateColor: '#f5f5f5',\n        type: 'polygon',\n        lineStyle: {\n          stroke: 'white'\n        }\n      },\n      tickLine: {\n        alignWithLabel: false\n      }\n    });\n    chart.axis('y', {\n      line: G2.Global.axis.top.line,\n      tickLine: G2.Global.axis.top.tickLine,\n      grid: null\n    });\n    const adjustCfg = [{\n      type: 'dodge',\n      marginRatio: 1 / 32\n    }];\n    // violin plot\n    const view1 = chart.view();\n    view1.source(dv1);\n    view1.violin()\n      .position('key*y')\n      .color('Species')\n      .adjust(adjustCfg)\n      // .shape('smooth')\n      // .shape('smoothHollow')\n      .size('size')\n      .style({\n        lineWidth: 1,\n        fillOpacity: 0.3,\n        strokeOpacity: 0.75\n      })\n      .tooltip(false);\n    // 95% confidence interval\n    const view3 = chart.view();\n    view3.source(dv3);\n    view3.interval()\n      .position('key*y')\n      .color('Species')\n      .adjust(adjustCfg)\n      .size(1)\n      .style({\n        fill: 'black',\n        lineWidth: 0\n      })\n      .tooltip(false);\n    // Q1 / Q3\n    const view4 = chart.view();\n    view4.source(dv4);\n    view4.interval()\n      .position('key*y')\n      .color('Species')\n      .adjust(adjustCfg)\n      .size(8)\n      .style({\n        fill: 'black',\n        fillOpacity: 1\n      })\n      .tooltip('y', value => {\n        return {\n          name: 'Q1-Q3',\n          value\n        };\n      });\n    // median\n    const view5 = chart.view();\n    view5.source(dv5);\n    view5.point()\n      .position('key*y')\n      .color('Species')\n      .adjust(adjustCfg)\n      .size(3)\n      .style({\n        fill: 'white',\n        lineWidth: 0\n      })\n      .tooltip('y', value => {\n        return {\n          name: 'Median',\n          value\n        };\n      });\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.violin = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/iris.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new DataSet();\n    var fields = ['PetalWidth', 'PetalLength', 'SepalWidth', 'SepalLength']; // 小提琴图用 KDE transform 提供数据\n\n    var dv1 = ds.createView().source(data).transform({\n      type: 'kde',\n      extent: [0, 8],\n      // 采样范围\n      fields: fields,\n      as: ['key', 'y', 'size'],\n      // 生成的统计字段：字段名、采样点、采样点对应的概率值\n      groupBy: ['Species'],\n      minSize: 0.01 // 小于这个值的概率将被忽略\n\n    }); // 需要根据分组提供分位值等统计数据，所以提前拍平数据\n\n    var dv2 = ds.createView().source(data);\n    dv2.transform({\n      type: 'fold',\n      fields: fields\n    }); // 计算 95% 分位值，用于画 95% 分位线\n\n    var dv3 = ds.createView().source(dv2).transform({\n      type: 'bin.quantile',\n      field: 'value',\n      as: 'y',\n      groupBy: ['key', 'Species'],\n      p: [0.025, 0.975]\n    }); // 计算 Q1 和 Q3 分位值，用于画分位线\n\n    var dv4 = ds.createView().source(dv2).transform({\n      type: 'bin.quantile',\n      field: 'value',\n      as: 'y',\n      groupBy: ['key', 'Species'],\n      p: [1 / 4, 3 / 4]\n    }); // 计算中位值\n\n    var dv5 = ds.createView().source(dv2).transform({\n      type: 'aggregate',\n      fields: ['value'],\n      operations: ['median'],\n      as: ['y'],\n      groupBy: ['key', 'Species']\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: 'auto',\n      theme: {\n        widthRatio: {\n          column: 0.7 // 小提琴图最宽处占总宽度的比例\n\n        }\n      }\n    });\n    chart.scale({\n      key: {\n        sync: true\n      },\n      // key 字段在其中一个 view 映射到 color 了，在其他所以需要同步，否则\n      y: {\n        sync: true\n      }\n    }); // chart.coord('polar');\n\n    chart.axis('key', {\n      grid: {\n        zIndex: -1,\n        align: 'center',\n        alternateColor: '#f5f5f5',\n        type: 'polygon',\n        lineStyle: {\n          stroke: 'white'\n        }\n      },\n      tickLine: {\n        alignWithLabel: false\n      }\n    });\n    chart.axis('y', {\n      line: G2.Global.axis.top.line,\n      tickLine: G2.Global.axis.top.tickLine,\n      grid: null\n    });\n    var adjustCfg = [{\n      type: 'dodge',\n      marginRatio: 1 / 32\n    }]; // violin plot\n\n    var view1 = chart.view();\n    view1.source(dv1);\n    view1.violin().position('key*y').color('Species').adjust(adjustCfg) // .shape('smooth')\n    // .shape('smoothHollow')\n    .size('size').style({\n      lineWidth: 1,\n      fillOpacity: 0.3,\n      strokeOpacity: 0.75\n    }).tooltip(false); // 95% confidence interval\n\n    var view3 = chart.view();\n    view3.source(dv3);\n    view3.interval().position('key*y').color('Species').adjust(adjustCfg).size(1).style({\n      fill: 'black',\n      lineWidth: 0\n    }).tooltip(false); // Q1 / Q3\n\n    var view4 = chart.view();\n    view4.source(dv4);\n    view4.interval().position('key*y').color('Species').adjust(adjustCfg).size(8).style({\n      fill: 'black',\n      fillOpacity: 1\n    }).tooltip('y', function (value) {\n      return {\n        name: 'Q1-Q3',\n        value: value\n      };\n    }); // median\n\n    var view5 = chart.view();\n    view5.source(dv5);\n    view5.point().position('key*y').color('Species').adjust(adjustCfg).size(3).style({\n      fill: 'white',\n      lineWidth: 0\n    }).tooltip('y', function (value) {\n      return {\n        name: 'Median',\n        value: value\n      };\n    });\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/waffle-grouped.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/waffle-grouped.js","order":25,"filename":"waffle-grouped.js","title":{"zh":"华夫图","en":"waffle chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*hXdZRK3uHscAAAAAAAAAAABkARQnAQ","source":"const data = [{\n  State: 'AL',\n  'Under 5 Years': 310504,\n  '5 to 13 Years': 552339,\n  '14 to 17 Years': 259034,\n  '18 to 24 Years': 450818,\n  '25 to 44 Years': 1231572,\n  '45 to 64 Years': 1215966,\n  '65 Years and Over': 641667\n}, {\n  State: 'AK',\n  'Under 5 Years': 52083,\n  '5 to 13 Years': 85640,\n  '14 to 17 Years': 42153,\n  '18 to 24 Years': 74257,\n  '25 to 44 Years': 198724,\n  '45 to 64 Years': 183159,\n  '65 Years and Over': 50277\n}, {\n  State: 'AZ',\n  'Under 5 Years': 515910,\n  '5 to 13 Years': 828669,\n  '14 to 17 Years': 362642,\n  '18 to 24 Years': 601943,\n  '25 to 44 Years': 1804762,\n  '45 to 64 Years': 1523681,\n  '65 Years and Over': 862573\n}, {\n  State: 'AR',\n  'Under 5 Years': 202070,\n  '5 to 13 Years': 343207,\n  '14 to 17 Years': 157204,\n  '18 to 24 Years': 264160,\n  '25 to 44 Years': 754420,\n  '45 to 64 Years': 727124,\n  '65 Years and Over': 407205\n}, {\n  State: 'CA',\n  'Under 5 Years': 2704659,\n  '5 to 13 Years': 4499890,\n  '14 to 17 Years': 2159981,\n  '18 to 24 Years': 3853788,\n  '25 to 44 Years': 10604510,\n  '45 to 64 Years': 8819342,\n  '65 Years and Over': 4114496\n}, {\n  State: 'CO',\n  'Under 5 Years': 358280,\n  '5 to 13 Years': 587154,\n  '14 to 17 Years': 261701,\n  '18 to 24 Years': 466194,\n  '25 to 44 Years': 1464939,\n  '45 to 64 Years': 1290094,\n  '65 Years and Over': 511094\n}, {\n  State: 'CT',\n  'Under 5 Years': 211637,\n  '5 to 13 Years': 403658,\n  '14 to 17 Years': 196918,\n  '18 to 24 Years': 325110,\n  '25 to 44 Years': 916955,\n  '45 to 64 Years': 968967,\n  '65 Years and Over': 478007\n}];\nconst ages = [ 'Under 5 Years', '5 to 13 Years', '14 to 17 Years', '18 to 24 Years', '25 to 44 Years', '45 to 64 Years', '65 Years and Over' ];\n\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'fold',\n    fields: ages,\n    key: 'name'\n  })\n  .transform({\n    type: 'waffle',\n    maxCount: 500,\n    groupBy: 'State'\n  });\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 20, 20, 80, 50 ]\n});\nchart.source(dv);\nchart.scale({\n  x: { nice: false },\n  y: { nice: false }\n});\nchart.axis(false);\nchart.legend('name', {\n  position: 'bottom'\n});\nchart.legend('_hStep', false);\nchart.legend('_wStep', false);\nchart.point()\n  .position('x*y')\n  .shape('square')\n  .size('_hStep', hStep => Math.min(120 * hStep, 5))\n  .color('name');\n\nconst guideDv = new DataSet.View().source(dv)\n  .transform({\n    type: 'aggregate',\n    fields: [ 'y' ],\n    operations: [ 'median' ],\n    as: [ 'medianY' ],\n    groupBy: 'State'\n  });\nguideDv.rows.forEach(row => {\n  chart.guide().text({\n    top: true,\n    position: [ 0, row.medianY ],\n    content: row.State,\n    offsetX: -10,\n    style: {\n      fill: '#666', // 文本颜色\n      fontSize: 24, // 文本大小\n      fontWeight: 'bold', // 文本粗细\n      textAlign: 'right'\n    }\n  });\n});\n\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.waffleGrouped = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    State: 'AL',\n    'Under 5 Years': 310504,\n    '5 to 13 Years': 552339,\n    '14 to 17 Years': 259034,\n    '18 to 24 Years': 450818,\n    '25 to 44 Years': 1231572,\n    '45 to 64 Years': 1215966,\n    '65 Years and Over': 641667\n  }, {\n    State: 'AK',\n    'Under 5 Years': 52083,\n    '5 to 13 Years': 85640,\n    '14 to 17 Years': 42153,\n    '18 to 24 Years': 74257,\n    '25 to 44 Years': 198724,\n    '45 to 64 Years': 183159,\n    '65 Years and Over': 50277\n  }, {\n    State: 'AZ',\n    'Under 5 Years': 515910,\n    '5 to 13 Years': 828669,\n    '14 to 17 Years': 362642,\n    '18 to 24 Years': 601943,\n    '25 to 44 Years': 1804762,\n    '45 to 64 Years': 1523681,\n    '65 Years and Over': 862573\n  }, {\n    State: 'AR',\n    'Under 5 Years': 202070,\n    '5 to 13 Years': 343207,\n    '14 to 17 Years': 157204,\n    '18 to 24 Years': 264160,\n    '25 to 44 Years': 754420,\n    '45 to 64 Years': 727124,\n    '65 Years and Over': 407205\n  }, {\n    State: 'CA',\n    'Under 5 Years': 2704659,\n    '5 to 13 Years': 4499890,\n    '14 to 17 Years': 2159981,\n    '18 to 24 Years': 3853788,\n    '25 to 44 Years': 10604510,\n    '45 to 64 Years': 8819342,\n    '65 Years and Over': 4114496\n  }, {\n    State: 'CO',\n    'Under 5 Years': 358280,\n    '5 to 13 Years': 587154,\n    '14 to 17 Years': 261701,\n    '18 to 24 Years': 466194,\n    '25 to 44 Years': 1464939,\n    '45 to 64 Years': 1290094,\n    '65 Years and Over': 511094\n  }, {\n    State: 'CT',\n    'Under 5 Years': 211637,\n    '5 to 13 Years': 403658,\n    '14 to 17 Years': 196918,\n    '18 to 24 Years': 325110,\n    '25 to 44 Years': 916955,\n    '45 to 64 Years': 968967,\n    '65 Years and Over': 478007\n  }];\n  var ages = ['Under 5 Years', '5 to 13 Years', '14 to 17 Years', '18 to 24 Years', '25 to 44 Years', '45 to 64 Years', '65 Years and Over'];\n  var dv = new DataSet.View().source(data).transform({\n    type: 'fold',\n    fields: ages,\n    key: 'name'\n  }).transform({\n    type: 'waffle',\n    maxCount: 500,\n    groupBy: 'State'\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [20, 20, 80, 50]\n  });\n  chart.source(dv);\n  chart.scale({\n    x: {\n      nice: false\n    },\n    y: {\n      nice: false\n    }\n  });\n  chart.axis(false);\n  chart.legend('name', {\n    position: 'bottom'\n  });\n  chart.legend('_hStep', false);\n  chart.legend('_wStep', false);\n  chart.point().position('x*y').shape('square').size('_hStep', function (hStep) {\n    return Math.min(120 * hStep, 5);\n  }).color('name');\n  var guideDv = new DataSet.View().source(dv).transform({\n    type: 'aggregate',\n    fields: ['y'],\n    operations: ['median'],\n    as: ['medianY'],\n    groupBy: 'State'\n  });\n  guideDv.rows.forEach(function (row) {\n    chart.guide().text({\n      top: true,\n      position: [0, row.medianY],\n      content: row.State,\n      offsetX: -10,\n      style: {\n        fill: '#666',\n        // 文本颜色\n        fontSize: 24,\n        // 文本大小\n        fontWeight: 'bold',\n        // 文本粗细\n        textAlign: 'right'\n      }\n    });\n  });\n  chart.render();\n});"},{"relativePath":"other/other/demo/waffle-image.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/waffle-image.js","order":26,"filename":"waffle-image.js","title":{"zh":"图片华夫图","en":"waffle chart fill with image"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*HwbqQ551CxwAAAAAAAAAAABkARQnAQ","source":"const data = [\n  { name: 'Internet Explorer', value: 26 },\n  { name: 'Chrome', value: 40 },\n  { name: 'Firefox', value: 30 },\n  { name: 'Safari', value: 24 },\n  { name: 'Opera', value: 15 },\n  { name: 'Undetectable', value: 8 }\n];\nconst imageMap = {\n  'Internet Explorer': 'https://gw.alipayobjects.com/zos/rmsportal/eOYRaLPOmkieVvjyjTzM.png',\n  Chrome: 'https://gw.alipayobjects.com/zos/rmsportal/dWJWRLWfpOEbwCyxmZwu.png',\n  Firefox: 'https://gw.alipayobjects.com/zos/rmsportal/ZEPeDluKmAoTioCABBTc.png',\n  Safari: 'https://gw.alipayobjects.com/zos/rmsportal/eZYhlLzqWLAYwOHQAXmc.png',\n  Opera: 'https://gw.alipayobjects.com/zos/rmsportal/vXiGOWCGZNKuVVpVYQAw.png',\n  Undetectable: 'https://gw.alipayobjects.com/zos/rmsportal/NjApYXminrnhBgOXyuaK.png'\n};\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'waffle',\n    rows: 10\n  });\nconst chart = new G2.Chart({\n  container: 'container',\n  width: 500,\n  height: 500,\n  padding: 20\n});\nchart.source(dv);\nchart.legend(false);\nchart.axis(false);\nchart.tooltip(false);\nchart.point()\n  .position('x*y')\n  .size(30)\n  .shape('name', name => [ 'image', imageMap[name] ]); // 根据具体的字段指定 shape\n\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.waffleImage = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    name: 'Internet Explorer',\n    value: 26\n  }, {\n    name: 'Chrome',\n    value: 40\n  }, {\n    name: 'Firefox',\n    value: 30\n  }, {\n    name: 'Safari',\n    value: 24\n  }, {\n    name: 'Opera',\n    value: 15\n  }, {\n    name: 'Undetectable',\n    value: 8\n  }];\n  var imageMap = {\n    'Internet Explorer': 'https://gw.alipayobjects.com/zos/rmsportal/eOYRaLPOmkieVvjyjTzM.png',\n    Chrome: 'https://gw.alipayobjects.com/zos/rmsportal/dWJWRLWfpOEbwCyxmZwu.png',\n    Firefox: 'https://gw.alipayobjects.com/zos/rmsportal/ZEPeDluKmAoTioCABBTc.png',\n    Safari: 'https://gw.alipayobjects.com/zos/rmsportal/eZYhlLzqWLAYwOHQAXmc.png',\n    Opera: 'https://gw.alipayobjects.com/zos/rmsportal/vXiGOWCGZNKuVVpVYQAw.png',\n    Undetectable: 'https://gw.alipayobjects.com/zos/rmsportal/NjApYXminrnhBgOXyuaK.png'\n  };\n  var dv = new DataSet.View().source(data).transform({\n    type: 'waffle',\n    rows: 10\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    width: 500,\n    height: 500,\n    padding: 20\n  });\n  chart.source(dv);\n  chart.legend(false);\n  chart.axis(false);\n  chart.tooltip(false);\n  chart.point().position('x*y').size(30).shape('name', function (name) {\n    return ['image', imageMap[name]];\n  }); // 根据具体的字段指定 shape\n\n  chart.render();\n});"},{"relativePath":"other/other/demo/waffle-path.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/waffle-path.js","order":27,"filename":"waffle-path.js","title":{"zh":"符号华夫图","en":"waffle chart fill with path"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*2t2pQ4GQNJ4AAAAAAAAAAABkARQnAQ","source":"const pathMap = {\n  club: 'M22.439 36.421c.179 1.756.693 4.774 1.544 9.054h-7.428c.85-3.971 1.275-6.989 1.275-9.054l.504-6.626c0-.411.169-.329.505.247-.707 1.763-1.595 3.269-2.665 4.517-1.818 2.188-4.188 3.282-7.11 3.282-2.743 0-4.952-.93-6.626-2.788C.813 33.071 0 30.725 0 28.015c0-3.107.85-5.651 2.552-7.634 1.646-1.7 3.817-2.551 6.512-2.551 2.483 0 4.678.782 6.585 2.346.432-.31.367-.68-.195-1.112-3.17-2.112-4.754-5.326-4.754-9.64 0-2.593.847-4.808 2.541-6.647C15.066.925 17.323 0 20.011 0c3.04 0 5.323.85 6.853 2.551 1.81 1.996 2.716 4.373 2.716 7.13 0 3.773-1.495 6.89-4.486 9.352-.57.453-.727.837-.473 1.153 2.092-1.57 4.29-2.356 6.595-2.356 2.689 0 4.86.854 6.513 2.562 1.872 1.982 2.808 4.523 2.808 7.623 0 2.717-.909 5.073-2.726 7.069-1.66 1.838-3.858 2.757-6.595 2.757-2.75 0-5.124-1.09-7.12-3.272-.892-1.076-1.776-2.579-2.654-4.506.336-.59.504-.634.504-.134l.494 6.492z',\n  diamond: 'M18.993 46.638L0 23.52 18.983 0l19.003 23.53-18.993 23.108z',\n  heart: 'M40.281 10.443c0 7.634-4.47 16.606-13.407 26.915l-6.605 7.357-6.873-7.357C4.466 27.049 0 18.079 0 10.443c0-2.942 1.019-5.49 3.056-7.644C4.881.933 7.476 0 10.845 0c3.025 0 5.387.847 7.089 2.541 1.145 1.187 1.896 2.412 2.253 3.674.295-1.263.95-2.398 1.965-3.406C24.169.937 26.597 0 29.436 0c3.361 0 5.958.933 7.789 2.799 2.037 2.16 3.056 4.708 3.056 7.644z',\n  spade: 'M21.175 38.088c.178 2.786.69 5.553 1.533 8.304h-8.447c.679-3.245 1.19-6.012 1.533-8.303l.134-5.597c.425-.453.802-.453 1.131 0-.919 1.646-1.9 2.99-2.942 4.033-1.482 1.482-3.673 2.222-6.575 2.222-2.085 0-3.772-.74-5.062-2.222C.827 34.872 0 32.591 0 29.683c0-3.285 3.228-9.287 9.682-18.005L18.479 0l8.93 11.606c6.373 8.1 9.56 14.126 9.56 18.077 0 2.901-.827 5.182-2.48 6.842-1.482 1.482-3.252 2.222-5.31 2.222-2.716 0-4.941-.771-6.677-2.315-1.564-1.563-2.428-2.832-2.593-3.806.343-.165.515-.186.515-.062l.751 5.525z'\n};\nconst data = [\n  { name: 'club', value: 50 },\n  { name: 'diamond', value: 65 },\n  { name: 'heart', value: 43 },\n  { name: 'spade', value: 12 }\n];\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'waffle',\n    rows: 10\n  });\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 20, 80, 80, 20 ]\n});\nchart.source(dv, {\n  x: { nice: false },\n  y: { nice: false }\n});\nchart.axis(false);\nchart.legend(false);\nchart.tooltip(false);\nchart.point()\n  .position('x*y')\n  .shape('name', name => [ 'path', pathMap[name] ]) // 根据具体的字段指定 shape\n  .size((500 - 100) / 10)\n  .color('name');\n\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.wafflePath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var pathMap = {\n    club: 'M22.439 36.421c.179 1.756.693 4.774 1.544 9.054h-7.428c.85-3.971 1.275-6.989 1.275-9.054l.504-6.626c0-.411.169-.329.505.247-.707 1.763-1.595 3.269-2.665 4.517-1.818 2.188-4.188 3.282-7.11 3.282-2.743 0-4.952-.93-6.626-2.788C.813 33.071 0 30.725 0 28.015c0-3.107.85-5.651 2.552-7.634 1.646-1.7 3.817-2.551 6.512-2.551 2.483 0 4.678.782 6.585 2.346.432-.31.367-.68-.195-1.112-3.17-2.112-4.754-5.326-4.754-9.64 0-2.593.847-4.808 2.541-6.647C15.066.925 17.323 0 20.011 0c3.04 0 5.323.85 6.853 2.551 1.81 1.996 2.716 4.373 2.716 7.13 0 3.773-1.495 6.89-4.486 9.352-.57.453-.727.837-.473 1.153 2.092-1.57 4.29-2.356 6.595-2.356 2.689 0 4.86.854 6.513 2.562 1.872 1.982 2.808 4.523 2.808 7.623 0 2.717-.909 5.073-2.726 7.069-1.66 1.838-3.858 2.757-6.595 2.757-2.75 0-5.124-1.09-7.12-3.272-.892-1.076-1.776-2.579-2.654-4.506.336-.59.504-.634.504-.134l.494 6.492z',\n    diamond: 'M18.993 46.638L0 23.52 18.983 0l19.003 23.53-18.993 23.108z',\n    heart: 'M40.281 10.443c0 7.634-4.47 16.606-13.407 26.915l-6.605 7.357-6.873-7.357C4.466 27.049 0 18.079 0 10.443c0-2.942 1.019-5.49 3.056-7.644C4.881.933 7.476 0 10.845 0c3.025 0 5.387.847 7.089 2.541 1.145 1.187 1.896 2.412 2.253 3.674.295-1.263.95-2.398 1.965-3.406C24.169.937 26.597 0 29.436 0c3.361 0 5.958.933 7.789 2.799 2.037 2.16 3.056 4.708 3.056 7.644z',\n    spade: 'M21.175 38.088c.178 2.786.69 5.553 1.533 8.304h-8.447c.679-3.245 1.19-6.012 1.533-8.303l.134-5.597c.425-.453.802-.453 1.131 0-.919 1.646-1.9 2.99-2.942 4.033-1.482 1.482-3.673 2.222-6.575 2.222-2.085 0-3.772-.74-5.062-2.222C.827 34.872 0 32.591 0 29.683c0-3.285 3.228-9.287 9.682-18.005L18.479 0l8.93 11.606c6.373 8.1 9.56 14.126 9.56 18.077 0 2.901-.827 5.182-2.48 6.842-1.482 1.482-3.252 2.222-5.31 2.222-2.716 0-4.941-.771-6.677-2.315-1.564-1.563-2.428-2.832-2.593-3.806.343-.165.515-.186.515-.062l.751 5.525z'\n  };\n  var data = [{\n    name: 'club',\n    value: 50\n  }, {\n    name: 'diamond',\n    value: 65\n  }, {\n    name: 'heart',\n    value: 43\n  }, {\n    name: 'spade',\n    value: 12\n  }];\n  var dv = new DataSet.View().source(data).transform({\n    type: 'waffle',\n    rows: 10\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [20, 80, 80, 20]\n  });\n  chart.source(dv, {\n    x: {\n      nice: false\n    },\n    y: {\n      nice: false\n    }\n  });\n  chart.axis(false);\n  chart.legend(false);\n  chart.tooltip(false);\n  chart.point().position('x*y').shape('name', function (name) {\n    return ['path', pathMap[name]];\n  }) // 根据具体的字段指定 shape\n  .size((500 - 100) / 10).color('name');\n  chart.render();\n});"},{"relativePath":"other/other/demo/waffle.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/waffle.js","order":28,"filename":"waffle.js","title":{"zh":"华夫图","en":"waffle chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*EoRSRbRYiH8AAAAAAAAAAABkARQnAQ","source":"\nconst data = [\n  { name: 'type 1', value: 102 },\n  { name: 'type 2', value: 65 },\n  { name: 'type 3', value: 43 },\n  { name: 'type 4', value: 12 }\n];\n\nconst dv = new DataSet.View().source(data)\n  .transform({\n    type: 'waffle',\n    maxCount: 500,\n    rows: 12\n  });\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 20, 20, 80, 50 ]\n});\nchart.source(dv);\nchart.scale({\n  x: { nice: false },\n  y: { nice: false }\n});\nchart.axis(false);\nchart.legend('name', {\n  position: 'bottom'\n});\nchart.legend('_hStep', false);\nchart.legend('_wStep', false);\nchart.point()\n  .position('x*y')\n  .shape('square')\n  .size('_hStep', hStep => Math.min((500 - 100) * 0.4 * hStep, 15))\n  .color('name');\n\nchart.render();\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.waffle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    name: 'type 1',\n    value: 102\n  }, {\n    name: 'type 2',\n    value: 65\n  }, {\n    name: 'type 3',\n    value: 43\n  }, {\n    name: 'type 4',\n    value: 12\n  }];\n  var dv = new DataSet.View().source(data).transform({\n    type: 'waffle',\n    maxCount: 500,\n    rows: 12\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [20, 20, 80, 50]\n  });\n  chart.source(dv);\n  chart.scale({\n    x: {\n      nice: false\n    },\n    y: {\n      nice: false\n    }\n  });\n  chart.axis(false);\n  chart.legend('name', {\n    position: 'bottom'\n  });\n  chart.legend('_hStep', false);\n  chart.legend('_wStep', false);\n  chart.point().position('x*y').shape('square').size('_hStep', function (hStep) {\n    return Math.min((500 - 100) * 0.4 * hStep, 15);\n  }).color('name');\n  chart.render();\n});"},{"relativePath":"other/other/demo/word-cloud-mask.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/word-cloud-mask.js","order":29,"filename":"word-cloud-mask.js","title":{"zh":"带图片遮罩的词云","en":"word cloud with shape"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*2IEIQ7e-KAUAAAAAAAAAAABkARQnAQ","source":"function getTextAttrs(cfg) {\n  return {\n    ...cfg.style,\n    fillOpacity: cfg.opacity,\n    fontSize: cfg.origin._origin.size,\n    rotate: cfg.origin._origin.rotate,\n    text: cfg.origin._origin.text,\n    textAlign: 'center',\n    fontFamily: cfg.origin._origin.font,\n    fill: cfg.color,\n    textBaseline: 'Alphabetic'\n  };\n}\n\n// 给point注册一个词云的shape\nG2.Shape.registerShape('point', 'cloud', {\n  drawShape(cfg, container) {\n    const attrs = getTextAttrs(cfg);\n    return container.addShape('text', {\n      attrs: {\n        ...attrs,\n        x: cfg.x,\n        y: cfg.y\n      }\n    });\n  }\n});\n\nfetch('../data/antv-keywords.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data);\n    const range = dv.range('value');\n    const min = range[0];\n    const max = range[1];\n    const imageMask = new Image();\n    imageMask.crossOrigin = '';\n    imageMask.src = 'https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*07tdTIOmvlYAAAAAAAAAAABkARQnAQ';\n    imageMask.onload = () => {\n      dv.transform({\n        type: 'tag-cloud',\n        fields: [ 'name', 'value' ],\n        imageMask,\n        font: 'Verdana',\n        size: [ 600, 400 ], // 宽高设置最好根据 imageMask 做调整\n        padding: 0,\n        timeInterval: 5000, // max execute time\n        rotate() {\n          let random = ~~(Math.random() * 4) % 4;\n          if (random === 2) {\n            random = 0;\n          }\n          return random * 90; // 0, 90, 270\n        },\n        fontSize(d) {\n          return ((d.value - min) / (max - min)) * (32 - 8) + 8;\n        }\n      });\n      const chart = new G2.Chart({\n        container: 'container',\n        width: 600, // 宽高设置最好根据 imageMask 做调整\n        height: 400,\n        padding: 0\n      });\n      chart.source(dv, {\n        x: { nice: false },\n        y: { nice: false }\n      });\n      chart.legend(false);\n      chart.axis(false);\n      chart.tooltip({\n        showTitle: false\n      });\n      chart.coord().reflect();\n      chart.point()\n        .position('x*y')\n        .color('text')\n        .shape('cloud');\n      chart.render();\n    };\n  });\n\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.wordCloudMask = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  function getTextAttrs(cfg) {\n    return { ...cfg.style,\n      fillOpacity: cfg.opacity,\n      fontSize: cfg.origin._origin.size,\n      rotate: cfg.origin._origin.rotate,\n      text: cfg.origin._origin.text,\n      textAlign: 'center',\n      fontFamily: cfg.origin._origin.font,\n      fill: cfg.color,\n      textBaseline: 'Alphabetic'\n    };\n  } // 给point注册一个词云的shape\n\n\n  G2.Shape.registerShape('point', 'cloud', {\n    drawShape: function drawShape(cfg, container) {\n      var attrs = getTextAttrs(cfg);\n      return container.addShape('text', {\n        attrs: { ...attrs,\n          x: cfg.x,\n          y: cfg.y\n        }\n      });\n    }\n  });\n  fetch('../data/antv-keywords.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new DataSet.View().source(data);\n    var range = dv.range('value');\n    var min = range[0];\n    var max = range[1];\n    var imageMask = new Image();\n    imageMask.crossOrigin = '';\n    imageMask.src = 'https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*07tdTIOmvlYAAAAAAAAAAABkARQnAQ';\n\n    imageMask.onload = function () {\n      dv.transform({\n        type: 'tag-cloud',\n        fields: ['name', 'value'],\n        imageMask: imageMask,\n        font: 'Verdana',\n        size: [600, 400],\n        // 宽高设置最好根据 imageMask 做调整\n        padding: 0,\n        timeInterval: 5000,\n        // max execute time\n        rotate: function rotate() {\n          var random = ~~(Math.random() * 4) % 4;\n\n          if (random === 2) {\n            random = 0;\n          }\n\n          return random * 90; // 0, 90, 270\n        },\n        fontSize: function fontSize(d) {\n          return (d.value - min) / (max - min) * (32 - 8) + 8;\n        }\n      });\n      var chart = new G2.Chart({\n        container: 'container',\n        width: 600,\n        // 宽高设置最好根据 imageMask 做调整\n        height: 400,\n        padding: 0\n      });\n      chart.source(dv, {\n        x: {\n          nice: false\n        },\n        y: {\n          nice: false\n        }\n      });\n      chart.legend(false);\n      chart.axis(false);\n      chart.tooltip({\n        showTitle: false\n      });\n      chart.coord().reflect();\n      chart.point().position('x*y').color('text').shape('cloud');\n      chart.render();\n    };\n  });\n});"},{"relativePath":"other/other/demo/word-cloud.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/word-cloud.js","order":30,"filename":"word-cloud.js","title":{"zh":"词云","en":"word cloud"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*SEgST634CwUAAAAAAAAAAABkARQnAQ","source":"\nfunction getTextAttrs(cfg) {\n  return {\n    ...cfg.style,\n\n    fillOpacity: cfg.opacity,\n    fontSize: cfg.origin._origin.size,\n    rotate: cfg.origin._origin.rotate,\n    text: cfg.origin._origin.text,\n    textAlign: 'center',\n    fontFamily: cfg.origin._origin.font,\n    fill: cfg.color,\n    textBaseline: 'Alphabetic'\n  };\n}\n\n// 给point注册一个词云的shape\nG2.Shape.registerShape('point', 'cloud', {\n  drawShape(cfg, container) {\n    const attrs = getTextAttrs(cfg);\n    return container.addShape('text', {\n      attrs: {\n        ...attrs,\n        x: cfg.x,\n        y: cfg.y\n      }\n    });\n  }\n});\nfetch('../data/world-population.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data);\n    const range = dv.range('value');\n    const min = range[0];\n    const max = range[1];\n    dv.transform({\n      type: 'tag-cloud',\n      fields: [ 'x', 'value' ],\n      size: [ 600, 400 ],\n      font: 'Verdana',\n      padding: 0,\n      timeInterval: 5000, // max execute time\n      rotate() {\n        let random = ~~(Math.random() * 4) % 4;\n        if (random === 2) {\n          random = 0;\n        }\n        return random * 90; // 0, 90, 270\n      },\n      fontSize(d) {\n        if (d.value) {\n          return ((d.value - min) / (max - min)) * (80 - 24) + 24;\n        }\n        return 0;\n      }\n    });\n    const chart = new G2.Chart({\n      container: 'container',\n      width: 600,\n      height: 400,\n      padding: 0\n    });\n    chart.source(dv, {\n      x: { nice: false },\n      y: { nice: false }\n    });\n    chart.legend(false);\n    chart.axis(false);\n    chart.tooltip({\n      showTitle: false\n    });\n    chart.coord().reflect();\n    chart.point()\n      .position('x*y')\n      .color('category')\n      .shape('cloud')\n      .tooltip('value*category');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.wordCloud = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  function getTextAttrs(cfg) {\n    return { ...cfg.style,\n      fillOpacity: cfg.opacity,\n      fontSize: cfg.origin._origin.size,\n      rotate: cfg.origin._origin.rotate,\n      text: cfg.origin._origin.text,\n      textAlign: 'center',\n      fontFamily: cfg.origin._origin.font,\n      fill: cfg.color,\n      textBaseline: 'Alphabetic'\n    };\n  } // 给point注册一个词云的shape\n\n\n  G2.Shape.registerShape('point', 'cloud', {\n    drawShape: function drawShape(cfg, container) {\n      var attrs = getTextAttrs(cfg);\n      return container.addShape('text', {\n        attrs: { ...attrs,\n          x: cfg.x,\n          y: cfg.y\n        }\n      });\n    }\n  });\n  fetch('../data/world-population.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new DataSet.View().source(data);\n    var range = dv.range('value');\n    var min = range[0];\n    var max = range[1];\n    dv.transform({\n      type: 'tag-cloud',\n      fields: ['x', 'value'],\n      size: [600, 400],\n      font: 'Verdana',\n      padding: 0,\n      timeInterval: 5000,\n      // max execute time\n      rotate: function rotate() {\n        var random = ~~(Math.random() * 4) % 4;\n\n        if (random === 2) {\n          random = 0;\n        }\n\n        return random * 90; // 0, 90, 270\n      },\n      fontSize: function fontSize(d) {\n        if (d.value) {\n          return (d.value - min) / (max - min) * (80 - 24) + 24;\n        }\n\n        return 0;\n      }\n    });\n    var chart = new G2.Chart({\n      container: 'container',\n      width: 600,\n      height: 400,\n      padding: 0\n    });\n    chart.source(dv, {\n      x: {\n        nice: false\n      },\n      y: {\n        nice: false\n      }\n    });\n    chart.legend(false);\n    chart.axis(false);\n    chart.tooltip({\n      showTitle: false\n    });\n    chart.coord().reflect();\n    chart.point().position('x*y').color('category').shape('cloud').tooltip('value*category');\n    chart.render();\n  });\n});"},{"relativePath":"other/other/demo/zoom-scatter.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/other/other/demo/zoom-scatter.js","order":31,"filename":"zoom-scatter.js","title":{"zh":"zoom - 散点图","en":"zoom scatter chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*6IcuTY7u5akAAAAAAAAAAABkARQnAQ","source":"fetch('../data/scatter.json')\n  .then(res => res.json())\n  .then(data => {\n    const chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: 50,\n      limitInPlot: true\n    });\n    chart.source(data);\n    chart.tooltip({\n      type: 'mini'\n    });\n    chart.point()\n      .position('height*weight')\n      .size(4)\n      .shape('circle')\n      .opacity(0.65);\n    chart.render();\n    chart\n      .interact('drag', {\n        type: 'XY'\n      })\n      .interact('zoom', {\n        type: 'XY'\n      });\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.zoomScatter = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  fetch('../data/scatter.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var chart = new G2.Chart({\n      container: 'container',\n      forceFit: true,\n      height: 500,\n      padding: 50,\n      limitInPlot: true\n    });\n    chart.source(data);\n    chart.tooltip({\n      type: 'mini'\n    });\n    chart.point().position('height*weight').size(4).shape('circle').opacity(0.65);\n    chart.render();\n    chart.interact('drag', {\n      type: 'XY'\n    }).interact('zoom', {\n      type: 'XY'\n    });\n  });\n});"}]}}}}