{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-0-10-46-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/zh/examples/column/stack","result":{"data":{"site":{"siteMetadata":{"title":"G2","githubUrl":"https://github.com/antvis/g2","examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"line","icon":"line","title":{"zh":"折线图","en":"Line Chart"}},{"slug":"column","icon":"column","title":{"zh":"柱状图","en":"Column Chart"}},{"slug":"bar","icon":"bar","title":{"zh":"条形图","en":"Bar Chart"}},{"slug":"pie","icon":"pie","title":{"zh":"饼图","en":"Pie Chart"}},{"slug":"point","icon":"point","title":{"zh":"点图","en":"Point Chart"}},{"slug":"area","icon":"area","title":{"zh":"面积图","en":"Area Chart"}},{"slug":"box","icon":"box","title":{"zh":"箱型图","en":"Box Chart"}},{"slug":"candlestick","icon":"candlestick","title":{"zh":"烛形图","en":"K Chart"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"Heatmap"}},{"slug":"gauge","icon":"gauge","title":{"zh":"仪表盘","en":"Gauges"}},{"slug":"funnel","icon":"funnel","title":{"zh":"漏斗图","en":"Funnel Chart"}},{"slug":"map","icon":"map","title":{"zh":"地图","en":"Maps"}},{"slug":"radar","icon":"radar","title":{"zh":"雷达图","en":"Radar Chart"}},{"slug":"facet","icon":"facet","title":{"zh":"分面","en":"Facets"}},{"slug":"relation","icon":"relation","title":{"zh":"关系图","en":"Relation Chart"}},{"slug":"other","icon":"other","title":{"zh":"其他图表","en":"Other Chart"}},{"slug":"component","icon":"component","title":{"zh":"组件使用","en":"Chart Components"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":"<!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"UTF-8\">\n            <title>{{title}}</title>\n          </head>\n          <body>\n            <div id=\"container\" />\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.g2-3.5.11/dist/g2.min.js\"></script>\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.10.2/dist/data-set.min.js\"></script>\n            <script>\n        {{code}}\n            </script>\n          </body>\n        </html>"}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"html":"","fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/relation/relation"},"frontmatter":{"title":"Graph","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/radar/radar"},"frontmatter":{"title":"Radar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/relation/relation"},"frontmatter":{"title":"关系图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.zh.md"}}},{"node":{"html":"<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>雷达图是以相同点开始的轴上表示的三个或更多个定量变量的二维图形的形式显示多变量数据的图形方法。轴的相对位置和角度通常是不知情的。</p>","fields":{"slug":"/zh/examples/radar/radar"},"frontmatter":{"title":"雷达图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"html":"<p>Scatter Chart，也叫 X-Y 图，它将所有的数据以点的形式展现在笛卡尔坐标系上，以显示变量之间的相互影响程度，点的位置由变量的数值决定。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>通过观察散点图上数据点的分布情况，我们可以推断出变量间的相关性。如果变量之间不存在相互关系，那么在散点图上就会表现为随机分布的离散的点，如果存在某种相关性，那么大部分的数据点就会相对密集并以某种趋势呈现。数据的相关关系主要分为：正相关（两个变量值同时增长）、负相关（一个变量值增加另一个变量值下降）、不相关、线性相关、指数相关等，表现在散点图上的大致分布如下图所示。那些离点集群较远的点我们称为离群点或者异常点。</p>","fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/other/other"},"frontmatter":{"title":"Others","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/other/other"},"frontmatter":{"title":"其他图表","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/basic"},"frontmatter":{"title":"Basic Pie Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.en.md"}}},{"node":{"html":"<p>饼图广泛得应用在各个领域，用于表示不同分类的占比情况，通过弧度大小来对比各种分类。饼图通过将一个圆饼按照分类的占比划分成多个区块，整个圆饼代表数据的总量，每个区块（圆弧）表示该分类占总体的比例大小，所有区块（圆弧）的加和等于 100%。可以很好地帮助用户快速了解数据的占比分配。</p>","fields":{"slug":"/zh/examples/pie/basic"},"frontmatter":{"title":"基础饼图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/map/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/map/map"},"frontmatter":{"title":"Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.en.md"}}},{"node":{"html":"<p>Basic Line Chart，基础折线图。折线图用于显示数据在一个连续的时间间隔或者时间跨度上的变化，它的特点是反映事物随时间或有序类别而变化的趋势。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>在折线图中，数据是递增还是递减、增减的速率、增减的规律（周期性、螺旋性等）、峰值等特征都可以清晰地反映出来。所以，折线图常用来分析数据随时间的变化趋势，也可用来分析多组数据随时间变化的相互作用和相互影响。例如可用来分析某类商品或是某几类相关的商品随时间变化的销售情况，从而进一步预测未来的销售情况。在折线图中，一般水平轴（X轴）用来表示时间的推移，并且间隔相同；而垂直轴（Y轴）代表不同时刻的数据的大小。</p>","fields":{"slug":"/zh/examples/line/basic"},"frontmatter":{"title":"基础折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/basic"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"Heatmap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gauge/gauge"},"frontmatter":{"title":"Gauge","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.en.md"}}},{"node":{"html":"<p>热力图，由小色块有序且紧凑的组成的图表。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>特别适合用于直接对数据量较大的、相对原始的数据进行分析。比如：生物基因科学领域，色块图常被用于微阵列数据分析。</p>","fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"热力图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"html":"<h2 id=\"如何使用\" style=\"position:relative;\"><a href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\" aria-label=\"如何使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何使用</h2>\n<p>仪表盘(Gauge)是一种拟物化的图表，刻度表示度量，指针表示维度，指针角度表示数值。仪表盘图表就像汽车的速度表一样，有一个圆形的表盘及相应的刻度，有一个指针指向当前数值。目前很多的管理报表或报告上都是用这种图表，以直观的表现出某个指标的进度或实际情况。仪表盘的好处在于它能跟人们的常识结合，使大家马上能理解看什么、怎么看。拟物化的方式使图标变得更友好更人性化，正确使用可以提升用户体验。</p>","fields":{"slug":"/zh/examples/gauge/gauge"},"frontmatter":{"title":"仪表盘","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/facet/facet"},"frontmatter":{"title":"分面","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/facet/facet"},"frontmatter":{"title":"Facet","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/line"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/line"},"frontmatter":{"title":"折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/funnel/funnel"},"frontmatter":{"title":"Funnel Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.en.md"}}},{"node":{"html":"<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>漏斗图适用于业务流程比较规范、周期长、环节多的单流程单向分析，通过漏斗各环节业务数据的比较能够直观地发现和说明问题所在的环节，进而做出决策。漏斗图用梯形面积表示某个环节业务量与上一个环节之间的差异。漏斗图从上到下，有逻辑上的顺序关系，表现了随着业务流程的推进业务目标完成的情况。</p>","fields":{"slug":"/zh/examples/funnel/funnel"},"frontmatter":{"title":"漏斗图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/component/component"},"frontmatter":{"title":"Chart Components","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/component/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/component/component"},"frontmatter":{"title":"图表组件","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/component/index.zh.md"}}},{"node":{"html":"<p>烛形图，原名 K 线图，蜡烛图，又称阴阳图、棒线、红黑线或蜡烛线，常用于展示股票交易数据。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>烛形图主要用于金融领域里展示股票，期货等交易数据，按照时间维度分为日 K 线、周 K 线、月 K 线。展示的数据需要满足 K 线构成的四要素：即开盘价、收盘价、最高价、最低价。</p>","fields":{"slug":"/zh/examples/candlestick/candlestick"},"frontmatter":{"title":"烛形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/basic"},"frontmatter":{"title":"Basic Column Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/candlestick/candlestick"},"frontmatter":{"title":"K Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.en.md"}}},{"node":{"html":"<p>基础柱状图，使用垂直的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>柱状图有别于直方图，柱状图无法显示数据在一个区间内的连续变化趋势。柱状图描述的是分类数据，回答的是每一个分类中“有多少？”这个问题。 需要注意的是，当柱状图显示的分类很多时会导致分类名层叠等显示问题。</p>","fields":{"slug":"/zh/examples/column/basic"},"frontmatter":{"title":"基础柱状图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/box/box"},"frontmatter":{"title":"Box Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.en.md"}}},{"node":{"html":"<p>箱型图，又称盒须图、盒式图或箱线图，是一种用作显示一组数据分布情况的统计图。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>如果一个数据集中包含了一个分类变量和一个或者多个连续变量，那么你可能会想知道连续变量会如何随着分类变量水平的变化而变化，而箱形图就可以提供这种方法，它只用了5个数字对分布进行概括，即一组数据的最大值、最小值、中位数、下四分位数及上四分位数。对于数据集中的异常值，通常会以单独的点的形式绘制。箱形图可以水平或者垂直绘制。箱形图多用于数值统计，虽然相比于直方图和密度曲线较原始简单，但是它不需要占据过多的画布空间，空间利用率高，非常适用于比较多组数据的分布情况。</p>","fields":{"slug":"/zh/examples/box/box"},"frontmatter":{"title":"箱型图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/basic"},"frontmatter":{"title":"Basic Bar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.en.md"}}},{"node":{"html":"<p>使用水平的柱子显示类别之间的数值比较。其中一个轴表示需要对比的分类维度，另一个轴代表相应的数值。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>对比分类数据的数值大小，当分类情况过多时，柱状图的文本为了排布合理，需要进行旋转，不利于阅读，相比于纵向柱状图，横向柱状图更适用于此类分类较多的场景。</p>","fields":{"slug":"/zh/examples/bar/basic"},"frontmatter":{"title":"基础条形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/basic"},"frontmatter":{"title":"Area Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.en.md"}}},{"node":{"html":"<p>面积图又叫区域图。 它是在折线图的基础之上形成的, 它将折线图中折线与自变量坐标轴之间的区域使用颜色或者纹理填充，这样一个填充区域我们叫做面积，颜色的填充可以更好的突出趋势信息。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>面积图用于强调数量随时间而变化的程度，也可用于引起人们对总值趋势的注意。他们最常用于表现趋势和关系,而不是传达特定的值。</p>","fields":{"slug":"/zh/examples/area/basic"},"frontmatter":{"title":"面积图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/donut"},"frontmatter":{"title":"Donut Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.en.md"}}},{"node":{"html":"<p>环图，其本质是饼图将中间区域挖空。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>饼图的整体性太强，我们会将注意力集中在比较饼图内各个扇形之间占整体比重的关系。但如果我们将两个饼图放在一起，饼图很难同时对比两个图。环图在解决上述问题时，采用了让我们更关注长度而不是面积的做法。这样我们就能相对简单的对比不同的环图。同时环图相对于饼图空间的利用率更高，比如我们可以使用它的空心区域显示文本信息，比如标题等。</p>","fields":{"slug":"/zh/examples/pie/donut"},"frontmatter":{"title":"环图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.zh.md"}}},{"node":{"html":"<p>双折线图。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>用于比对两组数据的趋势。</p>","fields":{"slug":"/zh/examples/line/double"},"frontmatter":{"title":"双折线图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/double/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/double"},"frontmatter":{"title":"Double Line Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/double/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/column"},"frontmatter":{"title":"柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/column"},"frontmatter":{"title":"Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/dodge"},"frontmatter":{"title":"Grouped Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/column/dodge"},"frontmatter":{"title":"分组柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/dodge"},"frontmatter":{"title":"Grouped Bar Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/bar/dodge"},"frontmatter":{"title":"分组条形图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/stacked"},"frontmatter":{"title":"Stacked Area Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.en.md"}}},{"node":{"html":"<p>和基本面积图一样，唯一的区别就是图上每一个数据集的起点不同，起点是基于前一个数据集的，用于显示每个数值所占大小随时间或类别变化的趋势线，展示的是部分与整体的关系。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>层叠面积图上的最大的面积代表了所有的数据量的总和，是一个整体。各个叠起来的面积表示各个数据量的大小，这些堆叠起来的面积图在表现大数据的总量分量的变化情况时格外有用，所以层叠面积图不适用于表示带有负值的数据集。非常适用于对比多变量随时间变化的情况。</p>","fields":{"slug":"/zh/examples/area/stacked"},"frontmatter":{"title":"堆叠面积图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.zh.md"}}},{"node":{"html":"<p>南丁格尔玫瑰图，又名鸡冠花图、极坐标区域图，是南丁格尔在克里米亚战争期间提交的一份关于士兵死伤的报告时发明的一种图表,是在极坐标下绘制的柱状图，使用圆弧的半径长短表示数据的大小（数量的多少）。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>由于半径和面积的关系是平方的关系，南丁格尔玫瑰图会将数据的比例大小夸大，尤其适合对比大小相近的数值；由于圆形有周期的特性，所以玫瑰图也适用于表示一个周期内的时间概念，比如星期、月份。</p>","fields":{"slug":"/zh/examples/pie/rose"},"frontmatter":{"title":"南丁格尔玫瑰图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/rose"},"frontmatter":{"title":"Nightingale Rose Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/multiple"},"frontmatter":{"title":"multiple line chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/line/multiple"},"frontmatter":{"title":"多折线图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/bar"},"frontmatter":{"title":"Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/bar"},"frontmatter":{"title":"条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/stack"},"frontmatter":{"title":"Stacked Column Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/column/stack"},"frontmatter":{"title":"堆叠柱状图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/bar/stack"},"frontmatter":{"title":"堆叠条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/bar/stack"},"frontmatter":{"title":"Stacked Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/area/range"},"frontmatter":{"title":"Range Area Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/area/range"},"frontmatter":{"title":"区间面积图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/pie/nested"},"frontmatter":{"title":"嵌套饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/pie/nested"},"frontmatter":{"title":"Nested Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/line/step"},"frontmatter":{"title":"Step Line Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.en.md"}}},{"node":{"html":"<p>阶梯线图（也称为步骤图）是与线图相似的​​图表，但是线在数据点之间形成一系列步骤。当您要显示以不规则间隔发生的更改时，分阶线图可能很有用。例如，奶制品价格上涨，汽油，税率，利率等。</p>","fields":{"slug":"/zh/examples/line/step"},"frontmatter":{"title":"阶梯折线图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/pie"},"frontmatter":{"title":"Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/pie"},"frontmatter":{"title":"饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/column/histogram"},"frontmatter":{"title":"Histogram","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.en.md"}}},{"node":{"html":"<p>直方图牵涉统计学的概念，首先要对数据进行分组，然后统计每个分组内数据元的数量。 在平面直角坐标系中，横轴标出每个组的端点，纵轴表示频数，每个矩形的高代表对应的频数，称这样的统计图为频数分布直方图。频数分布直方图需要经过频数乘以组距的计算过程才能得出每个分组的数量，同一个直方图的组距是一个固定不变的值，所以如果直接用纵轴表示数量，每个矩形的高代表对应的数据元数量，既能保持分布状态不变，又能直观的看出每个分组的数量。</p>\n<h2 id=\"何时使用\" style=\"position:relative;\"><a href=\"#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8\" aria-label=\"何时使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>何时使用</h2>\n<p>直方图主要用于显示各组频数或数量分布的情况以及各组之间频数或数量的差别，通过直方图还可以观察和估计哪些数据比较集中，异常或者孤立的数据分布在何处。</p>","fields":{"slug":"/zh/examples/column/histogram"},"frontmatter":{"title":"直方图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/area"},"frontmatter":{"title":"Area Chart","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/area"},"frontmatter":{"title":"面积图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/gauge"},"frontmatter":{"title":"Gauge","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/gauge/index.en.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/gauge"},"frontmatter":{"title":"仪表盘","order":5,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/gauge/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/zh/examples/gallery/facet"},"frontmatter":{"title":"分面","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.zh.md"}}},{"node":{"html":"","fields":{"slug":"/en/examples/gallery/facet"},"frontmatter":{"title":"Facet","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.en.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"column/stack/demo/rounded.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/column/stack/demo/rounded.js","order":0,"filename":"rounded.js","title":{"en":"rounded column chart","zh":"圆角柱状图"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*3w5oQp71EEIAAAAAAAAAAABkARQnAQ","source":"// 自定义 shape, 支持图片形式的气泡\nG2.Shape.registerShape('interval', 'borderRadius', {\n  draw(cfg, container) {\n    const points = cfg.points;\n    let path = [];\n    path.push([ 'M', points[0].x, points[0].y ]);\n    path.push([ 'L', points[1].x, points[1].y ]);\n    path.push([ 'L', points[2].x, points[2].y ]);\n    path.push([ 'L', points[3].x, points[3].y ]);\n    path.push('Z');\n    path = this.parsePath(path); // 将 0 - 1 转化为画布坐标\n    return container.addShape('rect', {\n      attrs: {\n        x: path[1][1], // 矩形起始点为左上角\n        y: path[1][2],\n        width: path[2][1] - path[1][1],\n        height: path[0][2] - path[1][2],\n        fill: cfg.color,\n        radius: (path[2][1] - path[1][1]) / 2\n      }\n    });\n  }\n});\nconst activeData = [\n  { date: '2017年3月2日', actual: 175, expected: 900 },\n  { date: '2017年3月3日', actual: 137, expected: 900 },\n  { date: '2017年3月4日', actual: 240, expected: 900 },\n  { date: '2017年3月5日', actual: 726, expected: 900 },\n  { date: '2017年3月6日', actual: 968, expected: 900 },\n  { date: '2017年3月7日', actual: 702, expected: 900 },\n  { date: '2017年3月8日', actual: 655, expected: 900 },\n  { date: '2017年3月9日', actual: 463, expected: 900 },\n  { date: '2017年3月10日', actual: 464, expected: 900 },\n  { date: '2017年3月12日', actual: 0, expected: 900 },\n  { date: '2017年3月13日', actual: 638, expected: 900 },\n  { date: '2017年3月14日', actual: 0, expected: 900 },\n  { date: '2017年3月15日', actual: 0, expected: 900 },\n  { date: '2017年3月16日', actual: 509, expected: 900 },\n  { date: '2017年3月17日', actual: 269, expected: 900 },\n  { date: '2017年3月18日', actual: 321, expected: 900 },\n  { date: '2017年3月19日', actual: 0, expected: 900 },\n  { date: '2017年3月20日', actual: 399, expected: 900 },\n  { date: '2017年3月21日', actual: 662, expected: 900 },\n  { date: '2017年3月22日', actual: 689, expected: 900 },\n  { date: '2017年3月23日', actual: 347, expected: 900 },\n  { date: '2017年3月24日', actual: 0, expected: 900 },\n  { date: '2017年3月26日', actual: 428, expected: 900 },\n  { date: '2017年3月27日', actual: 749, expected: 900 },\n  { date: '2017年3月28日', actual: 0, expected: 900 },\n  { date: '2017年3月29日', actual: 0, expected: 900 },\n  { date: '2017年3月30日', actual: 69.1, expected: 900 }\n];\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 150, 80 ]\n});\nchart.source(activeData, {\n  expected: {\n    ticks: [ 0, 900, 1200 ],\n    max: 1200 // 同步 expected 和 actual 的数值范围\n  },\n  actual: {\n    max: 1200 // 同步 expected 和 actual 的数值范围\n  }\n});\nchart.axis('date', false);\nchart.axis('actual', false);\nchart.axis('expected', {\n  line: null,\n  tickLine: null,\n  position: 'right',\n  label: {\n    formatter: val => {\n      if (val === '1200') {\n        return '';\n      }\n      return val;\n    }\n  }\n});\nchart.legend(false);\nchart.interval()\n  .position('date*expected')\n  .color('#752136')\n  .shape('borderRadius')\n  .tooltip('expected')\n  .opacity(0.6);\nchart.interval()\n  .position('date*actual')\n  .color('#db0d2d')\n  .tooltip('actual')\n  .shape('date*actual', (date, val) => {\n    if (val === 0) {\n      return;\n    }\n    return 'borderRadius';\n  });\nchart.guide().text({\n  position: [ 'min', 'max' ],\n  content: '活动',\n  style: {\n    fill: '#ff2c55',\n    fontSize: 20,\n    fontWeight: 'bold',\n    textBaseline: 'top'\n  }\n});\nchart.guide().text({\n  position: [ 'max', 'max' ],\n  content: '67 / 900 千卡',\n  style: {\n    fill: '#cbcbcb',\n    fontSize: 20,\n    textAlign: 'end',\n    textBaseline: 'top'\n  }\n});\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.rounded = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  // 自定义 shape, 支持图片形式的气泡\n  G2.Shape.registerShape('interval', 'borderRadius', {\n    draw: function draw(cfg, container) {\n      var points = cfg.points;\n      var path = [];\n      path.push(['M', points[0].x, points[0].y]);\n      path.push(['L', points[1].x, points[1].y]);\n      path.push(['L', points[2].x, points[2].y]);\n      path.push(['L', points[3].x, points[3].y]);\n      path.push('Z');\n      path = this.parsePath(path); // 将 0 - 1 转化为画布坐标\n\n      return container.addShape('rect', {\n        attrs: {\n          x: path[1][1],\n          // 矩形起始点为左上角\n          y: path[1][2],\n          width: path[2][1] - path[1][1],\n          height: path[0][2] - path[1][2],\n          fill: cfg.color,\n          radius: (path[2][1] - path[1][1]) / 2\n        }\n      });\n    }\n  });\n  var activeData = [{\n    date: '2017年3月2日',\n    actual: 175,\n    expected: 900\n  }, {\n    date: '2017年3月3日',\n    actual: 137,\n    expected: 900\n  }, {\n    date: '2017年3月4日',\n    actual: 240,\n    expected: 900\n  }, {\n    date: '2017年3月5日',\n    actual: 726,\n    expected: 900\n  }, {\n    date: '2017年3月6日',\n    actual: 968,\n    expected: 900\n  }, {\n    date: '2017年3月7日',\n    actual: 702,\n    expected: 900\n  }, {\n    date: '2017年3月8日',\n    actual: 655,\n    expected: 900\n  }, {\n    date: '2017年3月9日',\n    actual: 463,\n    expected: 900\n  }, {\n    date: '2017年3月10日',\n    actual: 464,\n    expected: 900\n  }, {\n    date: '2017年3月12日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月13日',\n    actual: 638,\n    expected: 900\n  }, {\n    date: '2017年3月14日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月15日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月16日',\n    actual: 509,\n    expected: 900\n  }, {\n    date: '2017年3月17日',\n    actual: 269,\n    expected: 900\n  }, {\n    date: '2017年3月18日',\n    actual: 321,\n    expected: 900\n  }, {\n    date: '2017年3月19日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月20日',\n    actual: 399,\n    expected: 900\n  }, {\n    date: '2017年3月21日',\n    actual: 662,\n    expected: 900\n  }, {\n    date: '2017年3月22日',\n    actual: 689,\n    expected: 900\n  }, {\n    date: '2017年3月23日',\n    actual: 347,\n    expected: 900\n  }, {\n    date: '2017年3月24日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月26日',\n    actual: 428,\n    expected: 900\n  }, {\n    date: '2017年3月27日',\n    actual: 749,\n    expected: 900\n  }, {\n    date: '2017年3月28日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月29日',\n    actual: 0,\n    expected: 900\n  }, {\n    date: '2017年3月30日',\n    actual: 69.1,\n    expected: 900\n  }];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [150, 80]\n  });\n  chart.source(activeData, {\n    expected: {\n      ticks: [0, 900, 1200],\n      max: 1200 // 同步 expected 和 actual 的数值范围\n\n    },\n    actual: {\n      max: 1200 // 同步 expected 和 actual 的数值范围\n\n    }\n  });\n  chart.axis('date', false);\n  chart.axis('actual', false);\n  chart.axis('expected', {\n    line: null,\n    tickLine: null,\n    position: 'right',\n    label: {\n      formatter: function formatter(val) {\n        if (val === '1200') {\n          return '';\n        }\n\n        return val;\n      }\n    }\n  });\n  chart.legend(false);\n  chart.interval().position('date*expected').color('#752136').shape('borderRadius').tooltip('expected').opacity(0.6);\n  chart.interval().position('date*actual').color('#db0d2d').tooltip('actual').shape('date*actual', function (date, val) {\n    if (val === 0) {\n      return;\n    }\n\n    return 'borderRadius';\n  });\n  chart.guide().text({\n    position: ['min', 'max'],\n    content: '活动',\n    style: {\n      fill: '#ff2c55',\n      fontSize: 20,\n      fontWeight: 'bold',\n      textBaseline: 'top'\n    }\n  });\n  chart.guide().text({\n    position: ['max', 'max'],\n    content: '67 / 900 千卡',\n    style: {\n      fill: '#cbcbcb',\n      fontSize: 20,\n      textAlign: 'end',\n      textBaseline: 'top'\n    }\n  });\n  chart.render();\n});"},{"relativePath":"column/stack/demo/polar-stack.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/column/stack/demo/polar-stack.js","order":1,"filename":"polar-stack.js","title":{"en":"stacked column chart in polar coordinate","zh":"极坐标下的层叠柱状图"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*_SHeTbeHv-oAAAAAAAAAAABkARQnAQ","source":"const data = [\n  { year: '2000', '类型 A': 21.0, '类型 B': 16, '类型 C': 8 },\n  { year: '2001', '类型 A': 25.0, '类型 B': 16, '类型 C': 8 },\n  { year: '2002', '类型 A': 25.0, '类型 B': 15, '类型 C': 8 },\n  { year: '2003', '类型 A': 25.0, '类型 B': 14, '类型 C': 7 },\n  { year: '2004', '类型 A': 25.0, '类型 B': 14, '类型 C': 7 },\n  { year: '2005', '类型 A': 24.0, '类型 B': 13, '类型 C': 8 },\n  { year: '2006', '类型 A': 24.0, '类型 B': 14, '类型 C': 7 },\n  { year: '2007', '类型 A': 26.0, '类型 B': 16, '类型 C': 7 },\n  { year: '2008', '类型 A': 26.0, '类型 B': 15.2, '类型 C': 8 },\n  { year: '2009', '类型 A': 27.1, '类型 B': 15.2, '类型 C': 10 },\n  { year: '2010', '类型 A': 27.5, '类型 B': 15.4, '类型 C': 8 },\n  { year: '2011', '类型 A': 26.4, '类型 B': 15.2, '类型 C': 9 },\n  { year: '2012', '类型 A': 28.8, '类型 B': 15.4, '类型 C': 9 },\n  { year: '2013', '类型 A': 33.3, '类型 B': 16.7, '类型 C': 12 },\n  { year: '2014', '类型 A': 38.2, '类型 B': 19.5, '类型 C': 18 }\n];\nconst { DataView } = DataSet;\nconst dv = new DataView();\ndv.source(data)\n  .transform({\n    type: 'fold',\n    fields: [ '类型 A', '类型 B', '类型 C' ],\n    key: '难民类型',\n    value: 'count',\n    remains: 'year'\n  });\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: 'auto'\n});\nchart.source(dv);\nchart.coord('polar', { inner: 0.1 });\nchart.legend('难民类型', {\n  position: 'bottom'\n});\nchart.intervalStack()\n  .position('year*count')\n  .color('难民类型')\n  .style({\n    lineWidth: 1,\n    stroke: '#fff'\n  });\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.polarStack = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    year: '2000',\n    '类型 A': 21.0,\n    '类型 B': 16,\n    '类型 C': 8\n  }, {\n    year: '2001',\n    '类型 A': 25.0,\n    '类型 B': 16,\n    '类型 C': 8\n  }, {\n    year: '2002',\n    '类型 A': 25.0,\n    '类型 B': 15,\n    '类型 C': 8\n  }, {\n    year: '2003',\n    '类型 A': 25.0,\n    '类型 B': 14,\n    '类型 C': 7\n  }, {\n    year: '2004',\n    '类型 A': 25.0,\n    '类型 B': 14,\n    '类型 C': 7\n  }, {\n    year: '2005',\n    '类型 A': 24.0,\n    '类型 B': 13,\n    '类型 C': 8\n  }, {\n    year: '2006',\n    '类型 A': 24.0,\n    '类型 B': 14,\n    '类型 C': 7\n  }, {\n    year: '2007',\n    '类型 A': 26.0,\n    '类型 B': 16,\n    '类型 C': 7\n  }, {\n    year: '2008',\n    '类型 A': 26.0,\n    '类型 B': 15.2,\n    '类型 C': 8\n  }, {\n    year: '2009',\n    '类型 A': 27.1,\n    '类型 B': 15.2,\n    '类型 C': 10\n  }, {\n    year: '2010',\n    '类型 A': 27.5,\n    '类型 B': 15.4,\n    '类型 C': 8\n  }, {\n    year: '2011',\n    '类型 A': 26.4,\n    '类型 B': 15.2,\n    '类型 C': 9\n  }, {\n    year: '2012',\n    '类型 A': 28.8,\n    '类型 B': 15.4,\n    '类型 C': 9\n  }, {\n    year: '2013',\n    '类型 A': 33.3,\n    '类型 B': 16.7,\n    '类型 C': 12\n  }, {\n    year: '2014',\n    '类型 A': 38.2,\n    '类型 B': 19.5,\n    '类型 C': 18\n  }];\n  var _DataSet = DataSet,\n      DataView = _DataSet.DataView;\n  var dv = new DataView();\n  dv.source(data).transform({\n    type: 'fold',\n    fields: ['类型 A', '类型 B', '类型 C'],\n    key: '难民类型',\n    value: 'count',\n    remains: 'year'\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: 'auto'\n  });\n  chart.source(dv);\n  chart.coord('polar', {\n    inner: 0.1\n  });\n  chart.legend('难民类型', {\n    position: 'bottom'\n  });\n  chart.intervalStack().position('year*count').color('难民类型').style({\n    lineWidth: 1,\n    stroke: '#fff'\n  });\n  chart.render();\n});"},{"relativePath":"column/stack/demo/rounded-stacked.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/column/stack/demo/rounded-stacked.js","order":2,"filename":"rounded-stacked.js","title":{"en":"rounded stacked column chart","zh":"圆角堆叠柱状图"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*8Ky7QLBFxqoAAAAAAAAAAABkARQnAQ","source":"const { Chart, Shape, Util } = G2;\nfunction getFillAttrs(cfg) {\n  const attrs = Util.mix(cfg.style, {\n    fill: cfg.color,\n    fillOpacity: cfg.opacity\n  });\n  return attrs;\n}\nfunction getRectPath(points) {\n  const path = [];\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n    if (point) {\n      const action = i === 0 ? 'M' : 'L';\n      path.push([ action, point.x, point.y ]);\n    }\n  }\n  const first = points[0];\n  path.push([ 'L', first.x, first.y ]);\n  path.push([ 'z' ]);\n  return path;\n}\n// 顶边带圆角\nShape.registerShape('interval', 'top', {\n  draw(cfg, container) {\n    const attrs = getFillAttrs(cfg);\n    let path = getRectPath(cfg.points);\n    path = this.parsePath(path); // 将 0 - 1 的值转换为画布坐标\n    const radius = (path[2][1] - path[1][1]) / 2;\n    const temp = [];\n    temp.push([ 'M', path[0][1], path[0][2] ]);\n    temp.push([ 'L', path[1][1], path[1][2] + radius ]);\n    temp.push([ 'A', radius, radius, 90, 0, 1, path[1][1] + radius, path[1][2] ]);\n    temp.push([ 'L', path[2][1] - radius, path[2][2] ]);\n    temp.push([ 'A', radius, radius, 90, 0, 1, path[2][1], path[2][2] + radius ]);\n    temp.push([ 'L', path[3][1], path[3][2] ]);\n    temp.push([ 'Z' ]);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: temp\n      })\n    });\n  }\n});\n// 底边带圆角\nShape.registerShape('interval', 'bottom', {\n  draw(cfg, container) {\n    const attrs = getFillAttrs(cfg);\n    let path = getRectPath(cfg.points);\n    path = this.parsePath(path);\n    const radius = (path[2][1] - path[1][1]) / 2;\n    const temp = [];\n    temp.push([ 'M', path[0][1] + radius, path[0][2] ]);\n    temp.push([ 'A', radius, radius, 90, 0, 1, path[0][1], path[0][2] - radius ]);\n    temp.push([ 'L', path[1][1], path[1][2] ]);\n    temp.push([ 'L', path[2][1], path[2][2] ]);\n    temp.push([ 'L', path[3][1], path[3][2] - radius ]);\n    temp.push([ 'A', radius, radius, 90, 0, 1, path[3][1] - radius, path[3][2] ]);\n    temp.push([ 'Z' ]);\n    return container.addShape('path', {\n      attrs: Util.mix(attrs, {\n        path: temp\n      })\n    });\n  }\n});\nconst data = [\n  { year: '2014', type: 'Sales', sales: 1000 },\n  { year: '2015', type: 'Sales', sales: 1170 },\n  { year: '2016', type: 'Sales', sales: 660 },\n  { year: '2017', type: 'Sales', sales: 1030 },\n  { year: '2014', type: 'Expenses', sales: 400 },\n  { year: '2015', type: 'Expenses', sales: 460 },\n  { year: '2016', type: 'Expenses', sales: 1120 },\n  { year: '2017', type: 'Expenses', sales: 540 },\n  { year: '2014', type: 'Profit', sales: 300 },\n  { year: '2015', type: 'Profit', sales: 300 },\n  { year: '2016', type: 'Profit', sales: 300 },\n  { year: '2017', type: 'Profit', sales: 350 }\n];\nconst chart = new Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 20, 80, 80, 80 ]\n});\nchart.source(data, {\n  sales: {\n    max: 2400,\n    tickInterval: 600\n  }\n});\nconst axisCfg = {\n  label: {\n    textStyle: {\n      fontFamily: 'Monospace',\n      fontWeight: 700,\n      fontSize: 14,\n      fill: '#545454'\n    }\n  },\n  grid: {\n    lineStyle: {\n      lineDash: [ 0, 0 ],\n      stroke: '#545454'\n    }\n  }\n};\nchart.axis('year', axisCfg);\nchart.axis('sales', Util.mix({}, axisCfg, {\n  line: null\n}));\n\nchart.intervalStack()\n  .position('year*sales')\n  .color('type')\n  .size(35)\n  .shape('type', val => {\n    if (val === 'Profit') { // 顶部圆角\n      return 'bottom';\n    } else if (val === 'Sales') { // 底部圆角\n      return 'top';\n    }\n    return; // 其他默认\n  })\n  .style({\n    stroke: '#545454',\n    lineWidth: 2\n  });\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.roundedStacked = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var _G = G2,\n      Chart = _G.Chart,\n      Shape = _G.Shape,\n      Util = _G.Util;\n\n  function getFillAttrs(cfg) {\n    var attrs = Util.mix(cfg.style, {\n      fill: cfg.color,\n      fillOpacity: cfg.opacity\n    });\n    return attrs;\n  }\n\n  function getRectPath(points) {\n    var path = [];\n\n    for (var i = 0; i < points.length; i++) {\n      var point = points[i];\n\n      if (point) {\n        var action = i === 0 ? 'M' : 'L';\n        path.push([action, point.x, point.y]);\n      }\n    }\n\n    var first = points[0];\n    path.push(['L', first.x, first.y]);\n    path.push(['z']);\n    return path;\n  } // 顶边带圆角\n\n\n  Shape.registerShape('interval', 'top', {\n    draw: function draw(cfg, container) {\n      var attrs = getFillAttrs(cfg);\n      var path = getRectPath(cfg.points);\n      path = this.parsePath(path); // 将 0 - 1 的值转换为画布坐标\n\n      var radius = (path[2][1] - path[1][1]) / 2;\n      var temp = [];\n      temp.push(['M', path[0][1], path[0][2]]);\n      temp.push(['L', path[1][1], path[1][2] + radius]);\n      temp.push(['A', radius, radius, 90, 0, 1, path[1][1] + radius, path[1][2]]);\n      temp.push(['L', path[2][1] - radius, path[2][2]]);\n      temp.push(['A', radius, radius, 90, 0, 1, path[2][1], path[2][2] + radius]);\n      temp.push(['L', path[3][1], path[3][2]]);\n      temp.push(['Z']);\n      return container.addShape('path', {\n        attrs: Util.mix(attrs, {\n          path: temp\n        })\n      });\n    }\n  }); // 底边带圆角\n\n  Shape.registerShape('interval', 'bottom', {\n    draw: function draw(cfg, container) {\n      var attrs = getFillAttrs(cfg);\n      var path = getRectPath(cfg.points);\n      path = this.parsePath(path);\n      var radius = (path[2][1] - path[1][1]) / 2;\n      var temp = [];\n      temp.push(['M', path[0][1] + radius, path[0][2]]);\n      temp.push(['A', radius, radius, 90, 0, 1, path[0][1], path[0][2] - radius]);\n      temp.push(['L', path[1][1], path[1][2]]);\n      temp.push(['L', path[2][1], path[2][2]]);\n      temp.push(['L', path[3][1], path[3][2] - radius]);\n      temp.push(['A', radius, radius, 90, 0, 1, path[3][1] - radius, path[3][2]]);\n      temp.push(['Z']);\n      return container.addShape('path', {\n        attrs: Util.mix(attrs, {\n          path: temp\n        })\n      });\n    }\n  });\n  var data = [{\n    year: '2014',\n    type: 'Sales',\n    sales: 1000\n  }, {\n    year: '2015',\n    type: 'Sales',\n    sales: 1170\n  }, {\n    year: '2016',\n    type: 'Sales',\n    sales: 660\n  }, {\n    year: '2017',\n    type: 'Sales',\n    sales: 1030\n  }, {\n    year: '2014',\n    type: 'Expenses',\n    sales: 400\n  }, {\n    year: '2015',\n    type: 'Expenses',\n    sales: 460\n  }, {\n    year: '2016',\n    type: 'Expenses',\n    sales: 1120\n  }, {\n    year: '2017',\n    type: 'Expenses',\n    sales: 540\n  }, {\n    year: '2014',\n    type: 'Profit',\n    sales: 300\n  }, {\n    year: '2015',\n    type: 'Profit',\n    sales: 300\n  }, {\n    year: '2016',\n    type: 'Profit',\n    sales: 300\n  }, {\n    year: '2017',\n    type: 'Profit',\n    sales: 350\n  }];\n  var chart = new Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [20, 80, 80, 80]\n  });\n  chart.source(data, {\n    sales: {\n      max: 2400,\n      tickInterval: 600\n    }\n  });\n  var axisCfg = {\n    label: {\n      textStyle: {\n        fontFamily: 'Monospace',\n        fontWeight: 700,\n        fontSize: 14,\n        fill: '#545454'\n      }\n    },\n    grid: {\n      lineStyle: {\n        lineDash: [0, 0],\n        stroke: '#545454'\n      }\n    }\n  };\n  chart.axis('year', axisCfg);\n  chart.axis('sales', Util.mix({}, axisCfg, {\n    line: null\n  }));\n  chart.intervalStack().position('year*sales').color('type').size(35).shape('type', function (val) {\n    if (val === 'Profit') {\n      // 顶部圆角\n      return 'bottom';\n    } else if (val === 'Sales') {\n      // 底部圆角\n      return 'top';\n    }\n\n    return; // 其他默认\n  }).style({\n    stroke: '#545454',\n    lineWidth: 2\n  });\n  chart.render();\n});"},{"relativePath":"column/stack/demo/stacked.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/column/stack/demo/stacked.js","order":3,"filename":"stacked.js","title":{"en":"stacked column chart","zh":"堆叠柱状图"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*Rh1-QaJIcx0AAAAAAAAAAABkARQnAQ","source":"// 此处数据使用了按行组织的模式，所以需要使用 DataSet 的 fold 方法对数据进行加工\nconst data = [\n  { name: 'London', 'Jan.': 18.9, 'Feb.': 28.8, 'Mar.': 39.3, 'Apr.': 81.4, May: 47, 'Jun.': 20.3, 'Jul.': 24, 'Aug.': 35.6 },\n  { name: 'Berlin', 'Jan.': 12.4, 'Feb.': 23.2, 'Mar.': 34.5, 'Apr.': 99.7, May: 52.6, 'Jun.': 35.5, 'Jul.': 37.4, 'Aug.': 42.4 }\n];\nconst ds = new DataSet();\nconst dv = ds.createView().source(data);\ndv.transform({\n  type: 'fold',\n  fields: [ 'Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.' ], // 展开字段集\n  key: '月份', // key字段\n  value: '月均降雨量' // value字段\n});\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500\n});\nchart.source(dv);\nchart.intervalStack()\n  .position('月份*月均降雨量')\n  .color('name');\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.stacked = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  // 此处数据使用了按行组织的模式，所以需要使用 DataSet 的 fold 方法对数据进行加工\n  var data = [{\n    name: 'London',\n    'Jan.': 18.9,\n    'Feb.': 28.8,\n    'Mar.': 39.3,\n    'Apr.': 81.4,\n    May: 47,\n    'Jun.': 20.3,\n    'Jul.': 24,\n    'Aug.': 35.6\n  }, {\n    name: 'Berlin',\n    'Jan.': 12.4,\n    'Feb.': 23.2,\n    'Mar.': 34.5,\n    'Apr.': 99.7,\n    May: 52.6,\n    'Jun.': 35.5,\n    'Jul.': 37.4,\n    'Aug.': 42.4\n  }];\n  var ds = new DataSet();\n  var dv = ds.createView().source(data);\n  dv.transform({\n    type: 'fold',\n    fields: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.'],\n    // 展开字段集\n    key: '月份',\n    // key字段\n    value: '月均降雨量' // value字段\n\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500\n  });\n  chart.source(dv);\n  chart.intervalStack().position('月份*月均降雨量').color('name');\n  chart.render();\n});"},{"relativePath":"column/stack/demo/stacked-percentage.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/column/stack/demo/stacked-percentage.js","order":4,"filename":"stacked-percentage.js","title":{"en":"100% stacked column chart","zh":"百分比堆叠柱状图"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*oIKmQLZxqlEAAAAAAAAAAABkARQnAQ","source":"\nconst data = [\n  { country: 'Europe', year: '1750', value: 163 },\n  { country: 'Europe', year: '1800', value: 203 },\n  { country: 'Europe', year: '1850', value: 276 },\n  { country: 'Europe', year: '1900', value: 408 },\n  { country: 'Europe', year: '1950', value: 547 },\n  { country: 'Europe', year: '1999', value: 729 },\n  { country: 'Europe', year: '2050', value: 628 },\n  { country: 'Europe', year: '2100', value: 828 },\n  { country: 'Asia', year: '1750', value: 502 },\n  { country: 'Asia', year: '1800', value: 635 },\n  { country: 'Asia', year: '1850', value: 809 },\n  { country: 'Asia', year: '1900', value: 947 },\n  { country: 'Asia', year: '1950', value: 1402 },\n  { country: 'Asia', year: '1999', value: 3634 },\n  { country: 'Asia', year: '2050', value: 5268 },\n  { country: 'Asia', year: '2100', value: 7268 }\n];\n// 计算每个柱子的占比\nconst ds = new DataSet();\nconst dv = ds.createView()\n  .source(data)\n  .transform({\n    type: 'percent',\n    field: 'value',       // 统计销量\n    dimension: 'country',   // 每年的占比\n    groupBy: [ 'year' ], // 以不同产品类别为分组\n    as: 'percent'\n  });\n\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500\n});\nchart.source(dv, {\n  percent: {\n    min: 0,\n    formatter(val) {\n      return (val * 100).toFixed(2) + '%';\n    }\n  }\n});\nchart.intervalStack()\n  .position('year*percent')\n  .color('country');\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.stackedPercentage = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    country: 'Europe',\n    year: '1750',\n    value: 163\n  }, {\n    country: 'Europe',\n    year: '1800',\n    value: 203\n  }, {\n    country: 'Europe',\n    year: '1850',\n    value: 276\n  }, {\n    country: 'Europe',\n    year: '1900',\n    value: 408\n  }, {\n    country: 'Europe',\n    year: '1950',\n    value: 547\n  }, {\n    country: 'Europe',\n    year: '1999',\n    value: 729\n  }, {\n    country: 'Europe',\n    year: '2050',\n    value: 628\n  }, {\n    country: 'Europe',\n    year: '2100',\n    value: 828\n  }, {\n    country: 'Asia',\n    year: '1750',\n    value: 502\n  }, {\n    country: 'Asia',\n    year: '1800',\n    value: 635\n  }, {\n    country: 'Asia',\n    year: '1850',\n    value: 809\n  }, {\n    country: 'Asia',\n    year: '1900',\n    value: 947\n  }, {\n    country: 'Asia',\n    year: '1950',\n    value: 1402\n  }, {\n    country: 'Asia',\n    year: '1999',\n    value: 3634\n  }, {\n    country: 'Asia',\n    year: '2050',\n    value: 5268\n  }, {\n    country: 'Asia',\n    year: '2100',\n    value: 7268\n  }]; // 计算每个柱子的占比\n\n  var ds = new DataSet();\n  var dv = ds.createView().source(data).transform({\n    type: 'percent',\n    field: 'value',\n    // 统计销量\n    dimension: 'country',\n    // 每年的占比\n    groupBy: ['year'],\n    // 以不同产品类别为分组\n    as: 'percent'\n  });\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500\n  });\n  chart.source(dv, {\n    percent: {\n      min: 0,\n      formatter: function formatter(val) {\n        return (val * 100).toFixed(2) + '%';\n      }\n    }\n  });\n  chart.intervalStack().position('year*percent').color('country');\n  chart.render();\n});"},{"relativePath":"column/stack/demo/wind-rose.js","absolutePath":"/Users/weixingzhang/workspace/AntV/G2-v4.0/g2-v3/3.5/examples/column/stack/demo/wind-rose.js","order":5,"filename":"wind-rose.js","title":{"en":"Wind Rose","zh":"Wind Rose"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_2274c3/afts/img/A*N_MUSb3mF-MAAAAAAAAAAABkARQnAQ","source":"const data = [\n  { direction: 'N', level: '< 0.5 m/s', value: 1.81 },\n  { direction: 'N', level: '0.5-2 m/s', value: 1.78 },\n  { direction: 'N', level: '2-4 m/s', value: 0.16 },\n  { direction: 'N', level: '4-6 m/s', value: 0.00 },\n  { direction: 'N', level: '6-8 m/s', value: 0.00 },\n  { direction: 'N', level: '8-10 m/s', value: 0.00 },\n  { direction: 'N', level: '> 10 m/s', value: 0.00 },\n  { direction: 'NNE', level: '< 0.5 m/s', value: 0.62 },\n  { direction: 'NNE', level: '0.5-2 m/s', value: 1.09 },\n  { direction: 'NNE', level: '2-4 m/s', value: 0.00 },\n  { direction: 'NNE', level: '4-6 m/s', value: 0.00 },\n  { direction: 'NNE', level: '6-8 m/s', value: 0.00 },\n  { direction: 'NNE', level: '8-10 m/s', value: 0.00 },\n  { direction: 'NNE', level: '> 10 m/s', value: 0.00 },\n  { direction: 'NE', level: '< 0.5 m/s', value: 0.82 },\n  { direction: 'NE', level: '0.5-2 m/s', value: 0.82 },\n  { direction: 'NE', level: '2-4 m/s', value: 0.07 },\n  { direction: 'NE', level: '4-6 m/s', value: 0.00 },\n  { direction: 'NE', level: '6-8 m/s', value: 0.00 },\n  { direction: 'NE', level: '8-10 m/s', value: 0.00 },\n  { direction: 'NE', level: '> 10 m/s', value: 0.00 },\n  { direction: 'ENE', level: '< 0.5 m/s', value: 0.59 },\n  { direction: 'ENE', level: '0.5-2 m/s', value: 1.22 },\n  { direction: 'ENE', level: '2-4 m/s', value: 0.07 },\n  { direction: 'ENE', level: '4-6 m/s', value: 0.00 },\n  { direction: 'ENE', level: '6-8 m/s', value: 0.00 },\n  { direction: 'ENE', level: '8-10 m/s', value: 0.00 },\n  { direction: 'ENE', level: '> 10 m/s', value: 0.00 },\n  { direction: 'E', level: '< 0.5 m/s', value: 0.62 },\n  { direction: 'E', level: '0.5-2 m/s', value: 2.20 },\n  { direction: 'E', level: '2-4 m/s', value: 0.49 },\n  { direction: 'E', level: '4-6 m/s', value: 0.00 },\n  { direction: 'E', level: '6-8 m/s', value: 0.00 },\n  { direction: 'E', level: '8-10 m/s', value: 0.00 },\n  { direction: 'E', level: '> 10 m/s', value: 0.00 },\n  { direction: 'ESE', level: '< 0.5 m/s', value: 1.22 },\n  { direction: 'ESE', level: '0.5-2 m/s', value: 2.01 },\n  { direction: 'ESE', level: '2-4 m/s', value: 1.55 },\n  { direction: 'ESE', level: '4-6 m/s', value: 0.30 },\n  { direction: 'ESE', level: '6-8 m/s', value: 0.13 },\n  { direction: 'ESE', level: '8-10 m/s', value: 0.00 },\n  { direction: 'ESE', level: '> 10 m/s', value: 0.00 },\n  { direction: 'SE', level: '< 0.5 m/s', value: 1.61 },\n  { direction: 'SE', level: '0.5-2 m/s', value: 3.06 },\n  { direction: 'SE', level: '2-4 m/s', value: 2.37 },\n  { direction: 'SE', level: '4-6 m/s', value: 2.14 },\n  { direction: 'SE', level: '6-8 m/s', value: 1.74 },\n  { direction: 'SE', level: '8-10 m/s', value: 0.39 },\n  { direction: 'SE', level: '> 10 m/s', value: 0.13 },\n  { direction: 'SSE', level: '< 0.5 m/s', value: 2.04 },\n  { direction: 'SSE', level: '0.5-2 m/s', value: 3.42 },\n  { direction: 'SSE', level: '2-4 m/s', value: 1.97 },\n  { direction: 'SSE', level: '4-6 m/s', value: 0.86 },\n  { direction: 'SSE', level: '6-8 m/s', value: 0.53 },\n  { direction: 'SSE', level: '8-10 m/s', value: 0.49 },\n  { direction: 'SSE', level: '> 10 m/s', value: 0.00 },\n  { direction: 'S', level: '< 0.5 m/s', value: 2.66 },\n  { direction: 'S', level: '0.5-2 m/s', value: 4.74 },\n  { direction: 'S', level: '2-4 m/s', value: 0.64 },\n  { direction: 'S', level: '4-6 m/s', value: 0.00 },\n  { direction: 'S', level: '6-8 m/s', value: 0.00 },\n  { direction: 'S', level: '8-10 m/s', value: 0.49 },\n  { direction: 'S', level: '> 10 m/s', value: 0.00 },\n  { direction: 'SSW', level: '< 0.5 m/s', value: 2.96 },\n  { direction: 'SSW', level: '0.5-2 m/s', value: 4.23 },\n  { direction: 'SSW', level: '2-4 m/s', value: 0.34 },\n  { direction: 'SSW', level: '4-6 m/s', value: 1.03 },\n  { direction: 'SSW', level: '6-8 m/s', value: 0.30 },\n  { direction: 'SSW', level: '8-10 m/s', value: 0.00 },\n  { direction: 'SSW', level: '> 10 m/s', value: 0.00 },\n  { direction: 'SW', level: '< 0.5 m/s', value: 2.53 },\n  { direction: 'SW', level: '0.5-2 m/s', value: 4.01 },\n  { direction: 'SW', level: '2-4 m/s', value: 1.22 },\n  { direction: 'SW', level: '4-6 m/s', value: 0.49 },\n  { direction: 'SW', level: '6-8 m/s', value: 0.13 },\n  { direction: 'SW', level: '8-10 m/s', value: 0.00 },\n  { direction: 'SW', level: '> 10 m/s', value: 0.00 },\n  { direction: 'WSW', level: '< 0.5 m/s', value: 1.97 },\n  { direction: 'WSW', level: '0.5-2 m/s', value: 2.66 },\n  { direction: 'WSW', level: '2-4 m/s', value: 1.97 },\n  { direction: 'WSW', level: '4-6 m/s', value: 0.79 },\n  { direction: 'WSW', level: '6-8 m/s', value: 0.30 },\n  { direction: 'WSW', level: '8-10 m/s', value: 0.00 },\n  { direction: 'WSW', level: '> 10 m/s', value: 0.00 },\n  { direction: 'W', level: '< 0.5 m/s', value: 1.64 },\n  { direction: 'W', level: '0.5-2 m/s', value: 1.71 },\n  { direction: 'W', level: '2-4 m/s', value: 0.92 },\n  { direction: 'W', level: '4-6 m/s', value: 1.45 },\n  { direction: 'W', level: '6-8 m/s', value: 0.26 },\n  { direction: 'W', level: '8-10 m/s', value: 0.10 },\n  { direction: 'W', level: '> 10 m/s', value: 0.00 },\n  { direction: 'WNW', level: '< 0.5 m/s', value: 1.32 },\n  { direction: 'WNW', level: '0.5-2 m/s', value: 2.40 },\n  { direction: 'WNW', level: '2-4 m/s', value: 0.99 },\n  { direction: 'WNW', level: '4-6 m/s', value: 1.61 },\n  { direction: 'WNW', level: '6-8 m/s', value: 0.33 },\n  { direction: 'WNW', level: '8-10 m/s', value: 0.00 },\n  { direction: 'WNW', level: '> 10 m/s', value: 0.00 },\n  { direction: 'NW', level: '< 0.5 m/s', value: 1.58 },\n  { direction: 'NW', level: '0.5-2 m/s', value: 4.28 },\n  { direction: 'NW', level: '2-4 m/s', value: 1.28 },\n  { direction: 'NW', level: '4-6 m/s', value: 0.76 },\n  { direction: 'NW', level: '6-8 m/s', value: 0.66 },\n  { direction: 'NW', level: '8-10 m/s', value: 0.69 },\n  { direction: 'NW', level: '> 10 m/s', value: 0.03 },\n  { direction: 'NNW', level: '< 0.5 m/s', value: 1.51 },\n  { direction: 'NNW', level: '0.5-2 m/s', value: 5.00 },\n  { direction: 'NNW', level: '2-4 m/s', value: 1.32 },\n  { direction: 'NNW', level: '4-6 m/s', value: 0.13 },\n  { direction: 'NNW', level: '6-8 m/s', value: 0.23 },\n  { direction: 'NNW', level: '8-10 m/s', value: 0.13 },\n  { direction: 'NNW', level: '> 10 m/s', value: 0.07 }\n];\nconst colors = [ /* '#FFF1B8', */'#E3F4BF', '#BEF7C8', '#86E6C8', '#36CFC9', '#209BDD', '#1581E6', '#0860BF' ];\nconst chart = new G2.Chart({\n  container: 'container',\n  forceFit: true,\n  height: 500,\n  padding: [ 40, 100, 80 ]\n});\nchart.source(data);\nchart.coord('polar', {\n  radius: 0.85\n});\nchart.legend({\n  position: 'bottom',\n  useHtml: true,\n  offset: 30,\n  itemTpl: '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' +\n    '<div class=\"g2-legend-marker\" style=\"background-color:{color};\"></div>' +\n    '<div class=\"g2-legend-text\">{value}</div>'\n    + '</li>',\n  'g2-legend-list-item': {\n    width: '60px',\n    textAlign: 'center',\n    marginRight: 0\n  },\n  'g2-legend-marker': {\n    width: '100%',\n    height: '8px',\n    borderRadius: 0,\n    border: '1px solid #fff'\n  }\n});\nchart.axis('value', {\n  label: {\n    offset: 0,\n    textStyle: {\n      textAlign: 'center'\n    }\n  },\n  tickLine: null,\n  line: {\n    stroke: '#E9E9E9',\n    lineDash: [ 3, 3 ]\n  },\n  grid: {\n    line: {\n      lineDash: [ 0, 0 ]\n    }\n  }// 设置坐标系栅格样式\n});\nchart.intervalStack()\n  .position('direction*value')\n  .color('level', colors)\n  .size(35);\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.windRose = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function () {\n  \"use strict\";\n\n  var data = [{\n    direction: 'N',\n    level: '< 0.5 m/s',\n    value: 1.81\n  }, {\n    direction: 'N',\n    level: '0.5-2 m/s',\n    value: 1.78\n  }, {\n    direction: 'N',\n    level: '2-4 m/s',\n    value: 0.16\n  }, {\n    direction: 'N',\n    level: '4-6 m/s',\n    value: 0.00\n  }, {\n    direction: 'N',\n    level: '6-8 m/s',\n    value: 0.00\n  }, {\n    direction: 'N',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'N',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'NNE',\n    level: '< 0.5 m/s',\n    value: 0.62\n  }, {\n    direction: 'NNE',\n    level: '0.5-2 m/s',\n    value: 1.09\n  }, {\n    direction: 'NNE',\n    level: '2-4 m/s',\n    value: 0.00\n  }, {\n    direction: 'NNE',\n    level: '4-6 m/s',\n    value: 0.00\n  }, {\n    direction: 'NNE',\n    level: '6-8 m/s',\n    value: 0.00\n  }, {\n    direction: 'NNE',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'NNE',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'NE',\n    level: '< 0.5 m/s',\n    value: 0.82\n  }, {\n    direction: 'NE',\n    level: '0.5-2 m/s',\n    value: 0.82\n  }, {\n    direction: 'NE',\n    level: '2-4 m/s',\n    value: 0.07\n  }, {\n    direction: 'NE',\n    level: '4-6 m/s',\n    value: 0.00\n  }, {\n    direction: 'NE',\n    level: '6-8 m/s',\n    value: 0.00\n  }, {\n    direction: 'NE',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'NE',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'ENE',\n    level: '< 0.5 m/s',\n    value: 0.59\n  }, {\n    direction: 'ENE',\n    level: '0.5-2 m/s',\n    value: 1.22\n  }, {\n    direction: 'ENE',\n    level: '2-4 m/s',\n    value: 0.07\n  }, {\n    direction: 'ENE',\n    level: '4-6 m/s',\n    value: 0.00\n  }, {\n    direction: 'ENE',\n    level: '6-8 m/s',\n    value: 0.00\n  }, {\n    direction: 'ENE',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'ENE',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'E',\n    level: '< 0.5 m/s',\n    value: 0.62\n  }, {\n    direction: 'E',\n    level: '0.5-2 m/s',\n    value: 2.20\n  }, {\n    direction: 'E',\n    level: '2-4 m/s',\n    value: 0.49\n  }, {\n    direction: 'E',\n    level: '4-6 m/s',\n    value: 0.00\n  }, {\n    direction: 'E',\n    level: '6-8 m/s',\n    value: 0.00\n  }, {\n    direction: 'E',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'E',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'ESE',\n    level: '< 0.5 m/s',\n    value: 1.22\n  }, {\n    direction: 'ESE',\n    level: '0.5-2 m/s',\n    value: 2.01\n  }, {\n    direction: 'ESE',\n    level: '2-4 m/s',\n    value: 1.55\n  }, {\n    direction: 'ESE',\n    level: '4-6 m/s',\n    value: 0.30\n  }, {\n    direction: 'ESE',\n    level: '6-8 m/s',\n    value: 0.13\n  }, {\n    direction: 'ESE',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'ESE',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'SE',\n    level: '< 0.5 m/s',\n    value: 1.61\n  }, {\n    direction: 'SE',\n    level: '0.5-2 m/s',\n    value: 3.06\n  }, {\n    direction: 'SE',\n    level: '2-4 m/s',\n    value: 2.37\n  }, {\n    direction: 'SE',\n    level: '4-6 m/s',\n    value: 2.14\n  }, {\n    direction: 'SE',\n    level: '6-8 m/s',\n    value: 1.74\n  }, {\n    direction: 'SE',\n    level: '8-10 m/s',\n    value: 0.39\n  }, {\n    direction: 'SE',\n    level: '> 10 m/s',\n    value: 0.13\n  }, {\n    direction: 'SSE',\n    level: '< 0.5 m/s',\n    value: 2.04\n  }, {\n    direction: 'SSE',\n    level: '0.5-2 m/s',\n    value: 3.42\n  }, {\n    direction: 'SSE',\n    level: '2-4 m/s',\n    value: 1.97\n  }, {\n    direction: 'SSE',\n    level: '4-6 m/s',\n    value: 0.86\n  }, {\n    direction: 'SSE',\n    level: '6-8 m/s',\n    value: 0.53\n  }, {\n    direction: 'SSE',\n    level: '8-10 m/s',\n    value: 0.49\n  }, {\n    direction: 'SSE',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'S',\n    level: '< 0.5 m/s',\n    value: 2.66\n  }, {\n    direction: 'S',\n    level: '0.5-2 m/s',\n    value: 4.74\n  }, {\n    direction: 'S',\n    level: '2-4 m/s',\n    value: 0.64\n  }, {\n    direction: 'S',\n    level: '4-6 m/s',\n    value: 0.00\n  }, {\n    direction: 'S',\n    level: '6-8 m/s',\n    value: 0.00\n  }, {\n    direction: 'S',\n    level: '8-10 m/s',\n    value: 0.49\n  }, {\n    direction: 'S',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'SSW',\n    level: '< 0.5 m/s',\n    value: 2.96\n  }, {\n    direction: 'SSW',\n    level: '0.5-2 m/s',\n    value: 4.23\n  }, {\n    direction: 'SSW',\n    level: '2-4 m/s',\n    value: 0.34\n  }, {\n    direction: 'SSW',\n    level: '4-6 m/s',\n    value: 1.03\n  }, {\n    direction: 'SSW',\n    level: '6-8 m/s',\n    value: 0.30\n  }, {\n    direction: 'SSW',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'SSW',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'SW',\n    level: '< 0.5 m/s',\n    value: 2.53\n  }, {\n    direction: 'SW',\n    level: '0.5-2 m/s',\n    value: 4.01\n  }, {\n    direction: 'SW',\n    level: '2-4 m/s',\n    value: 1.22\n  }, {\n    direction: 'SW',\n    level: '4-6 m/s',\n    value: 0.49\n  }, {\n    direction: 'SW',\n    level: '6-8 m/s',\n    value: 0.13\n  }, {\n    direction: 'SW',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'SW',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'WSW',\n    level: '< 0.5 m/s',\n    value: 1.97\n  }, {\n    direction: 'WSW',\n    level: '0.5-2 m/s',\n    value: 2.66\n  }, {\n    direction: 'WSW',\n    level: '2-4 m/s',\n    value: 1.97\n  }, {\n    direction: 'WSW',\n    level: '4-6 m/s',\n    value: 0.79\n  }, {\n    direction: 'WSW',\n    level: '6-8 m/s',\n    value: 0.30\n  }, {\n    direction: 'WSW',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'WSW',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'W',\n    level: '< 0.5 m/s',\n    value: 1.64\n  }, {\n    direction: 'W',\n    level: '0.5-2 m/s',\n    value: 1.71\n  }, {\n    direction: 'W',\n    level: '2-4 m/s',\n    value: 0.92\n  }, {\n    direction: 'W',\n    level: '4-6 m/s',\n    value: 1.45\n  }, {\n    direction: 'W',\n    level: '6-8 m/s',\n    value: 0.26\n  }, {\n    direction: 'W',\n    level: '8-10 m/s',\n    value: 0.10\n  }, {\n    direction: 'W',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'WNW',\n    level: '< 0.5 m/s',\n    value: 1.32\n  }, {\n    direction: 'WNW',\n    level: '0.5-2 m/s',\n    value: 2.40\n  }, {\n    direction: 'WNW',\n    level: '2-4 m/s',\n    value: 0.99\n  }, {\n    direction: 'WNW',\n    level: '4-6 m/s',\n    value: 1.61\n  }, {\n    direction: 'WNW',\n    level: '6-8 m/s',\n    value: 0.33\n  }, {\n    direction: 'WNW',\n    level: '8-10 m/s',\n    value: 0.00\n  }, {\n    direction: 'WNW',\n    level: '> 10 m/s',\n    value: 0.00\n  }, {\n    direction: 'NW',\n    level: '< 0.5 m/s',\n    value: 1.58\n  }, {\n    direction: 'NW',\n    level: '0.5-2 m/s',\n    value: 4.28\n  }, {\n    direction: 'NW',\n    level: '2-4 m/s',\n    value: 1.28\n  }, {\n    direction: 'NW',\n    level: '4-6 m/s',\n    value: 0.76\n  }, {\n    direction: 'NW',\n    level: '6-8 m/s',\n    value: 0.66\n  }, {\n    direction: 'NW',\n    level: '8-10 m/s',\n    value: 0.69\n  }, {\n    direction: 'NW',\n    level: '> 10 m/s',\n    value: 0.03\n  }, {\n    direction: 'NNW',\n    level: '< 0.5 m/s',\n    value: 1.51\n  }, {\n    direction: 'NNW',\n    level: '0.5-2 m/s',\n    value: 5.00\n  }, {\n    direction: 'NNW',\n    level: '2-4 m/s',\n    value: 1.32\n  }, {\n    direction: 'NNW',\n    level: '4-6 m/s',\n    value: 0.13\n  }, {\n    direction: 'NNW',\n    level: '6-8 m/s',\n    value: 0.23\n  }, {\n    direction: 'NNW',\n    level: '8-10 m/s',\n    value: 0.13\n  }, {\n    direction: 'NNW',\n    level: '> 10 m/s',\n    value: 0.07\n  }];\n  var colors = [\n  /* '#FFF1B8', */\n  '#E3F4BF', '#BEF7C8', '#86E6C8', '#36CFC9', '#209BDD', '#1581E6', '#0860BF'];\n  var chart = new G2.Chart({\n    container: 'container',\n    forceFit: true,\n    height: 500,\n    padding: [40, 100, 80]\n  });\n  chart.source(data);\n  chart.coord('polar', {\n    radius: 0.85\n  });\n  chart.legend({\n    position: 'bottom',\n    useHtml: true,\n    offset: 30,\n    itemTpl: '<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\">' + '<div class=\"g2-legend-marker\" style=\"background-color:{color};\"></div>' + '<div class=\"g2-legend-text\">{value}</div>' + '</li>',\n    'g2-legend-list-item': {\n      width: '60px',\n      textAlign: 'center',\n      marginRight: 0\n    },\n    'g2-legend-marker': {\n      width: '100%',\n      height: '8px',\n      borderRadius: 0,\n      border: '1px solid #fff'\n    }\n  });\n  chart.axis('value', {\n    label: {\n      offset: 0,\n      textStyle: {\n        textAlign: 'center'\n      }\n    },\n    tickLine: null,\n    line: {\n      stroke: '#E9E9E9',\n      lineDash: [3, 3]\n    },\n    grid: {\n      line: {\n        lineDash: [0, 0]\n      }\n    } // 设置坐标系栅格样式\n\n  });\n  chart.intervalStack().position('direction*value').color('level', colors).size(35);\n  chart.render();\n});"}]}}}}